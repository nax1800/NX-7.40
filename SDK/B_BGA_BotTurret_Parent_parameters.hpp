#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_BGA_BotTurret_Parent

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "FBotTurretData_structs.hpp"


namespace SDK::Params
{

// Function B_BGA_BotTurret_Parent.B_BGA_BotTurret_Parent_C.BotFired__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct B_BGA_BotTurret_Parent_C_BotFired__DelegateSignature final
{
public:
	int32                                         Left;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_BGA_BotTurret_Parent_C_BotFired__DelegateSignature) == 0x000004, "Wrong alignment on B_BGA_BotTurret_Parent_C_BotFired__DelegateSignature");
static_assert(sizeof(B_BGA_BotTurret_Parent_C_BotFired__DelegateSignature) == 0x000004, "Wrong size on B_BGA_BotTurret_Parent_C_BotFired__DelegateSignature");
static_assert(offsetof(B_BGA_BotTurret_Parent_C_BotFired__DelegateSignature, Left) == 0x000000, "Member 'B_BGA_BotTurret_Parent_C_BotFired__DelegateSignature::Left' has a wrong offset!");

// Function B_BGA_BotTurret_Parent.B_BGA_BotTurret_Parent_C.ExecuteUbergraph_B_BGA_BotTurret_Parent
// 0x0078 (0x0078 - 0x0000)
struct B_BGA_BotTurret_Parent_C_ExecuteUbergraph_B_BGA_BotTurret_Parent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortAIPawn*                            K2Node_CustomEvent_Target;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_WarmUpTime;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_BotDuration;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_FireRate;                       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Radius;                         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_RadiusDefault;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_ExplosionUpgrade;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFBotTurretData                        K2Node_MakeStruct_FBotTurretData;                  // 0x002C(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue1;                // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        CallFunc_GetPlayerPawn_AsFort_Player_Pawn;         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        CallFunc_GetPlayerPawn_AsFort_Player_Pawn1;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DestroyedActor;                 // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        CallFunc_GetPlayerPawn_AsFort_Player_Pawn2;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* DestroyedActor)> K2Node_CreateDelegate_OutputDelegate;              // 0x0068(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(B_BGA_BotTurret_Parent_C_ExecuteUbergraph_B_BGA_BotTurret_Parent) == 0x000008, "Wrong alignment on B_BGA_BotTurret_Parent_C_ExecuteUbergraph_B_BGA_BotTurret_Parent");
static_assert(sizeof(B_BGA_BotTurret_Parent_C_ExecuteUbergraph_B_BGA_BotTurret_Parent) == 0x000078, "Wrong size on B_BGA_BotTurret_Parent_C_ExecuteUbergraph_B_BGA_BotTurret_Parent");
static_assert(offsetof(B_BGA_BotTurret_Parent_C_ExecuteUbergraph_B_BGA_BotTurret_Parent, EntryPoint) == 0x000000, "Member 'B_BGA_BotTurret_Parent_C_ExecuteUbergraph_B_BGA_BotTurret_Parent::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_Parent_C_ExecuteUbergraph_B_BGA_BotTurret_Parent, CallFunc_HasAuthority_ReturnValue) == 0x000004, "Member 'B_BGA_BotTurret_Parent_C_ExecuteUbergraph_B_BGA_BotTurret_Parent::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_Parent_C_ExecuteUbergraph_B_BGA_BotTurret_Parent, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000005, "Member 'B_BGA_BotTurret_Parent_C_ExecuteUbergraph_B_BGA_BotTurret_Parent::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_Parent_C_ExecuteUbergraph_B_BGA_BotTurret_Parent, K2Node_CustomEvent_Target) == 0x000008, "Member 'B_BGA_BotTurret_Parent_C_ExecuteUbergraph_B_BGA_BotTurret_Parent::K2Node_CustomEvent_Target' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_Parent_C_ExecuteUbergraph_B_BGA_BotTurret_Parent, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000010, "Member 'B_BGA_BotTurret_Parent_C_ExecuteUbergraph_B_BGA_BotTurret_Parent::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_Parent_C_ExecuteUbergraph_B_BGA_BotTurret_Parent, K2Node_CustomEvent_WarmUpTime) == 0x000014, "Member 'B_BGA_BotTurret_Parent_C_ExecuteUbergraph_B_BGA_BotTurret_Parent::K2Node_CustomEvent_WarmUpTime' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_Parent_C_ExecuteUbergraph_B_BGA_BotTurret_Parent, K2Node_CustomEvent_BotDuration) == 0x000018, "Member 'B_BGA_BotTurret_Parent_C_ExecuteUbergraph_B_BGA_BotTurret_Parent::K2Node_CustomEvent_BotDuration' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_Parent_C_ExecuteUbergraph_B_BGA_BotTurret_Parent, K2Node_CustomEvent_FireRate) == 0x00001C, "Member 'B_BGA_BotTurret_Parent_C_ExecuteUbergraph_B_BGA_BotTurret_Parent::K2Node_CustomEvent_FireRate' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_Parent_C_ExecuteUbergraph_B_BGA_BotTurret_Parent, K2Node_CustomEvent_Radius) == 0x000020, "Member 'B_BGA_BotTurret_Parent_C_ExecuteUbergraph_B_BGA_BotTurret_Parent::K2Node_CustomEvent_Radius' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_Parent_C_ExecuteUbergraph_B_BGA_BotTurret_Parent, K2Node_CustomEvent_RadiusDefault) == 0x000024, "Member 'B_BGA_BotTurret_Parent_C_ExecuteUbergraph_B_BGA_BotTurret_Parent::K2Node_CustomEvent_RadiusDefault' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_Parent_C_ExecuteUbergraph_B_BGA_BotTurret_Parent, K2Node_CustomEvent_ExplosionUpgrade) == 0x000028, "Member 'B_BGA_BotTurret_Parent_C_ExecuteUbergraph_B_BGA_BotTurret_Parent::K2Node_CustomEvent_ExplosionUpgrade' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_Parent_C_ExecuteUbergraph_B_BGA_BotTurret_Parent, K2Node_MakeStruct_FBotTurretData) == 0x00002C, "Member 'B_BGA_BotTurret_Parent_C_ExecuteUbergraph_B_BGA_BotTurret_Parent::K2Node_MakeStruct_FBotTurretData' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_Parent_C_ExecuteUbergraph_B_BGA_BotTurret_Parent, CallFunc_HasAuthority_ReturnValue1) == 0x000044, "Member 'B_BGA_BotTurret_Parent_C_ExecuteUbergraph_B_BGA_BotTurret_Parent::CallFunc_HasAuthority_ReturnValue1' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_Parent_C_ExecuteUbergraph_B_BGA_BotTurret_Parent, CallFunc_GetPlayerPawn_AsFort_Player_Pawn) == 0x000048, "Member 'B_BGA_BotTurret_Parent_C_ExecuteUbergraph_B_BGA_BotTurret_Parent::CallFunc_GetPlayerPawn_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_Parent_C_ExecuteUbergraph_B_BGA_BotTurret_Parent, CallFunc_GetPlayerPawn_AsFort_Player_Pawn1) == 0x000050, "Member 'B_BGA_BotTurret_Parent_C_ExecuteUbergraph_B_BGA_BotTurret_Parent::CallFunc_GetPlayerPawn_AsFort_Player_Pawn1' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_Parent_C_ExecuteUbergraph_B_BGA_BotTurret_Parent, K2Node_CustomEvent_DestroyedActor) == 0x000058, "Member 'B_BGA_BotTurret_Parent_C_ExecuteUbergraph_B_BGA_BotTurret_Parent::K2Node_CustomEvent_DestroyedActor' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_Parent_C_ExecuteUbergraph_B_BGA_BotTurret_Parent, CallFunc_GetPlayerPawn_AsFort_Player_Pawn2) == 0x000060, "Member 'B_BGA_BotTurret_Parent_C_ExecuteUbergraph_B_BGA_BotTurret_Parent::CallFunc_GetPlayerPawn_AsFort_Player_Pawn2' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_Parent_C_ExecuteUbergraph_B_BGA_BotTurret_Parent, K2Node_CreateDelegate_OutputDelegate) == 0x000068, "Member 'B_BGA_BotTurret_Parent_C_ExecuteUbergraph_B_BGA_BotTurret_Parent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function B_BGA_BotTurret_Parent.B_BGA_BotTurret_Parent_C.Destroyed
// 0x0008 (0x0008 - 0x0000)
struct B_BGA_BotTurret_Parent_C_Destroyed final
{
public:
	class AActor*                                 DestroyedActor;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_BGA_BotTurret_Parent_C_Destroyed) == 0x000008, "Wrong alignment on B_BGA_BotTurret_Parent_C_Destroyed");
static_assert(sizeof(B_BGA_BotTurret_Parent_C_Destroyed) == 0x000008, "Wrong size on B_BGA_BotTurret_Parent_C_Destroyed");
static_assert(offsetof(B_BGA_BotTurret_Parent_C_Destroyed, DestroyedActor) == 0x000000, "Member 'B_BGA_BotTurret_Parent_C_Destroyed::DestroyedActor' has a wrong offset!");

// Function B_BGA_BotTurret_Parent.B_BGA_BotTurret_Parent_C.SetTarget
// 0x0008 (0x0008 - 0x0000)
struct B_BGA_BotTurret_Parent_C_SetTarget final
{
public:
	class AFortAIPawn*                            Param_Target;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_BGA_BotTurret_Parent_C_SetTarget) == 0x000008, "Wrong alignment on B_BGA_BotTurret_Parent_C_SetTarget");
static_assert(sizeof(B_BGA_BotTurret_Parent_C_SetTarget) == 0x000008, "Wrong size on B_BGA_BotTurret_Parent_C_SetTarget");
static_assert(offsetof(B_BGA_BotTurret_Parent_C_SetTarget, Param_Target) == 0x000000, "Member 'B_BGA_BotTurret_Parent_C_SetTarget::Param_Target' has a wrong offset!");

// Function B_BGA_BotTurret_Parent.B_BGA_BotTurret_Parent_C.PassBotInfo
// 0x0018 (0x0018 - 0x0000)
struct B_BGA_BotTurret_Parent_C_PassBotInfo final
{
public:
	float                                         WarmupTime;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BotDuration;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FireRate;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Radius;                                            // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RadiusDefault;                                     // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ExplosionUpgrade;                                  // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_BGA_BotTurret_Parent_C_PassBotInfo) == 0x000004, "Wrong alignment on B_BGA_BotTurret_Parent_C_PassBotInfo");
static_assert(sizeof(B_BGA_BotTurret_Parent_C_PassBotInfo) == 0x000018, "Wrong size on B_BGA_BotTurret_Parent_C_PassBotInfo");
static_assert(offsetof(B_BGA_BotTurret_Parent_C_PassBotInfo, WarmupTime) == 0x000000, "Member 'B_BGA_BotTurret_Parent_C_PassBotInfo::WarmupTime' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_Parent_C_PassBotInfo, BotDuration) == 0x000004, "Member 'B_BGA_BotTurret_Parent_C_PassBotInfo::BotDuration' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_Parent_C_PassBotInfo, FireRate) == 0x000008, "Member 'B_BGA_BotTurret_Parent_C_PassBotInfo::FireRate' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_Parent_C_PassBotInfo, Radius) == 0x00000C, "Member 'B_BGA_BotTurret_Parent_C_PassBotInfo::Radius' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_Parent_C_PassBotInfo, RadiusDefault) == 0x000010, "Member 'B_BGA_BotTurret_Parent_C_PassBotInfo::RadiusDefault' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_Parent_C_PassBotInfo, ExplosionUpgrade) == 0x000014, "Member 'B_BGA_BotTurret_Parent_C_PassBotInfo::ExplosionUpgrade' has a wrong offset!");

// Function B_BGA_BotTurret_Parent.B_BGA_BotTurret_Parent_C.SetGunSpawnRotFromSocket
// 0x0014 (0x0014 - 0x0000)
struct B_BGA_BotTurret_Parent_C_SetGunSpawnRotFromSocket final
{
public:
	class FName                                   SocketName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                InVect;                                            // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_BGA_BotTurret_Parent_C_SetGunSpawnRotFromSocket) == 0x000004, "Wrong alignment on B_BGA_BotTurret_Parent_C_SetGunSpawnRotFromSocket");
static_assert(sizeof(B_BGA_BotTurret_Parent_C_SetGunSpawnRotFromSocket) == 0x000014, "Wrong size on B_BGA_BotTurret_Parent_C_SetGunSpawnRotFromSocket");
static_assert(offsetof(B_BGA_BotTurret_Parent_C_SetGunSpawnRotFromSocket, SocketName) == 0x000000, "Member 'B_BGA_BotTurret_Parent_C_SetGunSpawnRotFromSocket::SocketName' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_Parent_C_SetGunSpawnRotFromSocket, InVect) == 0x000008, "Member 'B_BGA_BotTurret_Parent_C_SetGunSpawnRotFromSocket::InVect' has a wrong offset!");

// Function B_BGA_BotTurret_Parent.B_BGA_BotTurret_Parent_C.LeftOrRightGunFired
// 0x0004 (0x0004 - 0x0000)
struct B_BGA_BotTurret_Parent_C_LeftOrRightGunFired final
{
public:
	int32                                         A;                                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_BGA_BotTurret_Parent_C_LeftOrRightGunFired) == 0x000004, "Wrong alignment on B_BGA_BotTurret_Parent_C_LeftOrRightGunFired");
static_assert(sizeof(B_BGA_BotTurret_Parent_C_LeftOrRightGunFired) == 0x000004, "Wrong size on B_BGA_BotTurret_Parent_C_LeftOrRightGunFired");
static_assert(offsetof(B_BGA_BotTurret_Parent_C_LeftOrRightGunFired, A) == 0x000000, "Member 'B_BGA_BotTurret_Parent_C_LeftOrRightGunFired::A' has a wrong offset!");

// Function B_BGA_BotTurret_Parent.B_BGA_BotTurret_Parent_C.GetPlayerPawn
// 0x0020 (0x0020 - 0x0000)
struct B_BGA_BotTurret_Parent_C_GetPlayerPawn final
{
public:
	class AFortPlayerPawn*                        AsFort_Player_Pawn;                                // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_BGA_BotTurret_Parent_C_GetPlayerPawn) == 0x000008, "Wrong alignment on B_BGA_BotTurret_Parent_C_GetPlayerPawn");
static_assert(sizeof(B_BGA_BotTurret_Parent_C_GetPlayerPawn) == 0x000020, "Wrong size on B_BGA_BotTurret_Parent_C_GetPlayerPawn");
static_assert(offsetof(B_BGA_BotTurret_Parent_C_GetPlayerPawn, AsFort_Player_Pawn) == 0x000000, "Member 'B_BGA_BotTurret_Parent_C_GetPlayerPawn::AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_Parent_C_GetPlayerPawn, CallFunc_GetInstigator_ReturnValue) == 0x000008, "Member 'B_BGA_BotTurret_Parent_C_GetPlayerPawn::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_Parent_C_GetPlayerPawn, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x000010, "Member 'B_BGA_BotTurret_Parent_C_GetPlayerPawn::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(B_BGA_BotTurret_Parent_C_GetPlayerPawn, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'B_BGA_BotTurret_Parent_C_GetPlayerPawn::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

