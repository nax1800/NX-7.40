#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TabGamePadConfig_v3

#include "Basic.hpp"

#include "InputCore_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "CommonInput_structs.hpp"
#include "FortRadioButtonItemStruct_structs.hpp"


namespace SDK::Params
{

// Function TabGamePadConfig_v3.TabGamePadConfig_v3_C.TabGamePadActionsThatNeedBinds__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct TabGamePadConfig_v3_C_TabGamePadActionsThatNeedBinds__DelegateSignature final
{
public:
	TArray<class FText>                           ScreenLabels;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
};
static_assert(alignof(TabGamePadConfig_v3_C_TabGamePadActionsThatNeedBinds__DelegateSignature) == 0x000008, "Wrong alignment on TabGamePadConfig_v3_C_TabGamePadActionsThatNeedBinds__DelegateSignature");
static_assert(sizeof(TabGamePadConfig_v3_C_TabGamePadActionsThatNeedBinds__DelegateSignature) == 0x000010, "Wrong size on TabGamePadConfig_v3_C_TabGamePadActionsThatNeedBinds__DelegateSignature");
static_assert(offsetof(TabGamePadConfig_v3_C_TabGamePadActionsThatNeedBinds__DelegateSignature, ScreenLabels) == 0x000000, "Member 'TabGamePadConfig_v3_C_TabGamePadActionsThatNeedBinds__DelegateSignature::ScreenLabels' has a wrong offset!");

// Function TabGamePadConfig_v3.TabGamePadConfig_v3_C.ExecuteUbergraph_TabGamePadConfig_v3
// 0x0380 (0x0380 - 0x0000)
struct TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonButton*                          K2Node_CustomEvent_AssociatedButton1;              // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_ButtonIndex1;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UCommonButton* AssociatedButton, int32 ButtonIndex)> K2Node_CreateDelegate_OutputDelegate;              // 0x001C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsConsole_ReturnValue;                    // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButton*                          K2Node_CustomEvent_AssociatedButton;               // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_ButtonIndex;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UCommonButton* AssociatedButton, int32 ButtonIndex)> K2Node_CreateDelegate_OutputDelegate1;             // 0x003C(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Variable;                                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable1;                                // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable2;                                // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FKey& Key)>       K2Node_CreateDelegate_OutputDelegate2;             // 0x0058(0x0010)(ZeroConstructor, NoDestructor)
	struct FKey                                   K2Node_CustomEvent_Key;                            // 0x0068(0x0018)(HasGetValueTypeHash)
	int32                                         Temp_int_Variable3;                                // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonGamepadType                            Temp_byte_Variable;                                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 SelectedIndex, class FName ActionName)> K2Node_CreateDelegate_OutputDelegate3;             // 0x008C(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         K2Node_CustomEvent_SelectedIndex;                  // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_ActionName;                     // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonGamepadType                            Temp_byte_Variable1;                               // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate4;             // 0x00AC(0x0010)(ZeroConstructor, NoDestructor)
	ECommonGamepadType                            Temp_byte_Variable2;                               // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonGamepadType                            Temp_byte_Variable3;                               // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BE[0x2];                                       // 0x00BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate5;             // 0x00C0(0x0010)(ZeroConstructor, NoDestructor)
	class UCommonInputSubsystem*                  CallFunc_GetContext_ReturnValue1;                  // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetInputDataIndexForActionName_ReturnValue; // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FConfirmationDialogAction>      CallFunc_CreateCustomResetToDefaultList_ReturnValue; // 0x00E0(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         Temp_int_Variable4;                                // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x00F4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAsyncAction_ShowConfirmation_NUI*  CallFunc_ShowConfirmationDialog_NUI_ReturnValue;   // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonGamepadType                            K2Node_Select1_Default;                            // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10A[0x6];                                      // 0x010A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class UFortOptionsMenuInputData*>      CallFunc_GetActionItemsInGroup_ReturnValue;        // 0x0120(0x0010)(ZeroConstructor, ReferenceParm)
	TDelegate<void(class FName TabId)>            K2Node_CreateDelegate_OutputDelegate6;             // 0x0130(0x0010)(ZeroConstructor, NoDestructor)
	class FString                                 Temp_string_Variable1;                             // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_TabId;                          // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable2;                             // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable3;                             // 0x0168(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class UFortOptionsMenuInputData*>      CallFunc_GetActionItemsInGroup_ReturnValue1;       // 0x0178(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         Temp_int_Variable5;                                // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate7;             // 0x018C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select2_Default;                            // 0x01A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ECommonInputType                              K2Node_Event_NewInputType;                         // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue2;                  // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortAsyncAction_ShowConfirmation_NUI*  CallFunc_ShowSimpleConfirmationDialog_NUI_ReturnValue; // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESubGame                                      CallFunc_GetSubGame_ReturnValue;                   // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x01CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1CB[0x1];                                      // 0x01CB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate8;             // 0x01CC(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate9;             // 0x01DC(0x0010)(ZeroConstructor, NoDestructor)
	EFortDialogResult                             Temp_byte_Variable4;                               // 0x01EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1ED[0x3];                                      // 0x01ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate10;            // 0x01F8(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate11;            // 0x0208(0x0010)(ZeroConstructor, NoDestructor)
	EFortDialogResult                             K2Node_CustomEvent_Result;                         // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_219[0x3];                                      // 0x0219(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_ResultName;                     // 0x021C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate12;            // 0x0224(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsCustomConfig_ReturnValue;               // 0x0234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_235[0x3];                                      // 0x0235(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EFortDialogResult Result, class FName ResultName)> K2Node_CreateDelegate_OutputDelegate13;            // 0x0238(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate14;            // 0x0248(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_259[0x7];                                      // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonInputSubsystem*                  CallFunc_GetContext_ReturnValue3;                  // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue;          // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_269[0x3];                                      // 0x0269(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetInputDataIndexForActionName_ReturnValue1; // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonUISubsystem*                     CallFunc_GetContext_ReturnValue4;                  // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue5;                  // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonInputManager*                    CallFunc_GetInputManager_ReturnValue;              // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HandleApply_PassThrough;                  // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_289[0x7];                                      // 0x0289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonUISubsystem*                     CallFunc_GetContext_ReturnValue6;                  // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonInputManager*                    CallFunc_GetInputManager_ReturnValue1;             // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HandleApply_PassThrough1;                 // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonInputSubsystem*                  CallFunc_GetContext_ReturnValue7;                  // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue1;         // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B1[0x7];                                      // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UFortOptionsMenuInputData*>      CallFunc_GetActionItemsInGroup_ReturnValue2;       // 0x02B8(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue1;         // 0x02C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortDialogResult                             Temp_byte_Variable5;                               // 0x02CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x02CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue2;         // 0x02CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2CD[0x3];                                      // 0x02CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable1;                               // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortDialogResult                             K2Node_CustomEvent_Result1;                        // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D9[0x3];                                      // 0x02D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_ResultName1;                    // 0x02DC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E4[0x4];                                      // 0x02E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x02E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate15;            // 0x02F8(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsMobileGame_ReturnValue;                 // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue1;                   // 0x0309(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x030A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue1;         // 0x030B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue2;         // 0x030C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue3;         // 0x030D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30E[0x2];                                      // 0x030E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EFortDialogResult Result, class FName ResultName)> K2Node_CreateDelegate_OutputDelegate16;            // 0x0310(0x0010)(ZeroConstructor, NoDestructor)
	float                                         K2Node_CustomEvent_Value1;                         // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Value;                          // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float Value)>                  K2Node_CreateDelegate_OutputDelegate17;            // 0x0328(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(float Value)>                  K2Node_CreateDelegate_OutputDelegate18;            // 0x0338(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_349[0x7];                                      // 0x0349(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonUISubsystem*                     CallFunc_GetContext_ReturnValue8;                  // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonInputManager*                    CallFunc_GetInputManager_ReturnValue2;             // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0360(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_AreWeOkayWithThisChange_IsOkay;           // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_371[0x3];                                      // 0x0371(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetSelectedTabId_ReturnValue;             // 0x0374(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue4;         // 0x037C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3) == 0x000008, "Wrong alignment on TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3");
static_assert(sizeof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3) == 0x000380, "Wrong size on TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, EntryPoint) == 0x000000, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::EntryPoint' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_GetContext_ReturnValue) == 0x000008, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_CustomEvent_AssociatedButton1) == 0x000010, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_CustomEvent_AssociatedButton1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_CustomEvent_ButtonIndex1) == 0x000018, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_CustomEvent_ButtonIndex1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_CreateDelegate_OutputDelegate) == 0x00001C, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_IsConsole_ReturnValue) == 0x00002C, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_IsConsole_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_CustomEvent_AssociatedButton) == 0x000030, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_CustomEvent_AssociatedButton' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_CustomEvent_ButtonIndex) == 0x000038, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_CustomEvent_ButtonIndex' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_CreateDelegate_OutputDelegate1) == 0x00003C, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, Temp_int_Variable) == 0x00004C, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, Temp_int_Variable1) == 0x000050, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::Temp_int_Variable1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, Temp_int_Variable2) == 0x000054, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::Temp_int_Variable2' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_CreateDelegate_OutputDelegate2) == 0x000058, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_CustomEvent_Key) == 0x000068, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_CustomEvent_Key' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, Temp_int_Variable3) == 0x000080, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::Temp_int_Variable3' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_Select_Default) == 0x000084, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, Temp_byte_Variable) == 0x000088, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_CreateDelegate_OutputDelegate3) == 0x00008C, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_CustomEvent_SelectedIndex) == 0x00009C, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_CustomEvent_SelectedIndex' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_CustomEvent_ActionName) == 0x0000A0, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_CustomEvent_ActionName' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, Temp_byte_Variable1) == 0x0000A8, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_CreateDelegate_OutputDelegate4) == 0x0000AC, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_CreateDelegate_OutputDelegate4' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, Temp_byte_Variable2) == 0x0000BC, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, Temp_byte_Variable3) == 0x0000BD, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::Temp_byte_Variable3' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_CreateDelegate_OutputDelegate5) == 0x0000C0, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_CreateDelegate_OutputDelegate5' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_GetContext_ReturnValue1) == 0x0000D0, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_GetContext_ReturnValue1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_GetInputDataIndexForActionName_ReturnValue) == 0x0000D8, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_GetInputDataIndexForActionName_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_CreateCustomResetToDefaultList_ReturnValue) == 0x0000E0, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_CreateCustomResetToDefaultList_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, Temp_int_Variable4) == 0x0000F0, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::Temp_int_Variable4' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_MakeLiteralName_ReturnValue) == 0x0000F4, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_ShowConfirmationDialog_NUI_ReturnValue) == 0x000100, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_ShowConfirmationDialog_NUI_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_Select1_Default) == 0x000108, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_IsValid_ReturnValue) == 0x000109, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, Temp_string_Variable) == 0x000110, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_GetActionItemsInGroup_ReturnValue) == 0x000120, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_GetActionItemsInGroup_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_CreateDelegate_OutputDelegate6) == 0x000130, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_CreateDelegate_OutputDelegate6' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, Temp_string_Variable1) == 0x000140, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::Temp_string_Variable1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_CustomEvent_TabId) == 0x000150, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_CustomEvent_TabId' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, Temp_string_Variable2) == 0x000158, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::Temp_string_Variable2' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, Temp_string_Variable3) == 0x000168, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::Temp_string_Variable3' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_GetActionItemsInGroup_ReturnValue1) == 0x000178, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_GetActionItemsInGroup_ReturnValue1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, Temp_int_Variable5) == 0x000188, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::Temp_int_Variable5' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_CreateDelegate_OutputDelegate7) == 0x00018C, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_CreateDelegate_OutputDelegate7' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_Select2_Default) == 0x0001A0, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_Event_NewInputType) == 0x0001B0, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_Event_NewInputType' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_GetContext_ReturnValue2) == 0x0001B8, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_GetContext_ReturnValue2' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_ShowSimpleConfirmationDialog_NUI_ReturnValue) == 0x0001C0, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_ShowSimpleConfirmationDialog_NUI_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_GetSubGame_ReturnValue) == 0x0001C8, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_GetSubGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_SwitchEnum_CmpSuccess) == 0x0001C9, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_IsValid_ReturnValue1) == 0x0001CA, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_CreateDelegate_OutputDelegate8) == 0x0001CC, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_CreateDelegate_OutputDelegate8' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_CreateDelegate_OutputDelegate9) == 0x0001DC, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_CreateDelegate_OutputDelegate9' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, Temp_byte_Variable4) == 0x0001EC, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::Temp_byte_Variable4' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, Temp_name_Variable) == 0x0001F0, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_CreateDelegate_OutputDelegate10) == 0x0001F8, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_CreateDelegate_OutputDelegate10' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_CreateDelegate_OutputDelegate11) == 0x000208, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_CreateDelegate_OutputDelegate11' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_CustomEvent_Result) == 0x000218, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_CustomEvent_Result' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_CustomEvent_ResultName) == 0x00021C, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_CustomEvent_ResultName' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_CreateDelegate_OutputDelegate12) == 0x000224, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_CreateDelegate_OutputDelegate12' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_IsCustomConfig_ReturnValue) == 0x000234, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_IsCustomConfig_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_CreateDelegate_OutputDelegate13) == 0x000238, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_CreateDelegate_OutputDelegate13' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_CreateDelegate_OutputDelegate14) == 0x000248, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_CreateDelegate_OutputDelegate14' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_IsVisible_ReturnValue) == 0x000258, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_GetContext_ReturnValue3) == 0x000260, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_GetContext_ReturnValue3' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_GetCurrentInputType_ReturnValue) == 0x000268, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_GetCurrentInputType_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_GetInputDataIndexForActionName_ReturnValue1) == 0x00026C, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_GetInputDataIndexForActionName_ReturnValue1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_GetContext_ReturnValue4) == 0x000270, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_GetContext_ReturnValue4' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_GetContext_ReturnValue5) == 0x000278, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_GetContext_ReturnValue5' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_GetInputManager_ReturnValue) == 0x000280, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_GetInputManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_HandleApply_PassThrough) == 0x000288, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_HandleApply_PassThrough' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_GetContext_ReturnValue6) == 0x000290, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_GetContext_ReturnValue6' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_GetInputManager_ReturnValue1) == 0x000298, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_GetInputManager_ReturnValue1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_HandleApply_PassThrough1) == 0x0002A0, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_HandleApply_PassThrough1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_GetContext_ReturnValue7) == 0x0002A8, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_GetContext_ReturnValue7' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_GetCurrentInputType_ReturnValue1) == 0x0002B0, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_GetCurrentInputType_ReturnValue1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_GetActionItemsInGroup_ReturnValue2) == 0x0002B8, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_GetActionItemsInGroup_ReturnValue2' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0002C8, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_EqualEqual_ByteByte_ReturnValue1) == 0x0002C9, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_EqualEqual_ByteByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, Temp_byte_Variable5) == 0x0002CA, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::Temp_byte_Variable5' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_BooleanOR_ReturnValue) == 0x0002CB, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_EqualEqual_ByteByte_ReturnValue2) == 0x0002CC, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_EqualEqual_ByteByte_ReturnValue2' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, Temp_name_Variable1) == 0x0002D0, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::Temp_name_Variable1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_CustomEvent_Result1) == 0x0002D8, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_CustomEvent_Result1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_CustomEvent_ResultName1) == 0x0002DC, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_CustomEvent_ResultName1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_Conv_NameToString_ReturnValue) == 0x0002E8, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_CreateDelegate_OutputDelegate15) == 0x0002F8, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_CreateDelegate_OutputDelegate15' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_IsMobileGame_ReturnValue) == 0x000308, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_IsMobileGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_BooleanOR_ReturnValue1) == 0x000309, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_BooleanOR_ReturnValue1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_EqualEqual_NameName_ReturnValue) == 0x00030A, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_EqualEqual_NameName_ReturnValue1) == 0x00030B, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_EqualEqual_NameName_ReturnValue1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_EqualEqual_NameName_ReturnValue2) == 0x00030C, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_EqualEqual_NameName_ReturnValue2' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_EqualEqual_NameName_ReturnValue3) == 0x00030D, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_EqualEqual_NameName_ReturnValue3' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_CreateDelegate_OutputDelegate16) == 0x000310, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_CreateDelegate_OutputDelegate16' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_CustomEvent_Value1) == 0x000320, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_CustomEvent_Value1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_CustomEvent_Value) == 0x000324, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_CustomEvent_Value' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_CreateDelegate_OutputDelegate17) == 0x000328, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_CreateDelegate_OutputDelegate17' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_CreateDelegate_OutputDelegate18) == 0x000338, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_CreateDelegate_OutputDelegate18' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, K2Node_Event_IsDesignTime) == 0x000348, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_GetContext_ReturnValue8) == 0x000350, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_GetContext_ReturnValue8' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_GetInputManager_ReturnValue2) == 0x000358, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_GetInputManager_ReturnValue2' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_Array_Get_Item) == 0x000360, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_AreWeOkayWithThisChange_IsOkay) == 0x000370, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_AreWeOkayWithThisChange_IsOkay' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_GetSelectedTabId_ReturnValue) == 0x000374, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_GetSelectedTabId_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3, CallFunc_EqualEqual_NameName_ReturnValue4) == 0x00037C, "Member 'TabGamePadConfig_v3_C_ExecuteUbergraph_TabGamePadConfig_v3::CallFunc_EqualEqual_NameName_ReturnValue4' has a wrong offset!");

// Function TabGamePadConfig_v3.TabGamePadConfig_v3_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct TabGamePadConfig_v3_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TabGamePadConfig_v3_C_PreConstruct) == 0x000001, "Wrong alignment on TabGamePadConfig_v3_C_PreConstruct");
static_assert(sizeof(TabGamePadConfig_v3_C_PreConstruct) == 0x000001, "Wrong size on TabGamePadConfig_v3_C_PreConstruct");
static_assert(offsetof(TabGamePadConfig_v3_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'TabGamePadConfig_v3_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function TabGamePadConfig_v3.TabGamePadConfig_v3_C.DeadZoneMoveSettingValueChanged_Bind
// 0x0004 (0x0004 - 0x0000)
struct TabGamePadConfig_v3_C_DeadZoneMoveSettingValueChanged_Bind final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TabGamePadConfig_v3_C_DeadZoneMoveSettingValueChanged_Bind) == 0x000004, "Wrong alignment on TabGamePadConfig_v3_C_DeadZoneMoveSettingValueChanged_Bind");
static_assert(sizeof(TabGamePadConfig_v3_C_DeadZoneMoveSettingValueChanged_Bind) == 0x000004, "Wrong size on TabGamePadConfig_v3_C_DeadZoneMoveSettingValueChanged_Bind");
static_assert(offsetof(TabGamePadConfig_v3_C_DeadZoneMoveSettingValueChanged_Bind, Value) == 0x000000, "Member 'TabGamePadConfig_v3_C_DeadZoneMoveSettingValueChanged_Bind::Value' has a wrong offset!");

// Function TabGamePadConfig_v3.TabGamePadConfig_v3_C.DeadZoneLookSettingValueChanged_Bind
// 0x0004 (0x0004 - 0x0000)
struct TabGamePadConfig_v3_C_DeadZoneLookSettingValueChanged_Bind final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TabGamePadConfig_v3_C_DeadZoneLookSettingValueChanged_Bind) == 0x000004, "Wrong alignment on TabGamePadConfig_v3_C_DeadZoneLookSettingValueChanged_Bind");
static_assert(sizeof(TabGamePadConfig_v3_C_DeadZoneLookSettingValueChanged_Bind) == 0x000004, "Wrong size on TabGamePadConfig_v3_C_DeadZoneLookSettingValueChanged_Bind");
static_assert(offsetof(TabGamePadConfig_v3_C_DeadZoneLookSettingValueChanged_Bind, Value) == 0x000000, "Member 'TabGamePadConfig_v3_C_DeadZoneLookSettingValueChanged_Bind::Value' has a wrong offset!");

// Function TabGamePadConfig_v3.TabGamePadConfig_v3_C.HandleUsingGamepadChanged
// 0x0001 (0x0001 - 0x0000)
struct TabGamePadConfig_v3_C_HandleUsingGamepadChanged final
{
public:
	ECommonInputType                              NewInputType;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TabGamePadConfig_v3_C_HandleUsingGamepadChanged) == 0x000001, "Wrong alignment on TabGamePadConfig_v3_C_HandleUsingGamepadChanged");
static_assert(sizeof(TabGamePadConfig_v3_C_HandleUsingGamepadChanged) == 0x000001, "Wrong size on TabGamePadConfig_v3_C_HandleUsingGamepadChanged");
static_assert(offsetof(TabGamePadConfig_v3_C_HandleUsingGamepadChanged, NewInputType) == 0x000000, "Member 'TabGamePadConfig_v3_C_HandleUsingGamepadChanged::NewInputType' has a wrong offset!");

// Function TabGamePadConfig_v3.TabGamePadConfig_v3_C.ModesTabSelected_Bind
// 0x0008 (0x0008 - 0x0000)
struct TabGamePadConfig_v3_C_ModesTabSelected_Bind final
{
public:
	class FName                                   TabId;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TabGamePadConfig_v3_C_ModesTabSelected_Bind) == 0x000004, "Wrong alignment on TabGamePadConfig_v3_C_ModesTabSelected_Bind");
static_assert(sizeof(TabGamePadConfig_v3_C_ModesTabSelected_Bind) == 0x000008, "Wrong size on TabGamePadConfig_v3_C_ModesTabSelected_Bind");
static_assert(offsetof(TabGamePadConfig_v3_C_ModesTabSelected_Bind, TabId) == 0x000000, "Member 'TabGamePadConfig_v3_C_ModesTabSelected_Bind::TabId' has a wrong offset!");

// Function TabGamePadConfig_v3.TabGamePadConfig_v3_C.CustomActionSelected_Bind
// 0x000C (0x000C - 0x0000)
struct TabGamePadConfig_v3_C_CustomActionSelected_Bind final
{
public:
	int32                                         SelectedIndex;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ActionName;                                        // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TabGamePadConfig_v3_C_CustomActionSelected_Bind) == 0x000004, "Wrong alignment on TabGamePadConfig_v3_C_CustomActionSelected_Bind");
static_assert(sizeof(TabGamePadConfig_v3_C_CustomActionSelected_Bind) == 0x00000C, "Wrong size on TabGamePadConfig_v3_C_CustomActionSelected_Bind");
static_assert(offsetof(TabGamePadConfig_v3_C_CustomActionSelected_Bind, SelectedIndex) == 0x000000, "Member 'TabGamePadConfig_v3_C_CustomActionSelected_Bind::SelectedIndex' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_CustomActionSelected_Bind, ActionName) == 0x000004, "Member 'TabGamePadConfig_v3_C_CustomActionSelected_Bind::ActionName' has a wrong offset!");

// Function TabGamePadConfig_v3.TabGamePadConfig_v3_C.CustomKeySelected_Bind
// 0x0018 (0x0018 - 0x0000)
struct TabGamePadConfig_v3_C_CustomKeySelected_Bind final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(TabGamePadConfig_v3_C_CustomKeySelected_Bind) == 0x000008, "Wrong alignment on TabGamePadConfig_v3_C_CustomKeySelected_Bind");
static_assert(sizeof(TabGamePadConfig_v3_C_CustomKeySelected_Bind) == 0x000018, "Wrong size on TabGamePadConfig_v3_C_CustomKeySelected_Bind");
static_assert(offsetof(TabGamePadConfig_v3_C_CustomKeySelected_Bind, Key) == 0x000000, "Member 'TabGamePadConfig_v3_C_CustomKeySelected_Bind::Key' has a wrong offset!");

// Function TabGamePadConfig_v3.TabGamePadConfig_v3_C.GamepadPlatformConfigChanged
// 0x0010 (0x0010 - 0x0000)
struct TabGamePadConfig_v3_C_GamepadPlatformConfigChanged final
{
public:
	class UCommonButton*                          AssociatedButton;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ButtonIndex;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TabGamePadConfig_v3_C_GamepadPlatformConfigChanged) == 0x000008, "Wrong alignment on TabGamePadConfig_v3_C_GamepadPlatformConfigChanged");
static_assert(sizeof(TabGamePadConfig_v3_C_GamepadPlatformConfigChanged) == 0x000010, "Wrong size on TabGamePadConfig_v3_C_GamepadPlatformConfigChanged");
static_assert(offsetof(TabGamePadConfig_v3_C_GamepadPlatformConfigChanged, AssociatedButton) == 0x000000, "Member 'TabGamePadConfig_v3_C_GamepadPlatformConfigChanged::AssociatedButton' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_GamepadPlatformConfigChanged, ButtonIndex) == 0x000008, "Member 'TabGamePadConfig_v3_C_GamepadPlatformConfigChanged::ButtonIndex' has a wrong offset!");

// Function TabGamePadConfig_v3.TabGamePadConfig_v3_C.Gamepad Config Changed
// 0x0010 (0x0010 - 0x0000)
struct TabGamePadConfig_v3_C_Gamepad_Config_Changed final
{
public:
	class UCommonButton*                          AssociatedButton;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ButtonIndex;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TabGamePadConfig_v3_C_Gamepad_Config_Changed) == 0x000008, "Wrong alignment on TabGamePadConfig_v3_C_Gamepad_Config_Changed");
static_assert(sizeof(TabGamePadConfig_v3_C_Gamepad_Config_Changed) == 0x000010, "Wrong size on TabGamePadConfig_v3_C_Gamepad_Config_Changed");
static_assert(offsetof(TabGamePadConfig_v3_C_Gamepad_Config_Changed, AssociatedButton) == 0x000000, "Member 'TabGamePadConfig_v3_C_Gamepad_Config_Changed::AssociatedButton' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_Gamepad_Config_Changed, ButtonIndex) == 0x000008, "Member 'TabGamePadConfig_v3_C_Gamepad_Config_Changed::ButtonIndex' has a wrong offset!");

// Function TabGamePadConfig_v3.TabGamePadConfig_v3_C.DialogResult_7D7E06D747FFEF9849D3CAA2D3D91717
// 0x000C (0x000C - 0x0000)
struct TabGamePadConfig_v3_C_DialogResult_7D7E06D747FFEF9849D3CAA2D3D91717 final
{
public:
	EFortDialogResult                             Result;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ResultName;                                        // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TabGamePadConfig_v3_C_DialogResult_7D7E06D747FFEF9849D3CAA2D3D91717) == 0x000004, "Wrong alignment on TabGamePadConfig_v3_C_DialogResult_7D7E06D747FFEF9849D3CAA2D3D91717");
static_assert(sizeof(TabGamePadConfig_v3_C_DialogResult_7D7E06D747FFEF9849D3CAA2D3D91717) == 0x00000C, "Wrong size on TabGamePadConfig_v3_C_DialogResult_7D7E06D747FFEF9849D3CAA2D3D91717");
static_assert(offsetof(TabGamePadConfig_v3_C_DialogResult_7D7E06D747FFEF9849D3CAA2D3D91717, Result) == 0x000000, "Member 'TabGamePadConfig_v3_C_DialogResult_7D7E06D747FFEF9849D3CAA2D3D91717::Result' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_DialogResult_7D7E06D747FFEF9849D3CAA2D3D91717, ResultName) == 0x000004, "Member 'TabGamePadConfig_v3_C_DialogResult_7D7E06D747FFEF9849D3CAA2D3D91717::ResultName' has a wrong offset!");

// Function TabGamePadConfig_v3.TabGamePadConfig_v3_C.DialogResult_017CD690454514A07B4DE5BE109AEC6E
// 0x000C (0x000C - 0x0000)
struct TabGamePadConfig_v3_C_DialogResult_017CD690454514A07B4DE5BE109AEC6E final
{
public:
	EFortDialogResult                             Result;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ResultName;                                        // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TabGamePadConfig_v3_C_DialogResult_017CD690454514A07B4DE5BE109AEC6E) == 0x000004, "Wrong alignment on TabGamePadConfig_v3_C_DialogResult_017CD690454514A07B4DE5BE109AEC6E");
static_assert(sizeof(TabGamePadConfig_v3_C_DialogResult_017CD690454514A07B4DE5BE109AEC6E) == 0x00000C, "Wrong size on TabGamePadConfig_v3_C_DialogResult_017CD690454514A07B4DE5BE109AEC6E");
static_assert(offsetof(TabGamePadConfig_v3_C_DialogResult_017CD690454514A07B4DE5BE109AEC6E, Result) == 0x000000, "Member 'TabGamePadConfig_v3_C_DialogResult_017CD690454514A07B4DE5BE109AEC6E::Result' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_DialogResult_017CD690454514A07B4DE5BE109AEC6E, ResultName) == 0x000004, "Member 'TabGamePadConfig_v3_C_DialogResult_017CD690454514A07B4DE5BE109AEC6E::ResultName' has a wrong offset!");

// Function TabGamePadConfig_v3.TabGamePadConfig_v3_C.InitializeData
// 0x01C0 (0x01C0 - 0x0000)
struct TabGamePadConfig_v3_C_InitializeData final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESubGame                                      CallFunc_GetSubGame_ReturnValue;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_GetAllPlayerInputPresetNamesForSubGame_InputPresetNames; // 0x0020(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<class FText>                           CallFunc_GetAllPlayerInputPresetNamesForSubGame_InputPresetFriendlyNames; // 0x0030(0x0010)(ZeroConstructor, ReferenceParm)
	struct FFortRadioButtonItemStruct             K2Node_MakeStruct_FortRadioButtonItemStruct;       // 0x0040(0x0028)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCustomGamepadConfig_ReturnValue;        // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86[0x2];                                       // 0x0086(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue1;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0090(0x0018)()
	class FText                                   Temp_text_Variable1;                               // 0x00A8(0x0018)()
	bool                                          Temp_bool_Variable;                                // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable2;                               // 0x00C8(0x0018)()
	class FText                                   Temp_text_Variable3;                               // 0x00E0(0x0018)()
	class FString                                 CallFunc_GetPlatformName_ReturnValue;              // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10D[0x3];                                      // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable1;                               // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_115[0x3];                                      // 0x0115(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlatformName_ReturnValue1;             // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default;                             // 0x0128(0x0018)()
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue1;           // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           K2Node_MakeArray_Array;                            // 0x0148(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   K2Node_Select1_Default;                            // 0x0158(0x0018)()
	class FText                                   CallFunc_Array_Get_Item1;                          // 0x0170(0x0018)()
	struct FFortRadioButtonItemStruct             K2Node_MakeStruct_FortRadioButtonItemStruct1;      // 0x0188(0x0028)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue2;                   // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TabGamePadConfig_v3_C_InitializeData) == 0x000008, "Wrong alignment on TabGamePadConfig_v3_C_InitializeData");
static_assert(sizeof(TabGamePadConfig_v3_C_InitializeData) == 0x0001C0, "Wrong size on TabGamePadConfig_v3_C_InitializeData");
static_assert(offsetof(TabGamePadConfig_v3_C_InitializeData, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'TabGamePadConfig_v3_C_InitializeData::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_InitializeData, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'TabGamePadConfig_v3_C_InitializeData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_InitializeData, Temp_int_Array_Index_Variable) == 0x000008, "Member 'TabGamePadConfig_v3_C_InitializeData::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_InitializeData, Temp_int_Array_Index_Variable1) == 0x00000C, "Member 'TabGamePadConfig_v3_C_InitializeData::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_InitializeData, CallFunc_GetContext_ReturnValue) == 0x000010, "Member 'TabGamePadConfig_v3_C_InitializeData::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_InitializeData, CallFunc_GetSubGame_ReturnValue) == 0x000018, "Member 'TabGamePadConfig_v3_C_InitializeData::CallFunc_GetSubGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_InitializeData, CallFunc_GetAllPlayerInputPresetNamesForSubGame_InputPresetNames) == 0x000020, "Member 'TabGamePadConfig_v3_C_InitializeData::CallFunc_GetAllPlayerInputPresetNamesForSubGame_InputPresetNames' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_InitializeData, CallFunc_GetAllPlayerInputPresetNamesForSubGame_InputPresetFriendlyNames) == 0x000030, "Member 'TabGamePadConfig_v3_C_InitializeData::CallFunc_GetAllPlayerInputPresetNamesForSubGame_InputPresetFriendlyNames' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_InitializeData, K2Node_MakeStruct_FortRadioButtonItemStruct) == 0x000040, "Member 'TabGamePadConfig_v3_C_InitializeData::K2Node_MakeStruct_FortRadioButtonItemStruct' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_InitializeData, CallFunc_Array_Add_ReturnValue) == 0x000068, "Member 'TabGamePadConfig_v3_C_InitializeData::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_InitializeData, CallFunc_Array_Get_Item) == 0x000070, "Member 'TabGamePadConfig_v3_C_InitializeData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_InitializeData, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'TabGamePadConfig_v3_C_InitializeData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_InitializeData, CallFunc_IsCustomGamepadConfig_ReturnValue) == 0x000084, "Member 'TabGamePadConfig_v3_C_InitializeData::CallFunc_IsCustomGamepadConfig_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_InitializeData, CallFunc_Less_IntInt_ReturnValue) == 0x000085, "Member 'TabGamePadConfig_v3_C_InitializeData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_InitializeData, CallFunc_Array_Add_ReturnValue1) == 0x000088, "Member 'TabGamePadConfig_v3_C_InitializeData::CallFunc_Array_Add_ReturnValue1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_InitializeData, Temp_text_Variable) == 0x000090, "Member 'TabGamePadConfig_v3_C_InitializeData::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_InitializeData, Temp_text_Variable1) == 0x0000A8, "Member 'TabGamePadConfig_v3_C_InitializeData::Temp_text_Variable1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_InitializeData, Temp_bool_Variable) == 0x0000C0, "Member 'TabGamePadConfig_v3_C_InitializeData::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_InitializeData, Temp_text_Variable2) == 0x0000C8, "Member 'TabGamePadConfig_v3_C_InitializeData::Temp_text_Variable2' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_InitializeData, Temp_text_Variable3) == 0x0000E0, "Member 'TabGamePadConfig_v3_C_InitializeData::Temp_text_Variable3' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_InitializeData, CallFunc_GetPlatformName_ReturnValue) == 0x0000F8, "Member 'TabGamePadConfig_v3_C_InitializeData::CallFunc_GetPlatformName_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_InitializeData, Temp_int_Loop_Counter_Variable1) == 0x000108, "Member 'TabGamePadConfig_v3_C_InitializeData::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_InitializeData, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x00010C, "Member 'TabGamePadConfig_v3_C_InitializeData::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_InitializeData, CallFunc_Add_IntInt_ReturnValue1) == 0x000110, "Member 'TabGamePadConfig_v3_C_InitializeData::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_InitializeData, Temp_bool_Variable1) == 0x000114, "Member 'TabGamePadConfig_v3_C_InitializeData::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_InitializeData, CallFunc_GetPlatformName_ReturnValue1) == 0x000118, "Member 'TabGamePadConfig_v3_C_InitializeData::CallFunc_GetPlatformName_ReturnValue1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_InitializeData, K2Node_Select_Default) == 0x000128, "Member 'TabGamePadConfig_v3_C_InitializeData::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_InitializeData, CallFunc_EqualEqual_StrStr_ReturnValue1) == 0x000140, "Member 'TabGamePadConfig_v3_C_InitializeData::CallFunc_EqualEqual_StrStr_ReturnValue1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_InitializeData, K2Node_MakeArray_Array) == 0x000148, "Member 'TabGamePadConfig_v3_C_InitializeData::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_InitializeData, K2Node_Select1_Default) == 0x000158, "Member 'TabGamePadConfig_v3_C_InitializeData::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_InitializeData, CallFunc_Array_Get_Item1) == 0x000170, "Member 'TabGamePadConfig_v3_C_InitializeData::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_InitializeData, K2Node_MakeStruct_FortRadioButtonItemStruct1) == 0x000188, "Member 'TabGamePadConfig_v3_C_InitializeData::K2Node_MakeStruct_FortRadioButtonItemStruct1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_InitializeData, CallFunc_Array_Length_ReturnValue1) == 0x0001B0, "Member 'TabGamePadConfig_v3_C_InitializeData::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_InitializeData, CallFunc_Array_Add_ReturnValue2) == 0x0001B4, "Member 'TabGamePadConfig_v3_C_InitializeData::CallFunc_Array_Add_ReturnValue2' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_InitializeData, CallFunc_Less_IntInt_ReturnValue1) == 0x0001B8, "Member 'TabGamePadConfig_v3_C_InitializeData::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");

// Function TabGamePadConfig_v3.TabGamePadConfig_v3_C.PreConstructData
// 0x00E0 (0x00E0 - 0x0000)
struct TabGamePadConfig_v3_C_PreConstructData final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FText>                           K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Array_Get_Item;                           // 0x0020(0x0018)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortRadioButtonItemStruct             K2Node_MakeStruct_FortRadioButtonItemStruct;       // 0x0040(0x0028)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           K2Node_MakeArray_Array1;                           // 0x0078(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Array_Get_Item1;                          // 0x0088(0x0018)()
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortRadioButtonItemStruct             K2Node_MakeStruct_FortRadioButtonItemStruct1;      // 0x00A8(0x0028)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue1;                   // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TabGamePadConfig_v3_C_PreConstructData) == 0x000008, "Wrong alignment on TabGamePadConfig_v3_C_PreConstructData");
static_assert(sizeof(TabGamePadConfig_v3_C_PreConstructData) == 0x0000E0, "Wrong size on TabGamePadConfig_v3_C_PreConstructData");
static_assert(offsetof(TabGamePadConfig_v3_C_PreConstructData, Temp_int_Array_Index_Variable) == 0x000000, "Member 'TabGamePadConfig_v3_C_PreConstructData::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_PreConstructData, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'TabGamePadConfig_v3_C_PreConstructData::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_PreConstructData, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'TabGamePadConfig_v3_C_PreConstructData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_PreConstructData, Temp_int_Array_Index_Variable1) == 0x00000C, "Member 'TabGamePadConfig_v3_C_PreConstructData::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_PreConstructData, K2Node_MakeArray_Array) == 0x000010, "Member 'TabGamePadConfig_v3_C_PreConstructData::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_PreConstructData, CallFunc_Array_Get_Item) == 0x000020, "Member 'TabGamePadConfig_v3_C_PreConstructData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_PreConstructData, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'TabGamePadConfig_v3_C_PreConstructData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_PreConstructData, K2Node_MakeStruct_FortRadioButtonItemStruct) == 0x000040, "Member 'TabGamePadConfig_v3_C_PreConstructData::K2Node_MakeStruct_FortRadioButtonItemStruct' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_PreConstructData, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'TabGamePadConfig_v3_C_PreConstructData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_PreConstructData, CallFunc_Array_Add_ReturnValue) == 0x00006C, "Member 'TabGamePadConfig_v3_C_PreConstructData::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_PreConstructData, Temp_int_Loop_Counter_Variable1) == 0x000070, "Member 'TabGamePadConfig_v3_C_PreConstructData::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_PreConstructData, K2Node_MakeArray_Array1) == 0x000078, "Member 'TabGamePadConfig_v3_C_PreConstructData::K2Node_MakeArray_Array1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_PreConstructData, CallFunc_Array_Get_Item1) == 0x000088, "Member 'TabGamePadConfig_v3_C_PreConstructData::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_PreConstructData, CallFunc_Array_Length_ReturnValue1) == 0x0000A0, "Member 'TabGamePadConfig_v3_C_PreConstructData::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_PreConstructData, K2Node_MakeStruct_FortRadioButtonItemStruct1) == 0x0000A8, "Member 'TabGamePadConfig_v3_C_PreConstructData::K2Node_MakeStruct_FortRadioButtonItemStruct1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_PreConstructData, CallFunc_Less_IntInt_ReturnValue1) == 0x0000D0, "Member 'TabGamePadConfig_v3_C_PreConstructData::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_PreConstructData, CallFunc_Array_Add_ReturnValue1) == 0x0000D4, "Member 'TabGamePadConfig_v3_C_PreConstructData::CallFunc_Array_Add_ReturnValue1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_PreConstructData, CallFunc_Add_IntInt_ReturnValue1) == 0x0000D8, "Member 'TabGamePadConfig_v3_C_PreConstructData::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");

// Function TabGamePadConfig_v3.TabGamePadConfig_v3_C.UpdateData
// 0x0038 (0x0038 - 0x0000)
struct TabGamePadConfig_v3_C_UpdateData final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable1;                                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetCurrentInputPresetName_ReturnValue;    // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentPlatformIndex_PlatformIndex;    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable2;                                // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable3;                                // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable4;                                // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TabGamePadConfig_v3_C_UpdateData) == 0x000008, "Wrong alignment on TabGamePadConfig_v3_C_UpdateData");
static_assert(sizeof(TabGamePadConfig_v3_C_UpdateData) == 0x000038, "Wrong size on TabGamePadConfig_v3_C_UpdateData");
static_assert(offsetof(TabGamePadConfig_v3_C_UpdateData, Temp_int_Variable) == 0x000000, "Member 'TabGamePadConfig_v3_C_UpdateData::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_UpdateData, Temp_int_Variable1) == 0x000004, "Member 'TabGamePadConfig_v3_C_UpdateData::Temp_int_Variable1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_UpdateData, CallFunc_GetContext_ReturnValue) == 0x000008, "Member 'TabGamePadConfig_v3_C_UpdateData::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_UpdateData, CallFunc_GetCurrentInputPresetName_ReturnValue) == 0x000010, "Member 'TabGamePadConfig_v3_C_UpdateData::CallFunc_GetCurrentInputPresetName_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_UpdateData, CallFunc_GetCurrentPlatformIndex_PlatformIndex) == 0x000020, "Member 'TabGamePadConfig_v3_C_UpdateData::CallFunc_GetCurrentPlatformIndex_PlatformIndex' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_UpdateData, Temp_int_Variable2) == 0x000024, "Member 'TabGamePadConfig_v3_C_UpdateData::Temp_int_Variable2' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_UpdateData, Temp_int_Variable3) == 0x000028, "Member 'TabGamePadConfig_v3_C_UpdateData::Temp_int_Variable3' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_UpdateData, Temp_int_Variable4) == 0x00002C, "Member 'TabGamePadConfig_v3_C_UpdateData::Temp_int_Variable4' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_UpdateData, K2Node_Select_Default) == 0x000030, "Member 'TabGamePadConfig_v3_C_UpdateData::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_UpdateData, CallFunc_Array_Find_ReturnValue) == 0x000034, "Member 'TabGamePadConfig_v3_C_UpdateData::CallFunc_Array_Find_ReturnValue' has a wrong offset!");

// Function TabGamePadConfig_v3.TabGamePadConfig_v3_C.GetCurrentPlatformIndex
// 0x0020 (0x0020 - 0x0000)
struct TabGamePadConfig_v3_C_GetCurrentPlatformIndex final
{
public:
	int32                                         PlatformIndex;                                     // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetControllerPlatform_ReturnValue;        // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TabGamePadConfig_v3_C_GetCurrentPlatformIndex) == 0x000008, "Wrong alignment on TabGamePadConfig_v3_C_GetCurrentPlatformIndex");
static_assert(sizeof(TabGamePadConfig_v3_C_GetCurrentPlatformIndex) == 0x000020, "Wrong size on TabGamePadConfig_v3_C_GetCurrentPlatformIndex");
static_assert(offsetof(TabGamePadConfig_v3_C_GetCurrentPlatformIndex, PlatformIndex) == 0x000000, "Member 'TabGamePadConfig_v3_C_GetCurrentPlatformIndex::PlatformIndex' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_GetCurrentPlatformIndex, CallFunc_GetControllerPlatform_ReturnValue) == 0x000008, "Member 'TabGamePadConfig_v3_C_GetCurrentPlatformIndex::CallFunc_GetControllerPlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_GetCurrentPlatformIndex, K2Node_SwitchString_CmpSuccess) == 0x000018, "Member 'TabGamePadConfig_v3_C_GetCurrentPlatformIndex::K2Node_SwitchString_CmpSuccess' has a wrong offset!");

// Function TabGamePadConfig_v3.TabGamePadConfig_v3_C.HandleGamepadMappingInfoChange
// 0x0038 (0x0038 - 0x0000)
struct TabGamePadConfig_v3_C_HandleGamepadMappingInfoChange final
{
public:
	class FName                                   CombatModeId_Local;                                // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   EditModeId_Local;                                  // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsErebus_ReturnValue;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESubGame                                      CallFunc_GetSubGame_ReturnValue;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonInputSubsystem*                  CallFunc_GetContext_ReturnValue1;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCustomConfig_ReturnValue;               // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TabGamePadConfig_v3_C_HandleGamepadMappingInfoChange) == 0x000008, "Wrong alignment on TabGamePadConfig_v3_C_HandleGamepadMappingInfoChange");
static_assert(sizeof(TabGamePadConfig_v3_C_HandleGamepadMappingInfoChange) == 0x000038, "Wrong size on TabGamePadConfig_v3_C_HandleGamepadMappingInfoChange");
static_assert(offsetof(TabGamePadConfig_v3_C_HandleGamepadMappingInfoChange, CombatModeId_Local) == 0x000000, "Member 'TabGamePadConfig_v3_C_HandleGamepadMappingInfoChange::CombatModeId_Local' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_HandleGamepadMappingInfoChange, EditModeId_Local) == 0x000008, "Member 'TabGamePadConfig_v3_C_HandleGamepadMappingInfoChange::EditModeId_Local' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_HandleGamepadMappingInfoChange, CallFunc_IsErebus_ReturnValue) == 0x000010, "Member 'TabGamePadConfig_v3_C_HandleGamepadMappingInfoChange::CallFunc_IsErebus_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_HandleGamepadMappingInfoChange, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'TabGamePadConfig_v3_C_HandleGamepadMappingInfoChange::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_HandleGamepadMappingInfoChange, CallFunc_GetContext_ReturnValue) == 0x000018, "Member 'TabGamePadConfig_v3_C_HandleGamepadMappingInfoChange::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_HandleGamepadMappingInfoChange, CallFunc_GetSubGame_ReturnValue) == 0x000020, "Member 'TabGamePadConfig_v3_C_HandleGamepadMappingInfoChange::CallFunc_GetSubGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_HandleGamepadMappingInfoChange, K2Node_SwitchEnum_CmpSuccess) == 0x000021, "Member 'TabGamePadConfig_v3_C_HandleGamepadMappingInfoChange::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_HandleGamepadMappingInfoChange, CallFunc_GetContext_ReturnValue1) == 0x000028, "Member 'TabGamePadConfig_v3_C_HandleGamepadMappingInfoChange::CallFunc_GetContext_ReturnValue1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_HandleGamepadMappingInfoChange, CallFunc_GetCurrentInputType_ReturnValue) == 0x000030, "Member 'TabGamePadConfig_v3_C_HandleGamepadMappingInfoChange::CallFunc_GetCurrentInputType_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_HandleGamepadMappingInfoChange, CallFunc_IsCustomConfig_ReturnValue) == 0x000031, "Member 'TabGamePadConfig_v3_C_HandleGamepadMappingInfoChange::CallFunc_IsCustomConfig_ReturnValue' has a wrong offset!");

// Function TabGamePadConfig_v3.TabGamePadConfig_v3_C.IsConsole
// 0x0006 (0x0006 - 0x0000)
struct TabGamePadConfig_v3_C_IsConsole final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsErebus_ReturnValue;                     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsXboxPlatform_ReturnValue;               // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPS4Platform_ReturnValue;                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue1;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TabGamePadConfig_v3_C_IsConsole) == 0x000001, "Wrong alignment on TabGamePadConfig_v3_C_IsConsole");
static_assert(sizeof(TabGamePadConfig_v3_C_IsConsole) == 0x000006, "Wrong size on TabGamePadConfig_v3_C_IsConsole");
static_assert(offsetof(TabGamePadConfig_v3_C_IsConsole, ReturnValue) == 0x000000, "Member 'TabGamePadConfig_v3_C_IsConsole::ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_IsConsole, CallFunc_IsErebus_ReturnValue) == 0x000001, "Member 'TabGamePadConfig_v3_C_IsConsole::CallFunc_IsErebus_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_IsConsole, CallFunc_IsXboxPlatform_ReturnValue) == 0x000002, "Member 'TabGamePadConfig_v3_C_IsConsole::CallFunc_IsXboxPlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_IsConsole, CallFunc_IsPS4Platform_ReturnValue) == 0x000003, "Member 'TabGamePadConfig_v3_C_IsConsole::CallFunc_IsPS4Platform_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_IsConsole, CallFunc_BooleanOR_ReturnValue) == 0x000004, "Member 'TabGamePadConfig_v3_C_IsConsole::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_IsConsole, CallFunc_BooleanOR_ReturnValue1) == 0x000005, "Member 'TabGamePadConfig_v3_C_IsConsole::CallFunc_BooleanOR_ReturnValue1' has a wrong offset!");

// Function TabGamePadConfig_v3.TabGamePadConfig_v3_C.IsCustomConfig
// 0x0008 (0x0008 - 0x0000)
struct TabGamePadConfig_v3_C_IsCustomConfig final
{
public:
	int32                                         PresetIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCustomGamepadConfig_ReturnValue;        // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TabGamePadConfig_v3_C_IsCustomConfig) == 0x000004, "Wrong alignment on TabGamePadConfig_v3_C_IsCustomConfig");
static_assert(sizeof(TabGamePadConfig_v3_C_IsCustomConfig) == 0x000008, "Wrong size on TabGamePadConfig_v3_C_IsCustomConfig");
static_assert(offsetof(TabGamePadConfig_v3_C_IsCustomConfig, PresetIndex) == 0x000000, "Member 'TabGamePadConfig_v3_C_IsCustomConfig::PresetIndex' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_IsCustomConfig, ReturnValue) == 0x000004, "Member 'TabGamePadConfig_v3_C_IsCustomConfig::ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_IsCustomConfig, CallFunc_IsCustomGamepadConfig_ReturnValue) == 0x000005, "Member 'TabGamePadConfig_v3_C_IsCustomConfig::CallFunc_IsCustomGamepadConfig_ReturnValue' has a wrong offset!");

// Function TabGamePadConfig_v3.TabGamePadConfig_v3_C.SetupDisplayObject
// 0x0068 (0x0068 - 0x0000)
struct TabGamePadConfig_v3_C_SetupDisplayObject final
{
public:
	class FName                                   ActionName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   Key;                                               // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class UGamepadKeyTextButton_C*                Param_DisplayObject;                               // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortInputData*                         CallFunc_GetFortInputDataForBlueprint_ReturnValue; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetCustomGamepadInputPresetName_ReturnValue; // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetScreenLabel_ReturnValue;               // 0x0050(0x0018)()
};
static_assert(alignof(TabGamePadConfig_v3_C_SetupDisplayObject) == 0x000008, "Wrong alignment on TabGamePadConfig_v3_C_SetupDisplayObject");
static_assert(sizeof(TabGamePadConfig_v3_C_SetupDisplayObject) == 0x000068, "Wrong size on TabGamePadConfig_v3_C_SetupDisplayObject");
static_assert(offsetof(TabGamePadConfig_v3_C_SetupDisplayObject, ActionName) == 0x000000, "Member 'TabGamePadConfig_v3_C_SetupDisplayObject::ActionName' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_SetupDisplayObject, Key) == 0x000008, "Member 'TabGamePadConfig_v3_C_SetupDisplayObject::Key' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_SetupDisplayObject, Param_DisplayObject) == 0x000020, "Member 'TabGamePadConfig_v3_C_SetupDisplayObject::Param_DisplayObject' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_SetupDisplayObject, CallFunc_GetContext_ReturnValue) == 0x000028, "Member 'TabGamePadConfig_v3_C_SetupDisplayObject::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_SetupDisplayObject, CallFunc_GetFortInputDataForBlueprint_ReturnValue) == 0x000030, "Member 'TabGamePadConfig_v3_C_SetupDisplayObject::CallFunc_GetFortInputDataForBlueprint_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_SetupDisplayObject, CallFunc_GetCustomGamepadInputPresetName_ReturnValue) == 0x000038, "Member 'TabGamePadConfig_v3_C_SetupDisplayObject::CallFunc_GetCustomGamepadInputPresetName_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_SetupDisplayObject, CallFunc_Conv_StringToName_ReturnValue) == 0x000048, "Member 'TabGamePadConfig_v3_C_SetupDisplayObject::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_SetupDisplayObject, CallFunc_GetScreenLabel_ReturnValue) == 0x000050, "Member 'TabGamePadConfig_v3_C_SetupDisplayObject::CallFunc_GetScreenLabel_ReturnValue' has a wrong offset!");

// Function TabGamePadConfig_v3.TabGamePadConfig_v3_C.SelectSameItemInActionsList
// 0x0070 (0x0070 - 0x0000)
struct TabGamePadConfig_v3_C_SelectSameItemInActionsList final
{
public:
	int32                                         IndexToSelect_Local;                               // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortUINavigationManager*               CallFunc_GetUINavigationManager_ReturnValue;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortOptionsMenuInputData*              CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetCustomGamepadInputPresetName_ReturnValue; // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetKeyForAction_ReturnValue;              // 0x0050(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TabGamePadConfig_v3_C_SelectSameItemInActionsList) == 0x000008, "Wrong alignment on TabGamePadConfig_v3_C_SelectSameItemInActionsList");
static_assert(sizeof(TabGamePadConfig_v3_C_SelectSameItemInActionsList) == 0x000070, "Wrong size on TabGamePadConfig_v3_C_SelectSameItemInActionsList");
static_assert(offsetof(TabGamePadConfig_v3_C_SelectSameItemInActionsList, IndexToSelect_Local) == 0x000000, "Member 'TabGamePadConfig_v3_C_SelectSameItemInActionsList::IndexToSelect_Local' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_SelectSameItemInActionsList, Temp_int_Array_Index_Variable) == 0x000004, "Member 'TabGamePadConfig_v3_C_SelectSameItemInActionsList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_SelectSameItemInActionsList, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'TabGamePadConfig_v3_C_SelectSameItemInActionsList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_SelectSameItemInActionsList, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'TabGamePadConfig_v3_C_SelectSameItemInActionsList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_SelectSameItemInActionsList, CallFunc_GetUINavigationManager_ReturnValue) == 0x000010, "Member 'TabGamePadConfig_v3_C_SelectSameItemInActionsList::CallFunc_GetUINavigationManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_SelectSameItemInActionsList, Temp_bool_True_if_break_was_hit_Variable) == 0x000018, "Member 'TabGamePadConfig_v3_C_SelectSameItemInActionsList::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_SelectSameItemInActionsList, CallFunc_Not_PreBool_ReturnValue) == 0x000019, "Member 'TabGamePadConfig_v3_C_SelectSameItemInActionsList::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_SelectSameItemInActionsList, CallFunc_Array_Get_Item) == 0x000020, "Member 'TabGamePadConfig_v3_C_SelectSameItemInActionsList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_SelectSameItemInActionsList, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'TabGamePadConfig_v3_C_SelectSameItemInActionsList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_SelectSameItemInActionsList, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'TabGamePadConfig_v3_C_SelectSameItemInActionsList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_SelectSameItemInActionsList, CallFunc_BooleanAND_ReturnValue) == 0x00002D, "Member 'TabGamePadConfig_v3_C_SelectSameItemInActionsList::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_SelectSameItemInActionsList, CallFunc_GetContext_ReturnValue) == 0x000030, "Member 'TabGamePadConfig_v3_C_SelectSameItemInActionsList::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_SelectSameItemInActionsList, CallFunc_GetCustomGamepadInputPresetName_ReturnValue) == 0x000038, "Member 'TabGamePadConfig_v3_C_SelectSameItemInActionsList::CallFunc_GetCustomGamepadInputPresetName_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_SelectSameItemInActionsList, CallFunc_Conv_StringToName_ReturnValue) == 0x000048, "Member 'TabGamePadConfig_v3_C_SelectSameItemInActionsList::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_SelectSameItemInActionsList, CallFunc_GetKeyForAction_ReturnValue) == 0x000050, "Member 'TabGamePadConfig_v3_C_SelectSameItemInActionsList::CallFunc_GetKeyForAction_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_SelectSameItemInActionsList, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000068, "Member 'TabGamePadConfig_v3_C_SelectSameItemInActionsList::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");

// Function TabGamePadConfig_v3.TabGamePadConfig_v3_C.CloseCustomActionsPanel
// 0x0020 (0x0020 - 0x0000)
struct TabGamePadConfig_v3_C_CloseCustomActionsPanel final
{
public:
	bool                                          FocusLastButton;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortUINavigationManager*               CallFunc_GetUINavigationManager_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonUISubsystem*                     CallFunc_GetContext_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonInputManager*                    CallFunc_GetInputManager_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TabGamePadConfig_v3_C_CloseCustomActionsPanel) == 0x000008, "Wrong alignment on TabGamePadConfig_v3_C_CloseCustomActionsPanel");
static_assert(sizeof(TabGamePadConfig_v3_C_CloseCustomActionsPanel) == 0x000020, "Wrong size on TabGamePadConfig_v3_C_CloseCustomActionsPanel");
static_assert(offsetof(TabGamePadConfig_v3_C_CloseCustomActionsPanel, FocusLastButton) == 0x000000, "Member 'TabGamePadConfig_v3_C_CloseCustomActionsPanel::FocusLastButton' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_CloseCustomActionsPanel, CallFunc_GetUINavigationManager_ReturnValue) == 0x000008, "Member 'TabGamePadConfig_v3_C_CloseCustomActionsPanel::CallFunc_GetUINavigationManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_CloseCustomActionsPanel, CallFunc_GetContext_ReturnValue) == 0x000010, "Member 'TabGamePadConfig_v3_C_CloseCustomActionsPanel::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_CloseCustomActionsPanel, CallFunc_GetInputManager_ReturnValue) == 0x000018, "Member 'TabGamePadConfig_v3_C_CloseCustomActionsPanel::CallFunc_GetInputManager_ReturnValue' has a wrong offset!");

// Function TabGamePadConfig_v3.TabGamePadConfig_v3_C.CreateCustomResetToDefaultList
// 0x0128 (0x0128 - 0x0000)
struct TabGamePadConfig_v3_C_CreateCustomResetToDefaultList final
{
public:
	TArray<struct FConfirmationDialogAction>      ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm)
	TArray<struct FConfirmationDialogAction>      ReturnValue_Local;                                 // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Array_Get_Item;                           // 0x0038(0x0018)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FConfirmationDialogAction              K2Node_MakeStruct_ConfirmationDialogAction;        // 0x0058(0x00C8)()
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TabGamePadConfig_v3_C_CreateCustomResetToDefaultList) == 0x000008, "Wrong alignment on TabGamePadConfig_v3_C_CreateCustomResetToDefaultList");
static_assert(sizeof(TabGamePadConfig_v3_C_CreateCustomResetToDefaultList) == 0x000128, "Wrong size on TabGamePadConfig_v3_C_CreateCustomResetToDefaultList");
static_assert(offsetof(TabGamePadConfig_v3_C_CreateCustomResetToDefaultList, ReturnValue) == 0x000000, "Member 'TabGamePadConfig_v3_C_CreateCustomResetToDefaultList::ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_CreateCustomResetToDefaultList, ReturnValue_Local) == 0x000010, "Member 'TabGamePadConfig_v3_C_CreateCustomResetToDefaultList::ReturnValue_Local' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_CreateCustomResetToDefaultList, Temp_int_Array_Index_Variable) == 0x000020, "Member 'TabGamePadConfig_v3_C_CreateCustomResetToDefaultList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_CreateCustomResetToDefaultList, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'TabGamePadConfig_v3_C_CreateCustomResetToDefaultList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_CreateCustomResetToDefaultList, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'TabGamePadConfig_v3_C_CreateCustomResetToDefaultList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_CreateCustomResetToDefaultList, CallFunc_Conv_StringToName_ReturnValue) == 0x00002C, "Member 'TabGamePadConfig_v3_C_CreateCustomResetToDefaultList::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_CreateCustomResetToDefaultList, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'TabGamePadConfig_v3_C_CreateCustomResetToDefaultList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_CreateCustomResetToDefaultList, CallFunc_Array_Get_Item) == 0x000038, "Member 'TabGamePadConfig_v3_C_CreateCustomResetToDefaultList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_CreateCustomResetToDefaultList, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'TabGamePadConfig_v3_C_CreateCustomResetToDefaultList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_CreateCustomResetToDefaultList, K2Node_MakeStruct_ConfirmationDialogAction) == 0x000058, "Member 'TabGamePadConfig_v3_C_CreateCustomResetToDefaultList::K2Node_MakeStruct_ConfirmationDialogAction' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_CreateCustomResetToDefaultList, CallFunc_Array_Add_ReturnValue) == 0x000120, "Member 'TabGamePadConfig_v3_C_CreateCustomResetToDefaultList::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function TabGamePadConfig_v3.TabGamePadConfig_v3_C.ChangeCustomTabListVisibilityForInputType
// 0x0002 (0x0002 - 0x0000)
struct TabGamePadConfig_v3_C_ChangeCustomTabListVisibilityForInputType final
{
public:
	ECommonInputType                              Selection;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TabGamePadConfig_v3_C_ChangeCustomTabListVisibilityForInputType) == 0x000001, "Wrong alignment on TabGamePadConfig_v3_C_ChangeCustomTabListVisibilityForInputType");
static_assert(sizeof(TabGamePadConfig_v3_C_ChangeCustomTabListVisibilityForInputType) == 0x000002, "Wrong size on TabGamePadConfig_v3_C_ChangeCustomTabListVisibilityForInputType");
static_assert(offsetof(TabGamePadConfig_v3_C_ChangeCustomTabListVisibilityForInputType, Selection) == 0x000000, "Member 'TabGamePadConfig_v3_C_ChangeCustomTabListVisibilityForInputType::Selection' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ChangeCustomTabListVisibilityForInputType, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'TabGamePadConfig_v3_C_ChangeCustomTabListVisibilityForInputType::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function TabGamePadConfig_v3.TabGamePadConfig_v3_C.HandleGamepadInfoSelectorBack
// 0x0018 (0x0018 - 0x0000)
struct TabGamePadConfig_v3_C_HandleGamepadInfoSelectorBack final
{
public:
	TArray<class FText>                           CallFunc_AreAllImportantActionsBound_OutUnboundScreenLabels; // 0x0000(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_AreAllImportantActionsBound_ReturnValue;  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TabGamePadConfig_v3_C_HandleGamepadInfoSelectorBack) == 0x000008, "Wrong alignment on TabGamePadConfig_v3_C_HandleGamepadInfoSelectorBack");
static_assert(sizeof(TabGamePadConfig_v3_C_HandleGamepadInfoSelectorBack) == 0x000018, "Wrong size on TabGamePadConfig_v3_C_HandleGamepadInfoSelectorBack");
static_assert(offsetof(TabGamePadConfig_v3_C_HandleGamepadInfoSelectorBack, CallFunc_AreAllImportantActionsBound_OutUnboundScreenLabels) == 0x000000, "Member 'TabGamePadConfig_v3_C_HandleGamepadInfoSelectorBack::CallFunc_AreAllImportantActionsBound_OutUnboundScreenLabels' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_HandleGamepadInfoSelectorBack, CallFunc_AreAllImportantActionsBound_ReturnValue) == 0x000010, "Member 'TabGamePadConfig_v3_C_HandleGamepadInfoSelectorBack::CallFunc_AreAllImportantActionsBound_ReturnValue' has a wrong offset!");

// Function TabGamePadConfig_v3.TabGamePadConfig_v3_C.ChangeCustomResetVisibilityForInputType
// 0x0002 (0x0002 - 0x0000)
struct TabGamePadConfig_v3_C_ChangeCustomResetVisibilityForInputType final
{
public:
	ECommonInputType                              InputType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TabGamePadConfig_v3_C_ChangeCustomResetVisibilityForInputType) == 0x000001, "Wrong alignment on TabGamePadConfig_v3_C_ChangeCustomResetVisibilityForInputType");
static_assert(sizeof(TabGamePadConfig_v3_C_ChangeCustomResetVisibilityForInputType) == 0x000002, "Wrong size on TabGamePadConfig_v3_C_ChangeCustomResetVisibilityForInputType");
static_assert(offsetof(TabGamePadConfig_v3_C_ChangeCustomResetVisibilityForInputType, InputType) == 0x000000, "Member 'TabGamePadConfig_v3_C_ChangeCustomResetVisibilityForInputType::InputType' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ChangeCustomResetVisibilityForInputType, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'TabGamePadConfig_v3_C_ChangeCustomResetVisibilityForInputType::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function TabGamePadConfig_v3.TabGamePadConfig_v3_C.ChangeCustomClearVisibilityForInputType
// 0x0002 (0x0002 - 0x0000)
struct TabGamePadConfig_v3_C_ChangeCustomClearVisibilityForInputType final
{
public:
	ECommonInputType                              InputType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TabGamePadConfig_v3_C_ChangeCustomClearVisibilityForInputType) == 0x000001, "Wrong alignment on TabGamePadConfig_v3_C_ChangeCustomClearVisibilityForInputType");
static_assert(sizeof(TabGamePadConfig_v3_C_ChangeCustomClearVisibilityForInputType) == 0x000002, "Wrong size on TabGamePadConfig_v3_C_ChangeCustomClearVisibilityForInputType");
static_assert(offsetof(TabGamePadConfig_v3_C_ChangeCustomClearVisibilityForInputType, InputType) == 0x000000, "Member 'TabGamePadConfig_v3_C_ChangeCustomClearVisibilityForInputType::InputType' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_ChangeCustomClearVisibilityForInputType, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'TabGamePadConfig_v3_C_ChangeCustomClearVisibilityForInputType::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function TabGamePadConfig_v3.TabGamePadConfig_v3_C.NavigateToSelectedConfig
// 0x0018 (0x0018 - 0x0000)
struct TabGamePadConfig_v3_C_NavigateToSelectedConfig final
{
public:
	class UFortUINavigationManager*               CallFunc_GetUINavigationManager_ReturnValue;       // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSelectedButtonIndex_ReturnValue;       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButton*                          CallFunc_GetButtonAtIndex_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TabGamePadConfig_v3_C_NavigateToSelectedConfig) == 0x000008, "Wrong alignment on TabGamePadConfig_v3_C_NavigateToSelectedConfig");
static_assert(sizeof(TabGamePadConfig_v3_C_NavigateToSelectedConfig) == 0x000018, "Wrong size on TabGamePadConfig_v3_C_NavigateToSelectedConfig");
static_assert(offsetof(TabGamePadConfig_v3_C_NavigateToSelectedConfig, CallFunc_GetUINavigationManager_ReturnValue) == 0x000000, "Member 'TabGamePadConfig_v3_C_NavigateToSelectedConfig::CallFunc_GetUINavigationManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_NavigateToSelectedConfig, CallFunc_GetSelectedButtonIndex_ReturnValue) == 0x000008, "Member 'TabGamePadConfig_v3_C_NavigateToSelectedConfig::CallFunc_GetSelectedButtonIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_NavigateToSelectedConfig, CallFunc_GetButtonAtIndex_ReturnValue) == 0x000010, "Member 'TabGamePadConfig_v3_C_NavigateToSelectedConfig::CallFunc_GetButtonAtIndex_ReturnValue' has a wrong offset!");

// Function TabGamePadConfig_v3.TabGamePadConfig_v3_C.AreWeOkayWithThisChange
// 0x0068 (0x0068 - 0x0000)
struct TabGamePadConfig_v3_C_AreWeOkayWithThisChange final
{
public:
	class FName                                   ActionName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   Key;                                               // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          IsOkay;                                            // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 FullScreenMap_Local;                               // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FName                                   GamepadToggleFullscreenMapName_Local;              // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ToggleFullscreenMapName_Local;                     // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsOkay_Local;                                      // 0x0048(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue1;           // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue2;           // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue3;           // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue1;                   // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue2;                   // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TabGamePadConfig_v3_C_AreWeOkayWithThisChange) == 0x000008, "Wrong alignment on TabGamePadConfig_v3_C_AreWeOkayWithThisChange");
static_assert(sizeof(TabGamePadConfig_v3_C_AreWeOkayWithThisChange) == 0x000068, "Wrong size on TabGamePadConfig_v3_C_AreWeOkayWithThisChange");
static_assert(offsetof(TabGamePadConfig_v3_C_AreWeOkayWithThisChange, ActionName) == 0x000000, "Member 'TabGamePadConfig_v3_C_AreWeOkayWithThisChange::ActionName' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_AreWeOkayWithThisChange, Key) == 0x000008, "Member 'TabGamePadConfig_v3_C_AreWeOkayWithThisChange::Key' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_AreWeOkayWithThisChange, IsOkay) == 0x000020, "Member 'TabGamePadConfig_v3_C_AreWeOkayWithThisChange::IsOkay' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_AreWeOkayWithThisChange, FullScreenMap_Local) == 0x000028, "Member 'TabGamePadConfig_v3_C_AreWeOkayWithThisChange::FullScreenMap_Local' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_AreWeOkayWithThisChange, GamepadToggleFullscreenMapName_Local) == 0x000038, "Member 'TabGamePadConfig_v3_C_AreWeOkayWithThisChange::GamepadToggleFullscreenMapName_Local' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_AreWeOkayWithThisChange, ToggleFullscreenMapName_Local) == 0x000040, "Member 'TabGamePadConfig_v3_C_AreWeOkayWithThisChange::ToggleFullscreenMapName_Local' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_AreWeOkayWithThisChange, IsOkay_Local) == 0x000048, "Member 'TabGamePadConfig_v3_C_AreWeOkayWithThisChange::IsOkay_Local' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_AreWeOkayWithThisChange, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000049, "Member 'TabGamePadConfig_v3_C_AreWeOkayWithThisChange::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_AreWeOkayWithThisChange, CallFunc_EqualEqual_KeyKey_ReturnValue1) == 0x00004A, "Member 'TabGamePadConfig_v3_C_AreWeOkayWithThisChange::CallFunc_EqualEqual_KeyKey_ReturnValue1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_AreWeOkayWithThisChange, CallFunc_EqualEqual_KeyKey_ReturnValue2) == 0x00004B, "Member 'TabGamePadConfig_v3_C_AreWeOkayWithThisChange::CallFunc_EqualEqual_KeyKey_ReturnValue2' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_AreWeOkayWithThisChange, CallFunc_EqualEqual_KeyKey_ReturnValue3) == 0x00004C, "Member 'TabGamePadConfig_v3_C_AreWeOkayWithThisChange::CallFunc_EqualEqual_KeyKey_ReturnValue3' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_AreWeOkayWithThisChange, CallFunc_Conv_NameToString_ReturnValue) == 0x000050, "Member 'TabGamePadConfig_v3_C_AreWeOkayWithThisChange::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_AreWeOkayWithThisChange, CallFunc_BooleanOR_ReturnValue) == 0x000060, "Member 'TabGamePadConfig_v3_C_AreWeOkayWithThisChange::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_AreWeOkayWithThisChange, CallFunc_BooleanOR_ReturnValue1) == 0x000061, "Member 'TabGamePadConfig_v3_C_AreWeOkayWithThisChange::CallFunc_BooleanOR_ReturnValue1' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_AreWeOkayWithThisChange, CallFunc_BooleanOR_ReturnValue2) == 0x000062, "Member 'TabGamePadConfig_v3_C_AreWeOkayWithThisChange::CallFunc_BooleanOR_ReturnValue2' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_AreWeOkayWithThisChange, CallFunc_Contains_ReturnValue) == 0x000063, "Member 'TabGamePadConfig_v3_C_AreWeOkayWithThisChange::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_AreWeOkayWithThisChange, CallFunc_BooleanAND_ReturnValue) == 0x000064, "Member 'TabGamePadConfig_v3_C_AreWeOkayWithThisChange::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(TabGamePadConfig_v3_C_AreWeOkayWithThisChange, CallFunc_Not_PreBool_ReturnValue) == 0x000065, "Member 'TabGamePadConfig_v3_C_AreWeOkayWithThisChange::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function TabGamePadConfig_v3.TabGamePadConfig_v3_C.GamepadInfoSelectorNavRight
// 0x0008 (0x0008 - 0x0000)
struct TabGamePadConfig_v3_C_GamepadInfoSelectorNavRight final
{
public:
	class UFortUINavigationManager*               CallFunc_GetUINavigationManager_ReturnValue;       // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TabGamePadConfig_v3_C_GamepadInfoSelectorNavRight) == 0x000008, "Wrong alignment on TabGamePadConfig_v3_C_GamepadInfoSelectorNavRight");
static_assert(sizeof(TabGamePadConfig_v3_C_GamepadInfoSelectorNavRight) == 0x000008, "Wrong size on TabGamePadConfig_v3_C_GamepadInfoSelectorNavRight");
static_assert(offsetof(TabGamePadConfig_v3_C_GamepadInfoSelectorNavRight, CallFunc_GetUINavigationManager_ReturnValue) == 0x000000, "Member 'TabGamePadConfig_v3_C_GamepadInfoSelectorNavRight::CallFunc_GetUINavigationManager_ReturnValue' has a wrong offset!");

}

