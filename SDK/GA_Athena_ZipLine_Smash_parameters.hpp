#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Athena_ZipLine_Smash

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function GA_Athena_ZipLine_Smash.GA_Athena_ZipLine_Smash_C.ExecuteUbergraph_GA_Athena_ZipLine_Smash
// 0x0210 (0x0210 - 0x0000)
struct GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool bIsZiplining)>            K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_Event_EventData;                            // 0x0018(0x00A8)(ConstParm)
	class ABP_Athena_Environmental_ZipLine_C*     K2Node_DynamicCast_AsBP_Athena_Environmental_Zip_Line; // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CB[0x5];                                       // 0x00CB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UPawnMovementComponent*                 CallFunc_GetMovementComponent_ReturnValue;         // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterMovementComponent*            K2Node_DynamicCast_AsCharacter_Movement_Component; // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortAthenaVehicle*                     CallFunc_GetVehicle_ReturnValue;                   // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_CustomEvent_Character;                      // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 K2Node_CustomEvent_PrevMovementMode;               // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_CustomEvent_PreviousCustomMode;             // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FB[0x5];                                       // 0x00FB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0100(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortAthenaVehicle*                     CallFunc_GetVehicle_ReturnValue1;                  // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue4;                     // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue5;                     // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11A[0x2];                                      // 0x011A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_CustomEvent_Hit;                            // 0x011C(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_1A4[0x4];                                      // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B9[0x3];                                      // 0x01B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(struct FHitResult& Hit)>       K2Node_CreateDelegate_OutputDelegate1;             // 0x01BC(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_1CC[0x4];                                      // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x01D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue; // 0x01D8(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue1; // 0x01E0(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bIsZiplining;                   // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E9[0x3];                                      // 0x01E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool bIsZiplining)>            K2Node_CreateDelegate_OutputDelegate2;             // 0x01EC(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(bool bIsZiplining)>            K2Node_CreateDelegate_OutputDelegate3;             // 0x01FC(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash) == 0x000008, "Wrong alignment on GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash");
static_assert(sizeof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash) == 0x000210, "Wrong size on GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, EntryPoint) == 0x000000, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_Event_EventData) == 0x000018, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_Event_EventData' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_DynamicCast_AsBP_Athena_Environmental_Zip_Line) == 0x0000C0, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_DynamicCast_AsBP_Athena_Environmental_Zip_Line' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_DynamicCast_bSuccess) == 0x0000C8, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x0000C9, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_IsValid_ReturnValue) == 0x0000CA, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_GetMovementComponent_ReturnValue) == 0x0000D0, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_GetMovementComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_DynamicCast_AsCharacter_Movement_Component) == 0x0000D8, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_DynamicCast_AsCharacter_Movement_Component' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_DynamicCast_bSuccess1) == 0x0000E0, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_GetValidValue_ReturnValue) == 0x0000E1, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_IsValid_ReturnValue1) == 0x0000E2, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000E3, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_GetVehicle_ReturnValue) == 0x0000E8, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_GetVehicle_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_CustomEvent_Character) == 0x0000F0, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_CustomEvent_Character' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_CustomEvent_PrevMovementMode) == 0x0000F8, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_CustomEvent_PrevMovementMode' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_CustomEvent_PreviousCustomMode) == 0x0000F9, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_CustomEvent_PreviousCustomMode' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_IsValid_ReturnValue2) == 0x0000FA, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_K2_SetTimer_ReturnValue) == 0x000100, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_IsValid_ReturnValue3) == 0x000108, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_GetVehicle_ReturnValue1) == 0x000110, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_GetVehicle_ReturnValue1' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_IsValid_ReturnValue4) == 0x000118, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_IsValid_ReturnValue4' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_IsValid_ReturnValue5) == 0x000119, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_IsValid_ReturnValue5' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_CustomEvent_Hit) == 0x00011C, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_CustomEvent_Hit' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x0001A8, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x0001B0, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_DynamicCast_bSuccess2) == 0x0001B8, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_CreateDelegate_OutputDelegate1) == 0x0001BC, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x0001D0, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue) == 0x0001D8, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue1) == 0x0001E0, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue1' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_CustomEvent_bIsZiplining) == 0x0001E8, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_CustomEvent_bIsZiplining' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_CreateDelegate_OutputDelegate2) == 0x0001EC, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_CreateDelegate_OutputDelegate3) == 0x0001FC, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");

// Function GA_Athena_ZipLine_Smash.GA_Athena_ZipLine_Smash_C.HandleZiplineStateChanged
// 0x0001 (0x0001 - 0x0000)
struct GA_Athena_ZipLine_Smash_C_HandleZiplineStateChanged final
{
public:
	bool                                          bIsZiplining;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Athena_ZipLine_Smash_C_HandleZiplineStateChanged) == 0x000001, "Wrong alignment on GA_Athena_ZipLine_Smash_C_HandleZiplineStateChanged");
static_assert(sizeof(GA_Athena_ZipLine_Smash_C_HandleZiplineStateChanged) == 0x000001, "Wrong size on GA_Athena_ZipLine_Smash_C_HandleZiplineStateChanged");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_HandleZiplineStateChanged, bIsZiplining) == 0x000000, "Member 'GA_Athena_ZipLine_Smash_C_HandleZiplineStateChanged::bIsZiplining' has a wrong offset!");

// Function GA_Athena_ZipLine_Smash.GA_Athena_ZipLine_Smash_C.RemoveFallDamageImmunity
// 0x0088 (0x0088 - 0x0000)
struct GA_Athena_ZipLine_Smash_C_RemoveFallDamageImmunity final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(GA_Athena_ZipLine_Smash_C_RemoveFallDamageImmunity) == 0x000004, "Wrong alignment on GA_Athena_ZipLine_Smash_C_RemoveFallDamageImmunity");
static_assert(sizeof(GA_Athena_ZipLine_Smash_C_RemoveFallDamageImmunity) == 0x000088, "Wrong size on GA_Athena_ZipLine_Smash_C_RemoveFallDamageImmunity");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_RemoveFallDamageImmunity, Hit) == 0x000000, "Member 'GA_Athena_ZipLine_Smash_C_RemoveFallDamageImmunity::Hit' has a wrong offset!");

// Function GA_Athena_ZipLine_Smash.GA_Athena_ZipLine_Smash_C.HandleMovementModeChanged
// 0x0010 (0x0010 - 0x0000)
struct GA_Athena_ZipLine_Smash_C_HandleMovementModeChanged final
{
public:
	class ACharacter*                             Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 PrevMovementMode;                                  // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         PreviousCustomMode;                                // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Athena_ZipLine_Smash_C_HandleMovementModeChanged) == 0x000008, "Wrong alignment on GA_Athena_ZipLine_Smash_C_HandleMovementModeChanged");
static_assert(sizeof(GA_Athena_ZipLine_Smash_C_HandleMovementModeChanged) == 0x000010, "Wrong size on GA_Athena_ZipLine_Smash_C_HandleMovementModeChanged");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_HandleMovementModeChanged, Character) == 0x000000, "Member 'GA_Athena_ZipLine_Smash_C_HandleMovementModeChanged::Character' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_HandleMovementModeChanged, PrevMovementMode) == 0x000008, "Member 'GA_Athena_ZipLine_Smash_C_HandleMovementModeChanged::PrevMovementMode' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_HandleMovementModeChanged, PreviousCustomMode) == 0x000009, "Member 'GA_Athena_ZipLine_Smash_C_HandleMovementModeChanged::PreviousCustomMode' has a wrong offset!");

// Function GA_Athena_ZipLine_Smash.GA_Athena_ZipLine_Smash_C.K2_ActivateAbilityFromEvent
// 0x00A8 (0x00A8 - 0x0000)
struct GA_Athena_ZipLine_Smash_C_K2_ActivateAbilityFromEvent final
{
public:
	struct FGameplayEventData                     EventData;                                         // 0x0000(0x00A8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GA_Athena_ZipLine_Smash_C_K2_ActivateAbilityFromEvent) == 0x000008, "Wrong alignment on GA_Athena_ZipLine_Smash_C_K2_ActivateAbilityFromEvent");
static_assert(sizeof(GA_Athena_ZipLine_Smash_C_K2_ActivateAbilityFromEvent) == 0x0000A8, "Wrong size on GA_Athena_ZipLine_Smash_C_K2_ActivateAbilityFromEvent");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_K2_ActivateAbilityFromEvent, EventData) == 0x000000, "Member 'GA_Athena_ZipLine_Smash_C_K2_ActivateAbilityFromEvent::EventData' has a wrong offset!");

// Function GA_Athena_ZipLine_Smash.GA_Athena_ZipLine_Smash_C.BreakNearbyStructures
// 0x0108 (0x0108 - 0x0000)
struct GA_Athena_ZipLine_Smash_C_BreakNearbyStructures final
{
public:
	class AFortPlayerPawn*                        Param_PlayerPawn;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E[0x2];                                       // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array1;                           // 0x0050(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	TArray<class AActor*>                         CallFunc_BoxOverlapActors_OutActors;               // 0x0060(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_BoxOverlapActors_ReturnValue;             // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABuildingActor*                         K2Node_DynamicCast_AsBuilding_Actor;               // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortAthenaSupplyDropBalloon*           K2Node_DynamicCast_AsFort_Athena_Supply_Drop_Balloon; // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAbilityTargetDataHandle       CallFunc_AbilityTargetDataFromActor_ReturnValue;   // 0x00A8(0x0020)()
	class ABuildingProp*                          K2Node_DynamicCast_AsBuilding_Prop;                // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue; // 0x00D8(0x0010)(ZeroConstructor, ReferenceParm)
	class AAthena_Prop_SneakySnowman_C*           K2Node_DynamicCast_AsAthena_Prop_Sneaky_Snowman;   // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures) == 0x000008, "Wrong alignment on GA_Athena_ZipLine_Smash_C_BreakNearbyStructures");
static_assert(sizeof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures) == 0x000108, "Wrong size on GA_Athena_ZipLine_Smash_C_BreakNearbyStructures");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures, Param_PlayerPawn) == 0x000000, "Member 'GA_Athena_ZipLine_Smash_C_BreakNearbyStructures::Param_PlayerPawn' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures, K2Node_MakeArray_Array) == 0x000008, "Member 'GA_Athena_ZipLine_Smash_C_BreakNearbyStructures::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'GA_Athena_ZipLine_Smash_C_BreakNearbyStructures::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures, Temp_int_Array_Index_Variable) == 0x000024, "Member 'GA_Athena_ZipLine_Smash_C_BreakNearbyStructures::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures, CallFunc_BreakVector_X) == 0x000028, "Member 'GA_Athena_ZipLine_Smash_C_BreakNearbyStructures::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures, CallFunc_BreakVector_Y) == 0x00002C, "Member 'GA_Athena_ZipLine_Smash_C_BreakNearbyStructures::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures, CallFunc_BreakVector_Z) == 0x000030, "Member 'GA_Athena_ZipLine_Smash_C_BreakNearbyStructures::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures, CallFunc_Add_FloatFloat_ReturnValue) == 0x000034, "Member 'GA_Athena_ZipLine_Smash_C_BreakNearbyStructures::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'GA_Athena_ZipLine_Smash_C_BreakNearbyStructures::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures, CallFunc_MakeVector_ReturnValue) == 0x00003C, "Member 'GA_Athena_ZipLine_Smash_C_BreakNearbyStructures::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'GA_Athena_ZipLine_Smash_C_BreakNearbyStructures::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures, CallFunc_IsValid_ReturnValue) == 0x00004C, "Member 'GA_Athena_ZipLine_Smash_C_BreakNearbyStructures::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures, CallFunc_IsValid_ReturnValue1) == 0x00004D, "Member 'GA_Athena_ZipLine_Smash_C_BreakNearbyStructures::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures, K2Node_MakeArray_Array1) == 0x000050, "Member 'GA_Athena_ZipLine_Smash_C_BreakNearbyStructures::K2Node_MakeArray_Array1' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures, CallFunc_BoxOverlapActors_OutActors) == 0x000060, "Member 'GA_Athena_ZipLine_Smash_C_BreakNearbyStructures::CallFunc_BoxOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures, CallFunc_BoxOverlapActors_ReturnValue) == 0x000070, "Member 'GA_Athena_ZipLine_Smash_C_BreakNearbyStructures::CallFunc_BoxOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures, CallFunc_Array_Length_ReturnValue) == 0x000074, "Member 'GA_Athena_ZipLine_Smash_C_BreakNearbyStructures::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures, CallFunc_Array_Get_Item) == 0x000078, "Member 'GA_Athena_ZipLine_Smash_C_BreakNearbyStructures::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures, CallFunc_Less_IntInt_ReturnValue) == 0x000080, "Member 'GA_Athena_ZipLine_Smash_C_BreakNearbyStructures::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures, K2Node_DynamicCast_AsBuilding_Actor) == 0x000088, "Member 'GA_Athena_ZipLine_Smash_C_BreakNearbyStructures::K2Node_DynamicCast_AsBuilding_Actor' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'GA_Athena_ZipLine_Smash_C_BreakNearbyStructures::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures, K2Node_DynamicCast_AsFort_Athena_Supply_Drop_Balloon) == 0x000098, "Member 'GA_Athena_ZipLine_Smash_C_BreakNearbyStructures::K2Node_DynamicCast_AsFort_Athena_Supply_Drop_Balloon' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures, K2Node_DynamicCast_bSuccess1) == 0x0000A0, "Member 'GA_Athena_ZipLine_Smash_C_BreakNearbyStructures::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures, CallFunc_AbilityTargetDataFromActor_ReturnValue) == 0x0000A8, "Member 'GA_Athena_ZipLine_Smash_C_BreakNearbyStructures::CallFunc_AbilityTargetDataFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures, K2Node_DynamicCast_AsBuilding_Prop) == 0x0000C8, "Member 'GA_Athena_ZipLine_Smash_C_BreakNearbyStructures::K2Node_DynamicCast_AsBuilding_Prop' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures, K2Node_DynamicCast_bSuccess2) == 0x0000D0, "Member 'GA_Athena_ZipLine_Smash_C_BreakNearbyStructures::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures, CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue) == 0x0000D8, "Member 'GA_Athena_ZipLine_Smash_C_BreakNearbyStructures::CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures, K2Node_DynamicCast_AsAthena_Prop_Sneaky_Snowman) == 0x0000E8, "Member 'GA_Athena_ZipLine_Smash_C_BreakNearbyStructures::K2Node_DynamicCast_AsAthena_Prop_Sneaky_Snowman' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures, K2Node_DynamicCast_bSuccess3) == 0x0000F0, "Member 'GA_Athena_ZipLine_Smash_C_BreakNearbyStructures::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x0000F8, "Member 'GA_Athena_ZipLine_Smash_C_BreakNearbyStructures::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures, K2Node_DynamicCast_bSuccess4) == 0x000100, "Member 'GA_Athena_ZipLine_Smash_C_BreakNearbyStructures::K2Node_DynamicCast_bSuccess4' has a wrong offset!");

// Function GA_Athena_ZipLine_Smash.GA_Athena_ZipLine_Smash_C.SpawnMotor
// 0x0270 (0x0270 - 0x0000)
struct GA_Athena_ZipLine_Smash_C_SpawnMotor final
{
public:
	class AActor*                                 Param_PlayerPawn;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool bIsZiplining)>            K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_AddLocalRotation_SweepHitResult;       // 0x001C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_AddRelativeLocation_SweepHitResult;    // 0x00B0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0144(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17D[0x3];                                      // 0x017D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0180(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x018C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_198[0x8];                                      // 0x0198(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x01A0(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ZipLine_Athena_Harness_C*           CallFunc_FinishSpawningActor_ReturnValue;          // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x01E0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(GA_Athena_ZipLine_Smash_C_SpawnMotor) == 0x000010, "Wrong alignment on GA_Athena_ZipLine_Smash_C_SpawnMotor");
static_assert(sizeof(GA_Athena_ZipLine_Smash_C_SpawnMotor) == 0x000270, "Wrong size on GA_Athena_ZipLine_Smash_C_SpawnMotor");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_SpawnMotor, Param_PlayerPawn) == 0x000000, "Member 'GA_Athena_ZipLine_Smash_C_SpawnMotor::Param_PlayerPawn' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_SpawnMotor, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'GA_Athena_ZipLine_Smash_C_SpawnMotor::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_SpawnMotor, CallFunc_HasAuthority_ReturnValue) == 0x000018, "Member 'GA_Athena_ZipLine_Smash_C_SpawnMotor::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_SpawnMotor, CallFunc_K2_AddLocalRotation_SweepHitResult) == 0x00001C, "Member 'GA_Athena_ZipLine_Smash_C_SpawnMotor::CallFunc_K2_AddLocalRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_SpawnMotor, CallFunc_Add_VectorVector_ReturnValue) == 0x0000A4, "Member 'GA_Athena_ZipLine_Smash_C_SpawnMotor::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_SpawnMotor, CallFunc_K2_AddRelativeLocation_SweepHitResult) == 0x0000B0, "Member 'GA_Athena_ZipLine_Smash_C_SpawnMotor::CallFunc_K2_AddRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_SpawnMotor, CallFunc_GetActorForwardVector_ReturnValue) == 0x000138, "Member 'GA_Athena_ZipLine_Smash_C_SpawnMotor::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_SpawnMotor, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000144, "Member 'GA_Athena_ZipLine_Smash_C_SpawnMotor::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_SpawnMotor, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000150, "Member 'GA_Athena_ZipLine_Smash_C_SpawnMotor::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_SpawnMotor, CallFunc_Normal_ReturnValue) == 0x00015C, "Member 'GA_Athena_ZipLine_Smash_C_SpawnMotor::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_SpawnMotor, CallFunc_BreakRotator_Roll) == 0x000168, "Member 'GA_Athena_ZipLine_Smash_C_SpawnMotor::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_SpawnMotor, CallFunc_BreakRotator_Pitch) == 0x00016C, "Member 'GA_Athena_ZipLine_Smash_C_SpawnMotor::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_SpawnMotor, CallFunc_BreakRotator_Yaw) == 0x000170, "Member 'GA_Athena_ZipLine_Smash_C_SpawnMotor::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_SpawnMotor, CallFunc_Dot_VectorVector_ReturnValue) == 0x000174, "Member 'GA_Athena_ZipLine_Smash_C_SpawnMotor::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_SpawnMotor, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000178, "Member 'GA_Athena_ZipLine_Smash_C_SpawnMotor::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_SpawnMotor, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00017C, "Member 'GA_Athena_ZipLine_Smash_C_SpawnMotor::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_SpawnMotor, CallFunc_MakeRotator_ReturnValue) == 0x000180, "Member 'GA_Athena_ZipLine_Smash_C_SpawnMotor::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_SpawnMotor, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00018C, "Member 'GA_Athena_ZipLine_Smash_C_SpawnMotor::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_SpawnMotor, CallFunc_MakeTransform_ReturnValue) == 0x0001A0, "Member 'GA_Athena_ZipLine_Smash_C_SpawnMotor::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_SpawnMotor, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0001D0, "Member 'GA_Athena_ZipLine_Smash_C_SpawnMotor::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_SpawnMotor, CallFunc_FinishSpawningActor_ReturnValue) == 0x0001D8, "Member 'GA_Athena_ZipLine_Smash_C_SpawnMotor::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_SpawnMotor, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x0001E0, "Member 'GA_Athena_ZipLine_Smash_C_SpawnMotor::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");

// Function GA_Athena_ZipLine_Smash.GA_Athena_ZipLine_Smash_C.CheckMotor
// 0x0050 (0x0050 - 0x0000)
struct GA_Athena_ZipLine_Smash_C_CheckMotor final
{
public:
	bool                                          HasHarness;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAttachedActors_OutActors;              // 0x0018(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ZipLine_Athena_Harness_C*           K2Node_DynamicCast_AsBP_Zip_Line_Athena_Harness;   // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Athena_ZipLine_Smash_C_CheckMotor) == 0x000008, "Wrong alignment on GA_Athena_ZipLine_Smash_C_CheckMotor");
static_assert(sizeof(GA_Athena_ZipLine_Smash_C_CheckMotor) == 0x000050, "Wrong size on GA_Athena_ZipLine_Smash_C_CheckMotor");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_CheckMotor, HasHarness) == 0x000000, "Member 'GA_Athena_ZipLine_Smash_C_CheckMotor::HasHarness' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_CheckMotor, Temp_bool_True_if_break_was_hit_Variable) == 0x000001, "Member 'GA_Athena_ZipLine_Smash_C_CheckMotor::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_CheckMotor, Temp_int_Array_Index_Variable) == 0x000004, "Member 'GA_Athena_ZipLine_Smash_C_CheckMotor::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_CheckMotor, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'GA_Athena_ZipLine_Smash_C_CheckMotor::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_CheckMotor, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'GA_Athena_ZipLine_Smash_C_CheckMotor::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_CheckMotor, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'GA_Athena_ZipLine_Smash_C_CheckMotor::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_CheckMotor, CallFunc_GetAttachedActors_OutActors) == 0x000018, "Member 'GA_Athena_ZipLine_Smash_C_CheckMotor::CallFunc_GetAttachedActors_OutActors' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_CheckMotor, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'GA_Athena_ZipLine_Smash_C_CheckMotor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_CheckMotor, CallFunc_Array_Get_Item) == 0x000030, "Member 'GA_Athena_ZipLine_Smash_C_CheckMotor::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_CheckMotor, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'GA_Athena_ZipLine_Smash_C_CheckMotor::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_CheckMotor, K2Node_DynamicCast_AsBP_Zip_Line_Athena_Harness) == 0x000040, "Member 'GA_Athena_ZipLine_Smash_C_CheckMotor::K2Node_DynamicCast_AsBP_Zip_Line_Athena_Harness' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_CheckMotor, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'GA_Athena_ZipLine_Smash_C_CheckMotor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_CheckMotor, CallFunc_BooleanAND_ReturnValue) == 0x000049, "Member 'GA_Athena_ZipLine_Smash_C_CheckMotor::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function GA_Athena_ZipLine_Smash.GA_Athena_ZipLine_Smash_C.CheckForQuestProgress
// 0x0020 (0x0020 - 0x0000)
struct GA_Athena_ZipLine_Smash_C_CheckForQuestProgress final
{
public:
	class AFortPlayerController*                  CallFunc_GetFortPlayerControllerFromActor_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortQuestManager*                      CallFunc_GetQuestManager_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SendComplexCustomStatEvent_QuestActive;   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SendComplexCustomStatEvent_QuestCompleted; // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Athena_ZipLine_Smash_C_CheckForQuestProgress) == 0x000008, "Wrong alignment on GA_Athena_ZipLine_Smash_C_CheckForQuestProgress");
static_assert(sizeof(GA_Athena_ZipLine_Smash_C_CheckForQuestProgress) == 0x000020, "Wrong size on GA_Athena_ZipLine_Smash_C_CheckForQuestProgress");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_CheckForQuestProgress, CallFunc_GetFortPlayerControllerFromActor_ReturnValue) == 0x000000, "Member 'GA_Athena_ZipLine_Smash_C_CheckForQuestProgress::CallFunc_GetFortPlayerControllerFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_CheckForQuestProgress, CallFunc_HasAuthority_ReturnValue) == 0x000008, "Member 'GA_Athena_ZipLine_Smash_C_CheckForQuestProgress::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_CheckForQuestProgress, CallFunc_GetQuestManager_ReturnValue) == 0x000010, "Member 'GA_Athena_ZipLine_Smash_C_CheckForQuestProgress::CallFunc_GetQuestManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_CheckForQuestProgress, CallFunc_SendComplexCustomStatEvent_QuestActive) == 0x000018, "Member 'GA_Athena_ZipLine_Smash_C_CheckForQuestProgress::CallFunc_SendComplexCustomStatEvent_QuestActive' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_CheckForQuestProgress, CallFunc_SendComplexCustomStatEvent_QuestCompleted) == 0x000019, "Member 'GA_Athena_ZipLine_Smash_C_CheckForQuestProgress::CallFunc_SendComplexCustomStatEvent_QuestCompleted' has a wrong offset!");

}

