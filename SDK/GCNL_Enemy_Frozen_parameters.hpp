#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GCNL_Enemy_Frozen

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function GCNL_Enemy_Frozen.GCNL_Enemy_Frozen_C.OnActive
// 0x0380 (0x0380 - 0x0000)
struct GCNL_Enemy_Frozen_C_OnActive final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00B8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x00C0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AEnemyPawn_Parent_C*                    K2Node_DynamicCast_AsEnemy_Pawn_Parent;            // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0xF];                                       // 0x00E1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FParticleSysParam                      K2Node_MakeStruct_ParticleSysParam;                // 0x00F0(0x0080)(IsPlainOldData, NoDestructor)
	TArray<struct FParticleSysParam>              K2Node_MakeArray_Array;                            // 0x0170(0x0010)(ZeroConstructor, ReferenceParm)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0184(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue1;        // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19D[0x3];                                      // 0x019D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x01A0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          Temp_bool_Variable;                                // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_229[0x7];                                      // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_239[0x3];                                      // 0x0239(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0244(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x024C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0258(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	uint8                                         Pad_268[0x8];                                      // 0x0268(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0270(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x02A0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Map_Contains_ReturnValue;                 // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_329[0x3];                                      // 0x0329(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x032C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0331(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0332(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_333[0x1];                                      // 0x0333(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0334(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_339[0x3];                                      // 0x0339(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloat_ReturnValue;                  // 0x033C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable1;                             // 0x0340(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable1;                               // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_351[0x7];                                      // 0x0351(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x0358(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_Map_Find_Value;                           // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GCNL_Enemy_Frozen_C_OnActive) == 0x000010, "Wrong alignment on GCNL_Enemy_Frozen_C_OnActive");
static_assert(sizeof(GCNL_Enemy_Frozen_C_OnActive) == 0x000380, "Wrong size on GCNL_Enemy_Frozen_C_OnActive");
static_assert(offsetof(GCNL_Enemy_Frozen_C_OnActive, MyTarget) == 0x000000, "Member 'GCNL_Enemy_Frozen_C_OnActive::MyTarget' has a wrong offset!");
static_assert(offsetof(GCNL_Enemy_Frozen_C_OnActive, Parameters) == 0x000008, "Member 'GCNL_Enemy_Frozen_C_OnActive::Parameters' has a wrong offset!");
static_assert(offsetof(GCNL_Enemy_Frozen_C_OnActive, ReturnValue) == 0x0000C0, "Member 'GCNL_Enemy_Frozen_C_OnActive::ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Enemy_Frozen_C_OnActive, Temp_string_Variable) == 0x0000C8, "Member 'GCNL_Enemy_Frozen_C_OnActive::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(GCNL_Enemy_Frozen_C_OnActive, K2Node_DynamicCast_AsEnemy_Pawn_Parent) == 0x0000D8, "Member 'GCNL_Enemy_Frozen_C_OnActive::K2Node_DynamicCast_AsEnemy_Pawn_Parent' has a wrong offset!");
static_assert(offsetof(GCNL_Enemy_Frozen_C_OnActive, K2Node_DynamicCast_bSuccess) == 0x0000E0, "Member 'GCNL_Enemy_Frozen_C_OnActive::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GCNL_Enemy_Frozen_C_OnActive, K2Node_MakeStruct_ParticleSysParam) == 0x0000F0, "Member 'GCNL_Enemy_Frozen_C_OnActive::K2Node_MakeStruct_ParticleSysParam' has a wrong offset!");
static_assert(offsetof(GCNL_Enemy_Frozen_C_OnActive, K2Node_MakeArray_Array) == 0x000170, "Member 'GCNL_Enemy_Frozen_C_OnActive::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(GCNL_Enemy_Frozen_C_OnActive, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000180, "Member 'GCNL_Enemy_Frozen_C_OnActive::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Enemy_Frozen_C_OnActive, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000184, "Member 'GCNL_Enemy_Frozen_C_OnActive::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Enemy_Frozen_C_OnActive, CallFunc_GetGameTimeInSeconds_ReturnValue1) == 0x000190, "Member 'GCNL_Enemy_Frozen_C_OnActive::CallFunc_GetGameTimeInSeconds_ReturnValue1' has a wrong offset!");
static_assert(offsetof(GCNL_Enemy_Frozen_C_OnActive, CallFunc_Add_FloatFloat_ReturnValue) == 0x000194, "Member 'GCNL_Enemy_Frozen_C_OnActive::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Enemy_Frozen_C_OnActive, CallFunc_Array_Length_ReturnValue) == 0x000198, "Member 'GCNL_Enemy_Frozen_C_OnActive::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Enemy_Frozen_C_OnActive, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00019C, "Member 'GCNL_Enemy_Frozen_C_OnActive::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Enemy_Frozen_C_OnActive, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x0001A0, "Member 'GCNL_Enemy_Frozen_C_OnActive::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(GCNL_Enemy_Frozen_C_OnActive, Temp_bool_Variable) == 0x000228, "Member 'GCNL_Enemy_Frozen_C_OnActive::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GCNL_Enemy_Frozen_C_OnActive, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000230, "Member 'GCNL_Enemy_Frozen_C_OnActive::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Enemy_Frozen_C_OnActive, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000238, "Member 'GCNL_Enemy_Frozen_C_OnActive::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Enemy_Frozen_C_OnActive, Temp_int_Array_Index_Variable) == 0x00023C, "Member 'GCNL_Enemy_Frozen_C_OnActive::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GCNL_Enemy_Frozen_C_OnActive, CallFunc_RandomFloatInRange_ReturnValue) == 0x000240, "Member 'GCNL_Enemy_Frozen_C_OnActive::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Enemy_Frozen_C_OnActive, CallFunc_Array_Get_Item) == 0x000244, "Member 'GCNL_Enemy_Frozen_C_OnActive::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GCNL_Enemy_Frozen_C_OnActive, CallFunc_MakeRotator_ReturnValue) == 0x00024C, "Member 'GCNL_Enemy_Frozen_C_OnActive::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Enemy_Frozen_C_OnActive, CallFunc_Conv_NameToString_ReturnValue) == 0x000258, "Member 'GCNL_Enemy_Frozen_C_OnActive::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Enemy_Frozen_C_OnActive, CallFunc_MakeTransform_ReturnValue) == 0x000270, "Member 'GCNL_Enemy_Frozen_C_OnActive::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Enemy_Frozen_C_OnActive, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x0002A0, "Member 'GCNL_Enemy_Frozen_C_OnActive::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(GCNL_Enemy_Frozen_C_OnActive, CallFunc_Map_Contains_ReturnValue) == 0x000328, "Member 'GCNL_Enemy_Frozen_C_OnActive::CallFunc_Map_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Enemy_Frozen_C_OnActive, Temp_int_Loop_Counter_Variable) == 0x00032C, "Member 'GCNL_Enemy_Frozen_C_OnActive::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GCNL_Enemy_Frozen_C_OnActive, Temp_bool_True_if_break_was_hit_Variable) == 0x000330, "Member 'GCNL_Enemy_Frozen_C_OnActive::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(GCNL_Enemy_Frozen_C_OnActive, CallFunc_Not_PreBool_ReturnValue) == 0x000331, "Member 'GCNL_Enemy_Frozen_C_OnActive::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Enemy_Frozen_C_OnActive, CallFunc_Less_IntInt_ReturnValue) == 0x000332, "Member 'GCNL_Enemy_Frozen_C_OnActive::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Enemy_Frozen_C_OnActive, CallFunc_Add_IntInt_ReturnValue) == 0x000334, "Member 'GCNL_Enemy_Frozen_C_OnActive::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Enemy_Frozen_C_OnActive, CallFunc_BooleanAND_ReturnValue) == 0x000338, "Member 'GCNL_Enemy_Frozen_C_OnActive::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Enemy_Frozen_C_OnActive, CallFunc_RandomFloat_ReturnValue) == 0x00033C, "Member 'GCNL_Enemy_Frozen_C_OnActive::CallFunc_RandomFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Enemy_Frozen_C_OnActive, Temp_string_Variable1) == 0x000340, "Member 'GCNL_Enemy_Frozen_C_OnActive::Temp_string_Variable1' has a wrong offset!");
static_assert(offsetof(GCNL_Enemy_Frozen_C_OnActive, Temp_bool_Variable1) == 0x000350, "Member 'GCNL_Enemy_Frozen_C_OnActive::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(GCNL_Enemy_Frozen_C_OnActive, K2Node_Select_Default) == 0x000358, "Member 'GCNL_Enemy_Frozen_C_OnActive::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GCNL_Enemy_Frozen_C_OnActive, CallFunc_Map_Find_Value) == 0x000368, "Member 'GCNL_Enemy_Frozen_C_OnActive::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(GCNL_Enemy_Frozen_C_OnActive, CallFunc_Map_Find_ReturnValue) == 0x000370, "Member 'GCNL_Enemy_Frozen_C_OnActive::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function GCNL_Enemy_Frozen.GCNL_Enemy_Frozen_C.OnRemove
// 0x00E0 (0x00E0 - 0x0000)
struct GCNL_Enemy_Frozen_C_OnRemove final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00B8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x00C0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AEnemyPawn_Parent_C*                    K2Node_DynamicCast_AsEnemy_Pawn_Parent;            // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCNL_Enemy_Frozen_C_OnRemove) == 0x000008, "Wrong alignment on GCNL_Enemy_Frozen_C_OnRemove");
static_assert(sizeof(GCNL_Enemy_Frozen_C_OnRemove) == 0x0000E0, "Wrong size on GCNL_Enemy_Frozen_C_OnRemove");
static_assert(offsetof(GCNL_Enemy_Frozen_C_OnRemove, MyTarget) == 0x000000, "Member 'GCNL_Enemy_Frozen_C_OnRemove::MyTarget' has a wrong offset!");
static_assert(offsetof(GCNL_Enemy_Frozen_C_OnRemove, Parameters) == 0x000008, "Member 'GCNL_Enemy_Frozen_C_OnRemove::Parameters' has a wrong offset!");
static_assert(offsetof(GCNL_Enemy_Frozen_C_OnRemove, ReturnValue) == 0x0000C0, "Member 'GCNL_Enemy_Frozen_C_OnRemove::ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Enemy_Frozen_C_OnRemove, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000C4, "Member 'GCNL_Enemy_Frozen_C_OnRemove::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_Enemy_Frozen_C_OnRemove, K2Node_DynamicCast_AsEnemy_Pawn_Parent) == 0x0000D0, "Member 'GCNL_Enemy_Frozen_C_OnRemove::K2Node_DynamicCast_AsEnemy_Pawn_Parent' has a wrong offset!");
static_assert(offsetof(GCNL_Enemy_Frozen_C_OnRemove, K2Node_DynamicCast_bSuccess) == 0x0000D8, "Member 'GCNL_Enemy_Frozen_C_OnRemove::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GCNL_Enemy_Frozen_C_OnRemove, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x0000DC, "Member 'GCNL_Enemy_Frozen_C_OnRemove::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");

}

