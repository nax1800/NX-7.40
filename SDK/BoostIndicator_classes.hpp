#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BoostIndicator

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BoostIndicator.BoostIndicator_C
// 0x0028 (0x0258 - 0x0230)
class UBoostIndicator_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0230(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 PersonalBoost;                                     // 0x0238(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RestBoost;                                         // 0x0240(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TeammateBoost;                                     // 0x0248(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FVector2D                              BoostSizes;                                        // 0x0250(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BoostIndicator(int32 EntryPoint);
	void Construct();
	void Update();
	void IsPartyMemberBoosted(bool* Boosted);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BoostIndicator_C">();
	}
	static class UBoostIndicator_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBoostIndicator_C>();
	}
};
static_assert(alignof(UBoostIndicator_C) == 0x000008, "Wrong alignment on UBoostIndicator_C");
static_assert(sizeof(UBoostIndicator_C) == 0x000258, "Wrong size on UBoostIndicator_C");
static_assert(offsetof(UBoostIndicator_C, UberGraphFrame) == 0x000230, "Member 'UBoostIndicator_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBoostIndicator_C, PersonalBoost) == 0x000238, "Member 'UBoostIndicator_C::PersonalBoost' has a wrong offset!");
static_assert(offsetof(UBoostIndicator_C, RestBoost) == 0x000240, "Member 'UBoostIndicator_C::RestBoost' has a wrong offset!");
static_assert(offsetof(UBoostIndicator_C, TeammateBoost) == 0x000248, "Member 'UBoostIndicator_C::TeammateBoost' has a wrong offset!");
static_assert(offsetof(UBoostIndicator_C, BoostSizes) == 0x000250, "Member 'UBoostIndicator_C::BoostSizes' has a wrong offset!");

}

