#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RewardsIcon

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function RewardsIcon.RewardsIcon_C.OnSlideAnimationFinished__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct RewardsIcon_C_OnSlideAnimationFinished__DelegateSignature final
{
public:
	class URewardsIcon_C*                         Icon;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RewardsIcon_C_OnSlideAnimationFinished__DelegateSignature) == 0x000008, "Wrong alignment on RewardsIcon_C_OnSlideAnimationFinished__DelegateSignature");
static_assert(sizeof(RewardsIcon_C_OnSlideAnimationFinished__DelegateSignature) == 0x000008, "Wrong size on RewardsIcon_C_OnSlideAnimationFinished__DelegateSignature");
static_assert(offsetof(RewardsIcon_C_OnSlideAnimationFinished__DelegateSignature, Icon) == 0x000000, "Member 'RewardsIcon_C_OnSlideAnimationFinished__DelegateSignature::Icon' has a wrong offset!");

// Function RewardsIcon.RewardsIcon_C.OnDisperseAnimationFinished__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct RewardsIcon_C_OnDisperseAnimationFinished__DelegateSignature final
{
public:
	class URewardsIcon_C*                         Icon;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RewardsIcon_C_OnDisperseAnimationFinished__DelegateSignature) == 0x000008, "Wrong alignment on RewardsIcon_C_OnDisperseAnimationFinished__DelegateSignature");
static_assert(sizeof(RewardsIcon_C_OnDisperseAnimationFinished__DelegateSignature) == 0x000008, "Wrong size on RewardsIcon_C_OnDisperseAnimationFinished__DelegateSignature");
static_assert(offsetof(RewardsIcon_C_OnDisperseAnimationFinished__DelegateSignature, Icon) == 0x000000, "Member 'RewardsIcon_C_OnDisperseAnimationFinished__DelegateSignature::Icon' has a wrong offset!");

// Function RewardsIcon.RewardsIcon_C.OnMaterializeAnimationFinished__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct RewardsIcon_C_OnMaterializeAnimationFinished__DelegateSignature final
{
public:
	class URewardsIcon_C*                         Icon;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RewardsIcon_C_OnMaterializeAnimationFinished__DelegateSignature) == 0x000008, "Wrong alignment on RewardsIcon_C_OnMaterializeAnimationFinished__DelegateSignature");
static_assert(sizeof(RewardsIcon_C_OnMaterializeAnimationFinished__DelegateSignature) == 0x000008, "Wrong size on RewardsIcon_C_OnMaterializeAnimationFinished__DelegateSignature");
static_assert(offsetof(RewardsIcon_C_OnMaterializeAnimationFinished__DelegateSignature, Icon) == 0x000000, "Member 'RewardsIcon_C_OnMaterializeAnimationFinished__DelegateSignature::Icon' has a wrong offset!");

// Function RewardsIcon.RewardsIcon_C.ExecuteUbergraph_RewardsIcon
// 0x0038 (0x0038 - 0x0000)
struct RewardsIcon_C_ExecuteUbergraph_RewardsIcon final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate1;             // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_percent;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RewardsIcon_C_ExecuteUbergraph_RewardsIcon) == 0x000008, "Wrong alignment on RewardsIcon_C_ExecuteUbergraph_RewardsIcon");
static_assert(sizeof(RewardsIcon_C_ExecuteUbergraph_RewardsIcon) == 0x000038, "Wrong size on RewardsIcon_C_ExecuteUbergraph_RewardsIcon");
static_assert(offsetof(RewardsIcon_C_ExecuteUbergraph_RewardsIcon, EntryPoint) == 0x000000, "Member 'RewardsIcon_C_ExecuteUbergraph_RewardsIcon::EntryPoint' has a wrong offset!");
static_assert(offsetof(RewardsIcon_C_ExecuteUbergraph_RewardsIcon, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'RewardsIcon_C_ExecuteUbergraph_RewardsIcon::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(RewardsIcon_C_ExecuteUbergraph_RewardsIcon, K2Node_CreateDelegate_OutputDelegate1) == 0x000014, "Member 'RewardsIcon_C_ExecuteUbergraph_RewardsIcon::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(RewardsIcon_C_ExecuteUbergraph_RewardsIcon, K2Node_Event_IsDesignTime) == 0x000024, "Member 'RewardsIcon_C_ExecuteUbergraph_RewardsIcon::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(RewardsIcon_C_ExecuteUbergraph_RewardsIcon, K2Node_CustomEvent_percent) == 0x000028, "Member 'RewardsIcon_C_ExecuteUbergraph_RewardsIcon::K2Node_CustomEvent_percent' has a wrong offset!");
static_assert(offsetof(RewardsIcon_C_ExecuteUbergraph_RewardsIcon, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000030, "Member 'RewardsIcon_C_ExecuteUbergraph_RewardsIcon::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

// Function RewardsIcon.RewardsIcon_C.whiteFadeOut
// 0x0004 (0x0004 - 0x0000)
struct RewardsIcon_C_WhiteFadeOut final
{
public:
	float                                         Percent;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RewardsIcon_C_WhiteFadeOut) == 0x000004, "Wrong alignment on RewardsIcon_C_WhiteFadeOut");
static_assert(sizeof(RewardsIcon_C_WhiteFadeOut) == 0x000004, "Wrong size on RewardsIcon_C_WhiteFadeOut");
static_assert(offsetof(RewardsIcon_C_WhiteFadeOut, Percent) == 0x000000, "Member 'RewardsIcon_C_WhiteFadeOut::Percent' has a wrong offset!");

// Function RewardsIcon.RewardsIcon_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct RewardsIcon_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RewardsIcon_C_PreConstruct) == 0x000001, "Wrong alignment on RewardsIcon_C_PreConstruct");
static_assert(sizeof(RewardsIcon_C_PreConstruct) == 0x000001, "Wrong size on RewardsIcon_C_PreConstruct");
static_assert(offsetof(RewardsIcon_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'RewardsIcon_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function RewardsIcon.RewardsIcon_C.PlayHideAnimation
// 0x0020 (0x0020 - 0x0000)
struct RewardsIcon_C_PlayHideAnimation final
{
public:
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RewardsIcon_C_PlayHideAnimation) == 0x000008, "Wrong alignment on RewardsIcon_C_PlayHideAnimation");
static_assert(sizeof(RewardsIcon_C_PlayHideAnimation) == 0x000020, "Wrong size on RewardsIcon_C_PlayHideAnimation");
static_assert(offsetof(RewardsIcon_C_PlayHideAnimation, K2Node_MakeStruct_LinearColor) == 0x000000, "Member 'RewardsIcon_C_PlayHideAnimation::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(RewardsIcon_C_PlayHideAnimation, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'RewardsIcon_C_PlayHideAnimation::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardsIcon_C_PlayHideAnimation, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000018, "Member 'RewardsIcon_C_PlayHideAnimation::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");

// Function RewardsIcon.RewardsIcon_C.PopulateFromReward
// 0x0028 (0x0028 - 0x0000)
struct RewardsIcon_C_PopulateFromReward final
{
public:
	class UFortRewardNotificationData*            InRewardItem;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           TintColor;                                         // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             CallFunc_PopulateFromRandomLootLevel_Texture;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RewardsIcon_C_PopulateFromReward) == 0x000008, "Wrong alignment on RewardsIcon_C_PopulateFromReward");
static_assert(sizeof(RewardsIcon_C_PopulateFromReward) == 0x000028, "Wrong size on RewardsIcon_C_PopulateFromReward");
static_assert(offsetof(RewardsIcon_C_PopulateFromReward, InRewardItem) == 0x000000, "Member 'RewardsIcon_C_PopulateFromReward::InRewardItem' has a wrong offset!");
static_assert(offsetof(RewardsIcon_C_PopulateFromReward, TintColor) == 0x000008, "Member 'RewardsIcon_C_PopulateFromReward::TintColor' has a wrong offset!");
static_assert(offsetof(RewardsIcon_C_PopulateFromReward, CallFunc_PopulateFromRandomLootLevel_Texture) == 0x000018, "Member 'RewardsIcon_C_PopulateFromReward::CallFunc_PopulateFromRandomLootLevel_Texture' has a wrong offset!");
static_assert(offsetof(RewardsIcon_C_PopulateFromReward, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'RewardsIcon_C_PopulateFromReward::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardsIcon_C_PopulateFromReward, K2Node_SwitchEnum_CmpSuccess) == 0x000021, "Member 'RewardsIcon_C_PopulateFromReward::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function RewardsIcon.RewardsIcon_C.HandleSlideAnimationFinished
// 0x0004 (0x0004 - 0x0000)
struct RewardsIcon_C_HandleSlideAnimationFinished final
{
public:
	float                                         TranslatedDist;                                    // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RewardsIcon_C_HandleSlideAnimationFinished) == 0x000004, "Wrong alignment on RewardsIcon_C_HandleSlideAnimationFinished");
static_assert(sizeof(RewardsIcon_C_HandleSlideAnimationFinished) == 0x000004, "Wrong size on RewardsIcon_C_HandleSlideAnimationFinished");
static_assert(offsetof(RewardsIcon_C_HandleSlideAnimationFinished, TranslatedDist) == 0x000000, "Member 'RewardsIcon_C_HandleSlideAnimationFinished::TranslatedDist' has a wrong offset!");

// Function RewardsIcon.RewardsIcon_C.TickSlideAnimation
// 0x0028 (0x0028 - 0x0000)
struct RewardsIcon_C_TickSlideAnimation final
{
public:
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Ease_ReturnValue;                         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RewardsIcon_C_TickSlideAnimation) == 0x000004, "Wrong alignment on RewardsIcon_C_TickSlideAnimation");
static_assert(sizeof(RewardsIcon_C_TickSlideAnimation) == 0x000028, "Wrong size on RewardsIcon_C_TickSlideAnimation");
static_assert(offsetof(RewardsIcon_C_TickSlideAnimation, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000000, "Member 'RewardsIcon_C_TickSlideAnimation::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardsIcon_C_TickSlideAnimation, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000004, "Member 'RewardsIcon_C_TickSlideAnimation::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardsIcon_C_TickSlideAnimation, CallFunc_BreakVector2D_X) == 0x000008, "Member 'RewardsIcon_C_TickSlideAnimation::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(RewardsIcon_C_TickSlideAnimation, CallFunc_BreakVector2D_Y) == 0x00000C, "Member 'RewardsIcon_C_TickSlideAnimation::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(RewardsIcon_C_TickSlideAnimation, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000010, "Member 'RewardsIcon_C_TickSlideAnimation::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardsIcon_C_TickSlideAnimation, CallFunc_FMin_ReturnValue) == 0x000014, "Member 'RewardsIcon_C_TickSlideAnimation::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardsIcon_C_TickSlideAnimation, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000018, "Member 'RewardsIcon_C_TickSlideAnimation::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardsIcon_C_TickSlideAnimation, CallFunc_Ease_ReturnValue) == 0x00001C, "Member 'RewardsIcon_C_TickSlideAnimation::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardsIcon_C_TickSlideAnimation, CallFunc_MakeVector2D_ReturnValue) == 0x000020, "Member 'RewardsIcon_C_TickSlideAnimation::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function RewardsIcon.RewardsIcon_C.PlaySlideAnimation
// 0x0030 (0x0030 - 0x0000)
struct RewardsIcon_C_PlaySlideAnimation final
{
public:
	float                                         TargetTranslation;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RewardsIcon_C_PlaySlideAnimation) == 0x000008, "Wrong alignment on RewardsIcon_C_PlaySlideAnimation");
static_assert(sizeof(RewardsIcon_C_PlaySlideAnimation) == 0x000030, "Wrong size on RewardsIcon_C_PlaySlideAnimation");
static_assert(offsetof(RewardsIcon_C_PlaySlideAnimation, TargetTranslation) == 0x000000, "Member 'RewardsIcon_C_PlaySlideAnimation::TargetTranslation' has a wrong offset!");
static_assert(offsetof(RewardsIcon_C_PlaySlideAnimation, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'RewardsIcon_C_PlaySlideAnimation::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(RewardsIcon_C_PlaySlideAnimation, CallFunc_BreakVector2D_X) == 0x000014, "Member 'RewardsIcon_C_PlaySlideAnimation::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(RewardsIcon_C_PlaySlideAnimation, CallFunc_BreakVector2D_Y) == 0x000018, "Member 'RewardsIcon_C_PlaySlideAnimation::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(RewardsIcon_C_PlaySlideAnimation, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000020, "Member 'RewardsIcon_C_PlaySlideAnimation::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardsIcon_C_PlaySlideAnimation, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000028, "Member 'RewardsIcon_C_PlaySlideAnimation::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");

// Function RewardsIcon.RewardsIcon_C.PopulateFromLootLevel
// 0x0020 (0x0020 - 0x0000)
struct RewardsIcon_C_PopulateFromLootLevel final
{
public:
	int32                                         LootLevel;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Texture;                                           // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             ChestTexture;                                      // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RewardsIcon_C_PopulateFromLootLevel) == 0x000008, "Wrong alignment on RewardsIcon_C_PopulateFromLootLevel");
static_assert(sizeof(RewardsIcon_C_PopulateFromLootLevel) == 0x000020, "Wrong size on RewardsIcon_C_PopulateFromLootLevel");
static_assert(offsetof(RewardsIcon_C_PopulateFromLootLevel, LootLevel) == 0x000000, "Member 'RewardsIcon_C_PopulateFromLootLevel::LootLevel' has a wrong offset!");
static_assert(offsetof(RewardsIcon_C_PopulateFromLootLevel, Texture) == 0x000008, "Member 'RewardsIcon_C_PopulateFromLootLevel::Texture' has a wrong offset!");
static_assert(offsetof(RewardsIcon_C_PopulateFromLootLevel, ChestTexture) == 0x000010, "Member 'RewardsIcon_C_PopulateFromLootLevel::ChestTexture' has a wrong offset!");
static_assert(offsetof(RewardsIcon_C_PopulateFromLootLevel, K2Node_SwitchInteger_CmpSuccess) == 0x000018, "Member 'RewardsIcon_C_PopulateFromLootLevel::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function RewardsIcon.RewardsIcon_C.SetScale
// 0x0004 (0x0004 - 0x0000)
struct RewardsIcon_C_SetScale final
{
public:
	float                                         Scale;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RewardsIcon_C_SetScale) == 0x000004, "Wrong alignment on RewardsIcon_C_SetScale");
static_assert(sizeof(RewardsIcon_C_SetScale) == 0x000004, "Wrong size on RewardsIcon_C_SetScale");
static_assert(offsetof(RewardsIcon_C_SetScale, Scale) == 0x000000, "Member 'RewardsIcon_C_SetScale::Scale' has a wrong offset!");

// Function RewardsIcon.RewardsIcon_C.GetScale
// 0x0004 (0x0004 - 0x0000)
struct RewardsIcon_C_GetScale final
{
public:
	float                                         Scale;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RewardsIcon_C_GetScale) == 0x000004, "Wrong alignment on RewardsIcon_C_GetScale");
static_assert(sizeof(RewardsIcon_C_GetScale) == 0x000004, "Wrong size on RewardsIcon_C_GetScale");
static_assert(offsetof(RewardsIcon_C_GetScale, Scale) == 0x000000, "Member 'RewardsIcon_C_GetScale::Scale' has a wrong offset!");

// Function RewardsIcon.RewardsIcon_C.PopulateFromMissionRewards
// 0x0028 (0x0028 - 0x0000)
struct RewardsIcon_C_PopulateFromMissionRewards final
{
public:
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortUIRewardReport*                    CallFunc_GetLastMissionRewardReport_ReturnValue;   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortRewardMissionData*                 K2Node_DynamicCast_AsFort_Reward_Mission_Data;     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetRewardedChestIndex_ReturnValue;        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             CallFunc_PopulateFromLootLevel_Texture;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RewardsIcon_C_PopulateFromMissionRewards) == 0x000008, "Wrong alignment on RewardsIcon_C_PopulateFromMissionRewards");
static_assert(sizeof(RewardsIcon_C_PopulateFromMissionRewards) == 0x000028, "Wrong size on RewardsIcon_C_PopulateFromMissionRewards");
static_assert(offsetof(RewardsIcon_C_PopulateFromMissionRewards, CallFunc_GetContext_ReturnValue) == 0x000000, "Member 'RewardsIcon_C_PopulateFromMissionRewards::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardsIcon_C_PopulateFromMissionRewards, CallFunc_GetLastMissionRewardReport_ReturnValue) == 0x000008, "Member 'RewardsIcon_C_PopulateFromMissionRewards::CallFunc_GetLastMissionRewardReport_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardsIcon_C_PopulateFromMissionRewards, K2Node_DynamicCast_AsFort_Reward_Mission_Data) == 0x000010, "Member 'RewardsIcon_C_PopulateFromMissionRewards::K2Node_DynamicCast_AsFort_Reward_Mission_Data' has a wrong offset!");
static_assert(offsetof(RewardsIcon_C_PopulateFromMissionRewards, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'RewardsIcon_C_PopulateFromMissionRewards::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(RewardsIcon_C_PopulateFromMissionRewards, CallFunc_GetRewardedChestIndex_ReturnValue) == 0x00001C, "Member 'RewardsIcon_C_PopulateFromMissionRewards::CallFunc_GetRewardedChestIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardsIcon_C_PopulateFromMissionRewards, CallFunc_PopulateFromLootLevel_Texture) == 0x000020, "Member 'RewardsIcon_C_PopulateFromMissionRewards::CallFunc_PopulateFromLootLevel_Texture' has a wrong offset!");

// Function RewardsIcon.RewardsIcon_C.PopulateFromCollectionBookRewards
// 0x0010 (0x0010 - 0x0000)
struct RewardsIcon_C_PopulateFromCollectionBookRewards final
{
public:
	class UFortRewardCollectionBookData*          K2Node_DynamicCast_AsFort_Reward_Collection_Book_Data; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RewardsIcon_C_PopulateFromCollectionBookRewards) == 0x000008, "Wrong alignment on RewardsIcon_C_PopulateFromCollectionBookRewards");
static_assert(sizeof(RewardsIcon_C_PopulateFromCollectionBookRewards) == 0x000010, "Wrong size on RewardsIcon_C_PopulateFromCollectionBookRewards");
static_assert(offsetof(RewardsIcon_C_PopulateFromCollectionBookRewards, K2Node_DynamicCast_AsFort_Reward_Collection_Book_Data) == 0x000000, "Member 'RewardsIcon_C_PopulateFromCollectionBookRewards::K2Node_DynamicCast_AsFort_Reward_Collection_Book_Data' has a wrong offset!");
static_assert(offsetof(RewardsIcon_C_PopulateFromCollectionBookRewards, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'RewardsIcon_C_PopulateFromCollectionBookRewards::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function RewardsIcon.RewardsIcon_C.PopulateFromRandomLootLevel
// 0x0018 (0x0018 - 0x0000)
struct RewardsIcon_C_PopulateFromRandomLootLevel final
{
public:
	class UTexture2D*                             Texture;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             CallFunc_PopulateFromLootLevel_Texture;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RewardsIcon_C_PopulateFromRandomLootLevel) == 0x000008, "Wrong alignment on RewardsIcon_C_PopulateFromRandomLootLevel");
static_assert(sizeof(RewardsIcon_C_PopulateFromRandomLootLevel) == 0x000018, "Wrong size on RewardsIcon_C_PopulateFromRandomLootLevel");
static_assert(offsetof(RewardsIcon_C_PopulateFromRandomLootLevel, Texture) == 0x000000, "Member 'RewardsIcon_C_PopulateFromRandomLootLevel::Texture' has a wrong offset!");
static_assert(offsetof(RewardsIcon_C_PopulateFromRandomLootLevel, CallFunc_RandomInteger_ReturnValue) == 0x000008, "Member 'RewardsIcon_C_PopulateFromRandomLootLevel::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardsIcon_C_PopulateFromRandomLootLevel, CallFunc_PopulateFromLootLevel_Texture) == 0x000010, "Member 'RewardsIcon_C_PopulateFromRandomLootLevel::CallFunc_PopulateFromLootLevel_Texture' has a wrong offset!");

// Function RewardsIcon.RewardsIcon_C.RandomizeDesignView
// 0x0008 (0x0008 - 0x0000)
struct RewardsIcon_C_RandomizeDesignView final
{
public:
	class UTexture2D*                             CallFunc_PopulateFromRandomLootLevel_Texture;      // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RewardsIcon_C_RandomizeDesignView) == 0x000008, "Wrong alignment on RewardsIcon_C_RandomizeDesignView");
static_assert(sizeof(RewardsIcon_C_RandomizeDesignView) == 0x000008, "Wrong size on RewardsIcon_C_RandomizeDesignView");
static_assert(offsetof(RewardsIcon_C_RandomizeDesignView, CallFunc_PopulateFromRandomLootLevel_Texture) == 0x000000, "Member 'RewardsIcon_C_RandomizeDesignView::CallFunc_PopulateFromRandomLootLevel_Texture' has a wrong offset!");

// Function RewardsIcon.RewardsIcon_C.PlayShowAnimation
// 0x0008 (0x0008 - 0x0000)
struct RewardsIcon_C_PlayShowAnimation final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RewardsIcon_C_PlayShowAnimation) == 0x000008, "Wrong alignment on RewardsIcon_C_PlayShowAnimation");
static_assert(sizeof(RewardsIcon_C_PlayShowAnimation) == 0x000008, "Wrong size on RewardsIcon_C_PlayShowAnimation");
static_assert(offsetof(RewardsIcon_C_PlayShowAnimation, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'RewardsIcon_C_PlayShowAnimation::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function RewardsIcon.RewardsIcon_C.Play Hide Animation Sound
// 0x0058 (0x0058 - 0x0000)
struct RewardsIcon_C_Play_Hide_Animation_Sound final
{
public:
	EFrontEndRewardType                           Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable1;                             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable2;                             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable3;                             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable4;                             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable5;                             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable6;                             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable7;                             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable8;                             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             K2Node_Select_Default;                             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RewardsIcon_C_Play_Hide_Animation_Sound) == 0x000008, "Wrong alignment on RewardsIcon_C_Play_Hide_Animation_Sound");
static_assert(sizeof(RewardsIcon_C_Play_Hide_Animation_Sound) == 0x000058, "Wrong size on RewardsIcon_C_Play_Hide_Animation_Sound");
static_assert(offsetof(RewardsIcon_C_Play_Hide_Animation_Sound, Temp_byte_Variable) == 0x000000, "Member 'RewardsIcon_C_Play_Hide_Animation_Sound::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(RewardsIcon_C_Play_Hide_Animation_Sound, Temp_object_Variable) == 0x000008, "Member 'RewardsIcon_C_Play_Hide_Animation_Sound::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(RewardsIcon_C_Play_Hide_Animation_Sound, Temp_object_Variable1) == 0x000010, "Member 'RewardsIcon_C_Play_Hide_Animation_Sound::Temp_object_Variable1' has a wrong offset!");
static_assert(offsetof(RewardsIcon_C_Play_Hide_Animation_Sound, Temp_object_Variable2) == 0x000018, "Member 'RewardsIcon_C_Play_Hide_Animation_Sound::Temp_object_Variable2' has a wrong offset!");
static_assert(offsetof(RewardsIcon_C_Play_Hide_Animation_Sound, Temp_object_Variable3) == 0x000020, "Member 'RewardsIcon_C_Play_Hide_Animation_Sound::Temp_object_Variable3' has a wrong offset!");
static_assert(offsetof(RewardsIcon_C_Play_Hide_Animation_Sound, Temp_object_Variable4) == 0x000028, "Member 'RewardsIcon_C_Play_Hide_Animation_Sound::Temp_object_Variable4' has a wrong offset!");
static_assert(offsetof(RewardsIcon_C_Play_Hide_Animation_Sound, Temp_object_Variable5) == 0x000030, "Member 'RewardsIcon_C_Play_Hide_Animation_Sound::Temp_object_Variable5' has a wrong offset!");
static_assert(offsetof(RewardsIcon_C_Play_Hide_Animation_Sound, Temp_object_Variable6) == 0x000038, "Member 'RewardsIcon_C_Play_Hide_Animation_Sound::Temp_object_Variable6' has a wrong offset!");
static_assert(offsetof(RewardsIcon_C_Play_Hide_Animation_Sound, Temp_object_Variable7) == 0x000040, "Member 'RewardsIcon_C_Play_Hide_Animation_Sound::Temp_object_Variable7' has a wrong offset!");
static_assert(offsetof(RewardsIcon_C_Play_Hide_Animation_Sound, Temp_object_Variable8) == 0x000048, "Member 'RewardsIcon_C_Play_Hide_Animation_Sound::Temp_object_Variable8' has a wrong offset!");
static_assert(offsetof(RewardsIcon_C_Play_Hide_Animation_Sound, K2Node_Select_Default) == 0x000050, "Member 'RewardsIcon_C_Play_Hide_Animation_Sound::K2Node_Select_Default' has a wrong offset!");

// Function RewardsIcon.RewardsIcon_C.Play Show Animation Sound
// 0x0058 (0x0058 - 0x0000)
struct RewardsIcon_C_Play_Show_Animation_Sound final
{
public:
	EFrontEndRewardType                           Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable1;                             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable2;                             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable3;                             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable4;                             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable5;                             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable6;                             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable7;                             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable8;                             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             K2Node_Select_Default;                             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RewardsIcon_C_Play_Show_Animation_Sound) == 0x000008, "Wrong alignment on RewardsIcon_C_Play_Show_Animation_Sound");
static_assert(sizeof(RewardsIcon_C_Play_Show_Animation_Sound) == 0x000058, "Wrong size on RewardsIcon_C_Play_Show_Animation_Sound");
static_assert(offsetof(RewardsIcon_C_Play_Show_Animation_Sound, Temp_byte_Variable) == 0x000000, "Member 'RewardsIcon_C_Play_Show_Animation_Sound::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(RewardsIcon_C_Play_Show_Animation_Sound, Temp_object_Variable) == 0x000008, "Member 'RewardsIcon_C_Play_Show_Animation_Sound::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(RewardsIcon_C_Play_Show_Animation_Sound, Temp_object_Variable1) == 0x000010, "Member 'RewardsIcon_C_Play_Show_Animation_Sound::Temp_object_Variable1' has a wrong offset!");
static_assert(offsetof(RewardsIcon_C_Play_Show_Animation_Sound, Temp_object_Variable2) == 0x000018, "Member 'RewardsIcon_C_Play_Show_Animation_Sound::Temp_object_Variable2' has a wrong offset!");
static_assert(offsetof(RewardsIcon_C_Play_Show_Animation_Sound, Temp_object_Variable3) == 0x000020, "Member 'RewardsIcon_C_Play_Show_Animation_Sound::Temp_object_Variable3' has a wrong offset!");
static_assert(offsetof(RewardsIcon_C_Play_Show_Animation_Sound, Temp_object_Variable4) == 0x000028, "Member 'RewardsIcon_C_Play_Show_Animation_Sound::Temp_object_Variable4' has a wrong offset!");
static_assert(offsetof(RewardsIcon_C_Play_Show_Animation_Sound, Temp_object_Variable5) == 0x000030, "Member 'RewardsIcon_C_Play_Show_Animation_Sound::Temp_object_Variable5' has a wrong offset!");
static_assert(offsetof(RewardsIcon_C_Play_Show_Animation_Sound, Temp_object_Variable6) == 0x000038, "Member 'RewardsIcon_C_Play_Show_Animation_Sound::Temp_object_Variable6' has a wrong offset!");
static_assert(offsetof(RewardsIcon_C_Play_Show_Animation_Sound, Temp_object_Variable7) == 0x000040, "Member 'RewardsIcon_C_Play_Show_Animation_Sound::Temp_object_Variable7' has a wrong offset!");
static_assert(offsetof(RewardsIcon_C_Play_Show_Animation_Sound, Temp_object_Variable8) == 0x000048, "Member 'RewardsIcon_C_Play_Show_Animation_Sound::Temp_object_Variable8' has a wrong offset!");
static_assert(offsetof(RewardsIcon_C_Play_Show_Animation_Sound, K2Node_Select_Default) == 0x000050, "Member 'RewardsIcon_C_Play_Show_Animation_Sound::K2Node_Select_Default' has a wrong offset!");

// Function RewardsIcon.RewardsIcon_C.PopulateFromMissionAlertRewards
// 0x0010 (0x0010 - 0x0000)
struct RewardsIcon_C_PopulateFromMissionAlertRewards final
{
public:
	class UFortRewardMissionAlertData*            K2Node_DynamicCast_AsFort_Reward_Mission_Alert_Data; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RewardsIcon_C_PopulateFromMissionAlertRewards) == 0x000008, "Wrong alignment on RewardsIcon_C_PopulateFromMissionAlertRewards");
static_assert(sizeof(RewardsIcon_C_PopulateFromMissionAlertRewards) == 0x000010, "Wrong size on RewardsIcon_C_PopulateFromMissionAlertRewards");
static_assert(offsetof(RewardsIcon_C_PopulateFromMissionAlertRewards, K2Node_DynamicCast_AsFort_Reward_Mission_Alert_Data) == 0x000000, "Member 'RewardsIcon_C_PopulateFromMissionAlertRewards::K2Node_DynamicCast_AsFort_Reward_Mission_Alert_Data' has a wrong offset!");
static_assert(offsetof(RewardsIcon_C_PopulateFromMissionAlertRewards, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'RewardsIcon_C_PopulateFromMissionAlertRewards::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function RewardsIcon.RewardsIcon_C.PopulateFromDifficultyIncreaseRewards
// 0x0010 (0x0010 - 0x0000)
struct RewardsIcon_C_PopulateFromDifficultyIncreaseRewards final
{
public:
	class UFortRewardDifficultyIncrease*          K2Node_DynamicCast_AsFort_Reward_Difficulty_Increase; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RewardsIcon_C_PopulateFromDifficultyIncreaseRewards) == 0x000008, "Wrong alignment on RewardsIcon_C_PopulateFromDifficultyIncreaseRewards");
static_assert(sizeof(RewardsIcon_C_PopulateFromDifficultyIncreaseRewards) == 0x000010, "Wrong size on RewardsIcon_C_PopulateFromDifficultyIncreaseRewards");
static_assert(offsetof(RewardsIcon_C_PopulateFromDifficultyIncreaseRewards, K2Node_DynamicCast_AsFort_Reward_Difficulty_Increase) == 0x000000, "Member 'RewardsIcon_C_PopulateFromDifficultyIncreaseRewards::K2Node_DynamicCast_AsFort_Reward_Difficulty_Increase' has a wrong offset!");
static_assert(offsetof(RewardsIcon_C_PopulateFromDifficultyIncreaseRewards, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'RewardsIcon_C_PopulateFromDifficultyIncreaseRewards::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function RewardsIcon.RewardsIcon_C.PopulateFromGiftBoxData
// 0x0020 (0x0020 - 0x0000)
struct RewardsIcon_C_PopulateFromGiftBoxData final
{
public:
	class UFortRewardGiftBoxData*                 K2Node_DynamicCast_AsFort_Reward_Gift_Box_Data;    // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortGiftBoxItemDefinition*             CallFunc_GetGiftBoxDefinition_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RewardsIcon_C_PopulateFromGiftBoxData) == 0x000008, "Wrong alignment on RewardsIcon_C_PopulateFromGiftBoxData");
static_assert(sizeof(RewardsIcon_C_PopulateFromGiftBoxData) == 0x000020, "Wrong size on RewardsIcon_C_PopulateFromGiftBoxData");
static_assert(offsetof(RewardsIcon_C_PopulateFromGiftBoxData, K2Node_DynamicCast_AsFort_Reward_Gift_Box_Data) == 0x000000, "Member 'RewardsIcon_C_PopulateFromGiftBoxData::K2Node_DynamicCast_AsFort_Reward_Gift_Box_Data' has a wrong offset!");
static_assert(offsetof(RewardsIcon_C_PopulateFromGiftBoxData, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'RewardsIcon_C_PopulateFromGiftBoxData::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(RewardsIcon_C_PopulateFromGiftBoxData, CallFunc_GetGiftBoxDefinition_ReturnValue) == 0x000010, "Member 'RewardsIcon_C_PopulateFromGiftBoxData::CallFunc_GetGiftBoxDefinition_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardsIcon_C_PopulateFromGiftBoxData, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000018, "Member 'RewardsIcon_C_PopulateFromGiftBoxData::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");

// Function RewardsIcon.RewardsIcon_C.PopulateFromItemCacheData
// 0x0040 (0x0040 - 0x0000)
struct RewardsIcon_C_PopulateFromItemCacheData final
{
public:
	class UFortRewardItemCacheData*               K2Node_DynamicCast_AsFort_Reward_Item_Cache_Data;  // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              CallFunc_GetLargePreviewImage_ReturnValue;         // 0x0010(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RewardsIcon_C_PopulateFromItemCacheData) == 0x000008, "Wrong alignment on RewardsIcon_C_PopulateFromItemCacheData");
static_assert(sizeof(RewardsIcon_C_PopulateFromItemCacheData) == 0x000040, "Wrong size on RewardsIcon_C_PopulateFromItemCacheData");
static_assert(offsetof(RewardsIcon_C_PopulateFromItemCacheData, K2Node_DynamicCast_AsFort_Reward_Item_Cache_Data) == 0x000000, "Member 'RewardsIcon_C_PopulateFromItemCacheData::K2Node_DynamicCast_AsFort_Reward_Item_Cache_Data' has a wrong offset!");
static_assert(offsetof(RewardsIcon_C_PopulateFromItemCacheData, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'RewardsIcon_C_PopulateFromItemCacheData::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(RewardsIcon_C_PopulateFromItemCacheData, CallFunc_GetLargePreviewImage_ReturnValue) == 0x000010, "Member 'RewardsIcon_C_PopulateFromItemCacheData::CallFunc_GetLargePreviewImage_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardsIcon_C_PopulateFromItemCacheData, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'RewardsIcon_C_PopulateFromItemCacheData::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function RewardsIcon.RewardsIcon_C.OnMouseButtonDown
// 0x0218 (0x0218 - 0x0000)
struct RewardsIcon_C_OnMouseButtonDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0160(0x00B8)()
};
static_assert(alignof(RewardsIcon_C_OnMouseButtonDown) == 0x000008, "Wrong alignment on RewardsIcon_C_OnMouseButtonDown");
static_assert(sizeof(RewardsIcon_C_OnMouseButtonDown) == 0x000218, "Wrong size on RewardsIcon_C_OnMouseButtonDown");
static_assert(offsetof(RewardsIcon_C_OnMouseButtonDown, MyGeometry) == 0x000000, "Member 'RewardsIcon_C_OnMouseButtonDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(RewardsIcon_C_OnMouseButtonDown, MouseEvent) == 0x000038, "Member 'RewardsIcon_C_OnMouseButtonDown::MouseEvent' has a wrong offset!");
static_assert(offsetof(RewardsIcon_C_OnMouseButtonDown, ReturnValue) == 0x0000A8, "Member 'RewardsIcon_C_OnMouseButtonDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardsIcon_C_OnMouseButtonDown, CallFunc_Handled_ReturnValue) == 0x000160, "Member 'RewardsIcon_C_OnMouseButtonDown::CallFunc_Handled_ReturnValue' has a wrong offset!");

}

