#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HeaderWithNav

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CommonUI_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass HeaderWithNav.HeaderWithNav_C
// 0x00C0 (0x02F8 - 0x0238)
class UHeaderWithNav_C final : public UCommonUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0238(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCommonBorder*                          Border_ChangeFilter;                               // 0x0240(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UIconTextButton_C*                      Button_Back;                                       // 0x0248(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             NavigationTabsCenterContentSlot;                   // 0x0250(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UPanelButton_C*                         PageLeftBtn;                                       // 0x0258(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UPanelButton_C*                         PageRightBtn;                                      // 0x0260(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_Back;                                      // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Text_Header;                                       // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          NeverShowNavigation;                               // 0x0278(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_279[0x7];                                      // 0x0279(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   HeaderText;                                        // 0x0280(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	class UClass*                                 TextStyle;                                         // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          MouseNavIsSupported;                               // 0x02A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	UMulticastDelegateProperty_                   BackButtonPressed;                                 // 0x02A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          ShowTabs;                                          // 0x02B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_2B9[0x7];                                      // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	UMulticastDelegateProperty_                   ButtonPressed;                                     // 0x02C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                         Index_HeaderWithNav_C;                             // 0x02D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D4[0x4];                                      // 0x02D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	UMulticastDelegateProperty_                   CycleLeftPressed;                                  // 0x02D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	UMulticastDelegateProperty_                   CycleRightPressed;                                 // 0x02E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void BackButtonPressed__DelegateSignature();
	void ButtonPressed__DelegateSignature(int32 InIndex);
	void CycleLeftPressed__DelegateSignature();
	void CycleRightPressed__DelegateSignature();
	void ExecuteUbergraph_HeaderWithNav(int32 EntryPoint);
	void BndEvt__PageRightBtn_K2Node_ComponentBoundEvent_2_CommonButtonClicked__DelegateSignature(class UCommonButton* Button);
	void BndEvt__PageLeftBtn_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature(class UCommonButton* Button);
	void PreConstruct(bool IsDesignTime);
	void BndEvt__Button_Back_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature(class UCommonButton* Button);
	void HandleInputMethodChanged(bool bUsingGamepad);
	void Construct();
	void Update(bool IsUsingGamepad);
	void SetTextAndUpdate(const class FText& Text);
	void SetIndex(int32 InIndex);
	void UpdateIndex(bool Increment);
	void IncludeDefenders(bool* Param_IncludeDefenders);
	void SetArrowButtonState(bool EnableLeftArrow, bool EnableRightArrow, bool HideInsteadOfEnable);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"HeaderWithNav_C">();
	}
	static class UHeaderWithNav_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHeaderWithNav_C>();
	}
};
static_assert(alignof(UHeaderWithNav_C) == 0x000008, "Wrong alignment on UHeaderWithNav_C");
static_assert(sizeof(UHeaderWithNav_C) == 0x0002F8, "Wrong size on UHeaderWithNav_C");
static_assert(offsetof(UHeaderWithNav_C, UberGraphFrame) == 0x000238, "Member 'UHeaderWithNav_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UHeaderWithNav_C, Border_ChangeFilter) == 0x000240, "Member 'UHeaderWithNav_C::Border_ChangeFilter' has a wrong offset!");
static_assert(offsetof(UHeaderWithNav_C, Button_Back) == 0x000248, "Member 'UHeaderWithNav_C::Button_Back' has a wrong offset!");
static_assert(offsetof(UHeaderWithNav_C, NavigationTabsCenterContentSlot) == 0x000250, "Member 'UHeaderWithNav_C::NavigationTabsCenterContentSlot' has a wrong offset!");
static_assert(offsetof(UHeaderWithNav_C, PageLeftBtn) == 0x000258, "Member 'UHeaderWithNav_C::PageLeftBtn' has a wrong offset!");
static_assert(offsetof(UHeaderWithNav_C, PageRightBtn) == 0x000260, "Member 'UHeaderWithNav_C::PageRightBtn' has a wrong offset!");
static_assert(offsetof(UHeaderWithNav_C, SizeBox_Back) == 0x000268, "Member 'UHeaderWithNav_C::SizeBox_Back' has a wrong offset!");
static_assert(offsetof(UHeaderWithNav_C, Text_Header) == 0x000270, "Member 'UHeaderWithNav_C::Text_Header' has a wrong offset!");
static_assert(offsetof(UHeaderWithNav_C, NeverShowNavigation) == 0x000278, "Member 'UHeaderWithNav_C::NeverShowNavigation' has a wrong offset!");
static_assert(offsetof(UHeaderWithNav_C, HeaderText) == 0x000280, "Member 'UHeaderWithNav_C::HeaderText' has a wrong offset!");
static_assert(offsetof(UHeaderWithNav_C, TextStyle) == 0x000298, "Member 'UHeaderWithNav_C::TextStyle' has a wrong offset!");
static_assert(offsetof(UHeaderWithNav_C, MouseNavIsSupported) == 0x0002A0, "Member 'UHeaderWithNav_C::MouseNavIsSupported' has a wrong offset!");
static_assert(offsetof(UHeaderWithNav_C, BackButtonPressed) == 0x0002A8, "Member 'UHeaderWithNav_C::BackButtonPressed' has a wrong offset!");
static_assert(offsetof(UHeaderWithNav_C, ShowTabs) == 0x0002B8, "Member 'UHeaderWithNav_C::ShowTabs' has a wrong offset!");
static_assert(offsetof(UHeaderWithNav_C, ButtonPressed) == 0x0002C0, "Member 'UHeaderWithNav_C::ButtonPressed' has a wrong offset!");
static_assert(offsetof(UHeaderWithNav_C, Index_HeaderWithNav_C) == 0x0002D0, "Member 'UHeaderWithNav_C::Index_HeaderWithNav_C' has a wrong offset!");
static_assert(offsetof(UHeaderWithNav_C, CycleLeftPressed) == 0x0002D8, "Member 'UHeaderWithNav_C::CycleLeftPressed' has a wrong offset!");
static_assert(offsetof(UHeaderWithNav_C, CycleRightPressed) == 0x0002E8, "Member 'UHeaderWithNav_C::CycleRightPressed' has a wrong offset!");

}

