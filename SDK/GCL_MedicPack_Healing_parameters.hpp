#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GCL_MedicPack_Healing

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function GCL_MedicPack_Healing.GCL_MedicPack_Healing_C.ExecuteUbergraph_GCL_MedicPack_Healing
// 0x00F0 (0x00F0 - 0x0000)
struct GCL_MedicPack_Healing_C_ExecuteUbergraph_GCL_MedicPack_Healing final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeUnclamped_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue1;         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue2;         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_CustomEvent_Hit;                            // 0x0024(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FHitResult& Hit)>       K2Node_CreateDelegate_OutputDelegate;              // 0x00B4(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetSkeletalMeshForPartType_ReturnValue;   // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D2[0x2];                                       // 0x00D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue3;         // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x00DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue4;         // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x00EE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue3;                  // 0x00EF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GCL_MedicPack_Healing_C_ExecuteUbergraph_GCL_MedicPack_Healing) == 0x000008, "Wrong alignment on GCL_MedicPack_Healing_C_ExecuteUbergraph_GCL_MedicPack_Healing");
static_assert(sizeof(GCL_MedicPack_Healing_C_ExecuteUbergraph_GCL_MedicPack_Healing) == 0x0000F0, "Wrong size on GCL_MedicPack_Healing_C_ExecuteUbergraph_GCL_MedicPack_Healing");
static_assert(offsetof(GCL_MedicPack_Healing_C_ExecuteUbergraph_GCL_MedicPack_Healing, EntryPoint) == 0x000000, "Member 'GCL_MedicPack_Healing_C_ExecuteUbergraph_GCL_MedicPack_Healing::EntryPoint' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_ExecuteUbergraph_GCL_MedicPack_Healing, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000004, "Member 'GCL_MedicPack_Healing_C_ExecuteUbergraph_GCL_MedicPack_Healing::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_ExecuteUbergraph_GCL_MedicPack_Healing, CallFunc_FInterpTo_ReturnValue) == 0x000008, "Member 'GCL_MedicPack_Healing_C_ExecuteUbergraph_GCL_MedicPack_Healing::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_ExecuteUbergraph_GCL_MedicPack_Healing, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'GCL_MedicPack_Healing_C_ExecuteUbergraph_GCL_MedicPack_Healing::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_ExecuteUbergraph_GCL_MedicPack_Healing, CallFunc_IsPlaying_ReturnValue) == 0x00000D, "Member 'GCL_MedicPack_Healing_C_ExecuteUbergraph_GCL_MedicPack_Healing::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_ExecuteUbergraph_GCL_MedicPack_Healing, CallFunc_Not_PreBool_ReturnValue) == 0x00000E, "Member 'GCL_MedicPack_Healing_C_ExecuteUbergraph_GCL_MedicPack_Healing::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_ExecuteUbergraph_GCL_MedicPack_Healing, CallFunc_IsLocallyControlled_ReturnValue) == 0x00000F, "Member 'GCL_MedicPack_Healing_C_ExecuteUbergraph_GCL_MedicPack_Healing::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_ExecuteUbergraph_GCL_MedicPack_Healing, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000010, "Member 'GCL_MedicPack_Healing_C_ExecuteUbergraph_GCL_MedicPack_Healing::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_ExecuteUbergraph_GCL_MedicPack_Healing, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000014, "Member 'GCL_MedicPack_Healing_C_ExecuteUbergraph_GCL_MedicPack_Healing::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_ExecuteUbergraph_GCL_MedicPack_Healing, CallFunc_MapRangeUnclamped_ReturnValue) == 0x000018, "Member 'GCL_MedicPack_Healing_C_ExecuteUbergraph_GCL_MedicPack_Healing::CallFunc_MapRangeUnclamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_ExecuteUbergraph_GCL_MedicPack_Healing, CallFunc_Subtract_FloatFloat_ReturnValue1) == 0x00001C, "Member 'GCL_MedicPack_Healing_C_ExecuteUbergraph_GCL_MedicPack_Healing::CallFunc_Subtract_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_ExecuteUbergraph_GCL_MedicPack_Healing, CallFunc_Subtract_FloatFloat_ReturnValue2) == 0x000020, "Member 'GCL_MedicPack_Healing_C_ExecuteUbergraph_GCL_MedicPack_Healing::CallFunc_Subtract_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_ExecuteUbergraph_GCL_MedicPack_Healing, K2Node_CustomEvent_Hit) == 0x000024, "Member 'GCL_MedicPack_Healing_C_ExecuteUbergraph_GCL_MedicPack_Healing::K2Node_CustomEvent_Hit' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_ExecuteUbergraph_GCL_MedicPack_Healing, K2Node_Event_DeltaSeconds) == 0x0000AC, "Member 'GCL_MedicPack_Healing_C_ExecuteUbergraph_GCL_MedicPack_Healing::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_ExecuteUbergraph_GCL_MedicPack_Healing, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x0000B0, "Member 'GCL_MedicPack_Healing_C_ExecuteUbergraph_GCL_MedicPack_Healing::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_ExecuteUbergraph_GCL_MedicPack_Healing, K2Node_CreateDelegate_OutputDelegate) == 0x0000B4, "Member 'GCL_MedicPack_Healing_C_ExecuteUbergraph_GCL_MedicPack_Healing::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_ExecuteUbergraph_GCL_MedicPack_Healing, CallFunc_GetSkeletalMeshForPartType_ReturnValue) == 0x0000C8, "Member 'GCL_MedicPack_Healing_C_ExecuteUbergraph_GCL_MedicPack_Healing::CallFunc_GetSkeletalMeshForPartType_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_ExecuteUbergraph_GCL_MedicPack_Healing, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000D0, "Member 'GCL_MedicPack_Healing_C_ExecuteUbergraph_GCL_MedicPack_Healing::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_ExecuteUbergraph_GCL_MedicPack_Healing, CallFunc_BooleanAND_ReturnValue) == 0x0000D1, "Member 'GCL_MedicPack_Healing_C_ExecuteUbergraph_GCL_MedicPack_Healing::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_ExecuteUbergraph_GCL_MedicPack_Healing, CallFunc_Subtract_FloatFloat_ReturnValue3) == 0x0000D4, "Member 'GCL_MedicPack_Healing_C_ExecuteUbergraph_GCL_MedicPack_Healing::CallFunc_Subtract_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_ExecuteUbergraph_GCL_MedicPack_Healing, CallFunc_IsValid_ReturnValue1) == 0x0000D8, "Member 'GCL_MedicPack_Healing_C_ExecuteUbergraph_GCL_MedicPack_Healing::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_ExecuteUbergraph_GCL_MedicPack_Healing, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0000D9, "Member 'GCL_MedicPack_Healing_C_ExecuteUbergraph_GCL_MedicPack_Healing::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_ExecuteUbergraph_GCL_MedicPack_Healing, CallFunc_IsValid_ReturnValue2) == 0x0000DA, "Member 'GCL_MedicPack_Healing_C_ExecuteUbergraph_GCL_MedicPack_Healing::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_ExecuteUbergraph_GCL_MedicPack_Healing, CallFunc_IsValid_ReturnValue3) == 0x0000DB, "Member 'GCL_MedicPack_Healing_C_ExecuteUbergraph_GCL_MedicPack_Healing::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_ExecuteUbergraph_GCL_MedicPack_Healing, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000DC, "Member 'GCL_MedicPack_Healing_C_ExecuteUbergraph_GCL_MedicPack_Healing::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_ExecuteUbergraph_GCL_MedicPack_Healing, CallFunc_Subtract_FloatFloat_ReturnValue4) == 0x0000E8, "Member 'GCL_MedicPack_Healing_C_ExecuteUbergraph_GCL_MedicPack_Healing::CallFunc_Subtract_FloatFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_ExecuteUbergraph_GCL_MedicPack_Healing, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000EC, "Member 'GCL_MedicPack_Healing_C_ExecuteUbergraph_GCL_MedicPack_Healing::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_ExecuteUbergraph_GCL_MedicPack_Healing, CallFunc_BooleanAND_ReturnValue1) == 0x0000ED, "Member 'GCL_MedicPack_Healing_C_ExecuteUbergraph_GCL_MedicPack_Healing::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_ExecuteUbergraph_GCL_MedicPack_Healing, CallFunc_BooleanAND_ReturnValue2) == 0x0000EE, "Member 'GCL_MedicPack_Healing_C_ExecuteUbergraph_GCL_MedicPack_Healing::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_ExecuteUbergraph_GCL_MedicPack_Healing, CallFunc_BooleanAND_ReturnValue3) == 0x0000EF, "Member 'GCL_MedicPack_Healing_C_ExecuteUbergraph_GCL_MedicPack_Healing::CallFunc_BooleanAND_ReturnValue3' has a wrong offset!");

// Function GCL_MedicPack_Healing.GCL_MedicPack_Healing_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct GCL_MedicPack_Healing_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCL_MedicPack_Healing_C_ReceiveTick) == 0x000004, "Wrong alignment on GCL_MedicPack_Healing_C_ReceiveTick");
static_assert(sizeof(GCL_MedicPack_Healing_C_ReceiveTick) == 0x000004, "Wrong size on GCL_MedicPack_Healing_C_ReceiveTick");
static_assert(offsetof(GCL_MedicPack_Healing_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'GCL_MedicPack_Healing_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function GCL_MedicPack_Healing.GCL_MedicPack_Healing_C.On Pawn Landed
// 0x0088 (0x0088 - 0x0000)
struct GCL_MedicPack_Healing_C_On_Pawn_Landed final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(GCL_MedicPack_Healing_C_On_Pawn_Landed) == 0x000004, "Wrong alignment on GCL_MedicPack_Healing_C_On_Pawn_Landed");
static_assert(sizeof(GCL_MedicPack_Healing_C_On_Pawn_Landed) == 0x000088, "Wrong size on GCL_MedicPack_Healing_C_On_Pawn_Landed");
static_assert(offsetof(GCL_MedicPack_Healing_C_On_Pawn_Landed, Hit) == 0x000000, "Member 'GCL_MedicPack_Healing_C_On_Pawn_Landed::Hit' has a wrong offset!");

// Function GCL_MedicPack_Healing.GCL_MedicPack_Healing_C.OnRemove
// 0x00D8 (0x00D8 - 0x0000)
struct GCL_MedicPack_Healing_C_OnRemove final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00B8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x00C0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(struct FHitResult& Hit)>       K2Node_CreateDelegate_OutputDelegate;              // 0x00C4(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GCL_MedicPack_Healing_C_OnRemove) == 0x000008, "Wrong alignment on GCL_MedicPack_Healing_C_OnRemove");
static_assert(sizeof(GCL_MedicPack_Healing_C_OnRemove) == 0x0000D8, "Wrong size on GCL_MedicPack_Healing_C_OnRemove");
static_assert(offsetof(GCL_MedicPack_Healing_C_OnRemove, MyTarget) == 0x000000, "Member 'GCL_MedicPack_Healing_C_OnRemove::MyTarget' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_OnRemove, Parameters) == 0x000008, "Member 'GCL_MedicPack_Healing_C_OnRemove::Parameters' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_OnRemove, ReturnValue) == 0x0000C0, "Member 'GCL_MedicPack_Healing_C_OnRemove::ReturnValue' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_OnRemove, K2Node_CreateDelegate_OutputDelegate) == 0x0000C4, "Member 'GCL_MedicPack_Healing_C_OnRemove::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_OnRemove, CallFunc_IsValid_ReturnValue) == 0x0000D4, "Member 'GCL_MedicPack_Healing_C_OnRemove::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function GCL_MedicPack_Healing.GCL_MedicPack_Healing_C.SetJetpackAudioEnabled
// 0x00A0 (0x00A0 - 0x0000)
struct GCL_MedicPack_Healing_C_SetJetpackAudioEnabled final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue1;        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(struct FHitResult& Hit)>       K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_27[0x1];                                       // 0x0027(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             K2Node_Select_Default;                             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue1;         // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue2;         // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue3;         // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable1;                               // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue4;         // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             K2Node_Select1_Default;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue1;          // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue1;          // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue2;          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue2;          // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue3;          // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue4;          // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCL_MedicPack_Healing_C_SetJetpackAudioEnabled) == 0x000008, "Wrong alignment on GCL_MedicPack_Healing_C_SetJetpackAudioEnabled");
static_assert(sizeof(GCL_MedicPack_Healing_C_SetJetpackAudioEnabled) == 0x0000A0, "Wrong size on GCL_MedicPack_Healing_C_SetJetpackAudioEnabled");
static_assert(offsetof(GCL_MedicPack_Healing_C_SetJetpackAudioEnabled, Enabled) == 0x000000, "Member 'GCL_MedicPack_Healing_C_SetJetpackAudioEnabled::Enabled' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_SetJetpackAudioEnabled, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'GCL_MedicPack_Healing_C_SetJetpackAudioEnabled::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_SetJetpackAudioEnabled, CallFunc_IsValid_ReturnValue1) == 0x000002, "Member 'GCL_MedicPack_Healing_C_SetJetpackAudioEnabled::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_SetJetpackAudioEnabled, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000004, "Member 'GCL_MedicPack_Healing_C_SetJetpackAudioEnabled::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_SetJetpackAudioEnabled, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000008, "Member 'GCL_MedicPack_Healing_C_SetJetpackAudioEnabled::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_SetJetpackAudioEnabled, CallFunc_GetGameTimeInSeconds_ReturnValue1) == 0x00000C, "Member 'GCL_MedicPack_Healing_C_SetJetpackAudioEnabled::CallFunc_GetGameTimeInSeconds_ReturnValue1' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_SetJetpackAudioEnabled, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000010, "Member 'GCL_MedicPack_Healing_C_SetJetpackAudioEnabled::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_SetJetpackAudioEnabled, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'GCL_MedicPack_Healing_C_SetJetpackAudioEnabled::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_SetJetpackAudioEnabled, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000024, "Member 'GCL_MedicPack_Healing_C_SetJetpackAudioEnabled::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_SetJetpackAudioEnabled, CallFunc_BooleanAND_ReturnValue) == 0x000025, "Member 'GCL_MedicPack_Healing_C_SetJetpackAudioEnabled::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_SetJetpackAudioEnabled, Temp_bool_Variable) == 0x000026, "Member 'GCL_MedicPack_Healing_C_SetJetpackAudioEnabled::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_SetJetpackAudioEnabled, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000028, "Member 'GCL_MedicPack_Healing_C_SetJetpackAudioEnabled::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_SetJetpackAudioEnabled, K2Node_Select_Default) == 0x000030, "Member 'GCL_MedicPack_Healing_C_SetJetpackAudioEnabled::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_SetJetpackAudioEnabled, CallFunc_SpawnSoundAttached_ReturnValue) == 0x000038, "Member 'GCL_MedicPack_Healing_C_SetJetpackAudioEnabled::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_SetJetpackAudioEnabled, CallFunc_K2_GetRootComponent_ReturnValue1) == 0x000040, "Member 'GCL_MedicPack_Healing_C_SetJetpackAudioEnabled::CallFunc_K2_GetRootComponent_ReturnValue1' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_SetJetpackAudioEnabled, CallFunc_K2_GetRootComponent_ReturnValue2) == 0x000048, "Member 'GCL_MedicPack_Healing_C_SetJetpackAudioEnabled::CallFunc_K2_GetRootComponent_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_SetJetpackAudioEnabled, CallFunc_K2_GetRootComponent_ReturnValue3) == 0x000050, "Member 'GCL_MedicPack_Healing_C_SetJetpackAudioEnabled::CallFunc_K2_GetRootComponent_ReturnValue3' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_SetJetpackAudioEnabled, Temp_bool_Variable1) == 0x000058, "Member 'GCL_MedicPack_Healing_C_SetJetpackAudioEnabled::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_SetJetpackAudioEnabled, CallFunc_K2_GetRootComponent_ReturnValue4) == 0x000060, "Member 'GCL_MedicPack_Healing_C_SetJetpackAudioEnabled::CallFunc_K2_GetRootComponent_ReturnValue4' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_SetJetpackAudioEnabled, K2Node_Select1_Default) == 0x000068, "Member 'GCL_MedicPack_Healing_C_SetJetpackAudioEnabled::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_SetJetpackAudioEnabled, CallFunc_SpawnSoundAttached_ReturnValue1) == 0x000070, "Member 'GCL_MedicPack_Healing_C_SetJetpackAudioEnabled::CallFunc_SpawnSoundAttached_ReturnValue1' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_SetJetpackAudioEnabled, CallFunc_RandomFloatInRange_ReturnValue) == 0x000078, "Member 'GCL_MedicPack_Healing_C_SetJetpackAudioEnabled::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_SetJetpackAudioEnabled, CallFunc_RandomFloatInRange_ReturnValue1) == 0x00007C, "Member 'GCL_MedicPack_Healing_C_SetJetpackAudioEnabled::CallFunc_RandomFloatInRange_ReturnValue1' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_SetJetpackAudioEnabled, CallFunc_RandomFloatInRange_ReturnValue2) == 0x000080, "Member 'GCL_MedicPack_Healing_C_SetJetpackAudioEnabled::CallFunc_RandomFloatInRange_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_SetJetpackAudioEnabled, CallFunc_SpawnSoundAttached_ReturnValue2) == 0x000088, "Member 'GCL_MedicPack_Healing_C_SetJetpackAudioEnabled::CallFunc_SpawnSoundAttached_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_SetJetpackAudioEnabled, CallFunc_SpawnSoundAttached_ReturnValue3) == 0x000090, "Member 'GCL_MedicPack_Healing_C_SetJetpackAudioEnabled::CallFunc_SpawnSoundAttached_ReturnValue3' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_SetJetpackAudioEnabled, CallFunc_SpawnSoundAttached_ReturnValue4) == 0x000098, "Member 'GCL_MedicPack_Healing_C_SetJetpackAudioEnabled::CallFunc_SpawnSoundAttached_ReturnValue4' has a wrong offset!");

// Function GCL_MedicPack_Healing.GCL_MedicPack_Healing_C.GetFuelPercent
// 0x0010 (0x0010 - 0x0000)
struct GCL_MedicPack_Healing_C_GetFuelPercent final
{
public:
	float                                         FuelPercent;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxFuel_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFuel_ReturnValue;                      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCL_MedicPack_Healing_C_GetFuelPercent) == 0x000004, "Wrong alignment on GCL_MedicPack_Healing_C_GetFuelPercent");
static_assert(sizeof(GCL_MedicPack_Healing_C_GetFuelPercent) == 0x000010, "Wrong size on GCL_MedicPack_Healing_C_GetFuelPercent");
static_assert(offsetof(GCL_MedicPack_Healing_C_GetFuelPercent, FuelPercent) == 0x000000, "Member 'GCL_MedicPack_Healing_C_GetFuelPercent::FuelPercent' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_GetFuelPercent, CallFunc_GetMaxFuel_ReturnValue) == 0x000004, "Member 'GCL_MedicPack_Healing_C_GetFuelPercent::CallFunc_GetMaxFuel_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_GetFuelPercent, CallFunc_GetFuel_ReturnValue) == 0x000008, "Member 'GCL_MedicPack_Healing_C_GetFuelPercent::CallFunc_GetFuel_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_GetFuelPercent, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00000C, "Member 'GCL_MedicPack_Healing_C_GetFuelPercent::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function GCL_MedicPack_Healing.GCL_MedicPack_Healing_C.GetFuel
// 0x0038 (0x0038 - 0x0000)
struct GCL_MedicPack_Healing_C_GetFuel final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAttribute                     FuelAttribute;                                     // 0x0008(0x0020)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetSimulatedAttributeValue_ReturnValue;   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute; // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttribute_ReturnValue;            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCL_MedicPack_Healing_C_GetFuel) == 0x000008, "Wrong alignment on GCL_MedicPack_Healing_C_GetFuel");
static_assert(sizeof(GCL_MedicPack_Healing_C_GetFuel) == 0x000038, "Wrong size on GCL_MedicPack_Healing_C_GetFuel");
static_assert(offsetof(GCL_MedicPack_Healing_C_GetFuel, ReturnValue) == 0x000000, "Member 'GCL_MedicPack_Healing_C_GetFuel::ReturnValue' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_GetFuel, FuelAttribute) == 0x000008, "Member 'GCL_MedicPack_Healing_C_GetFuel::FuelAttribute' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_GetFuel, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'GCL_MedicPack_Healing_C_GetFuel::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_GetFuel, CallFunc_GetSimulatedAttributeValue_ReturnValue) == 0x00002C, "Member 'GCL_MedicPack_Healing_C_GetFuel::CallFunc_GetSimulatedAttributeValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_GetFuel, CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute) == 0x000030, "Member 'GCL_MedicPack_Healing_C_GetFuel::CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_GetFuel, CallFunc_GetFloatAttribute_ReturnValue) == 0x000034, "Member 'GCL_MedicPack_Healing_C_GetFuel::CallFunc_GetFloatAttribute_ReturnValue' has a wrong offset!");

// Function GCL_MedicPack_Healing.GCL_MedicPack_Healing_C.GetMaxFuel
// 0x0038 (0x0038 - 0x0000)
struct GCL_MedicPack_Healing_C_GetMaxFuel final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAttribute                     MaxFuelAttribute;                                  // 0x0008(0x0020)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetSimulatedAttributeValue_ReturnValue;   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute; // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttribute_ReturnValue;            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCL_MedicPack_Healing_C_GetMaxFuel) == 0x000008, "Wrong alignment on GCL_MedicPack_Healing_C_GetMaxFuel");
static_assert(sizeof(GCL_MedicPack_Healing_C_GetMaxFuel) == 0x000038, "Wrong size on GCL_MedicPack_Healing_C_GetMaxFuel");
static_assert(offsetof(GCL_MedicPack_Healing_C_GetMaxFuel, ReturnValue) == 0x000000, "Member 'GCL_MedicPack_Healing_C_GetMaxFuel::ReturnValue' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_GetMaxFuel, MaxFuelAttribute) == 0x000008, "Member 'GCL_MedicPack_Healing_C_GetMaxFuel::MaxFuelAttribute' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_GetMaxFuel, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'GCL_MedicPack_Healing_C_GetMaxFuel::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_GetMaxFuel, CallFunc_GetSimulatedAttributeValue_ReturnValue) == 0x00002C, "Member 'GCL_MedicPack_Healing_C_GetMaxFuel::CallFunc_GetSimulatedAttributeValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_GetMaxFuel, CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute) == 0x000030, "Member 'GCL_MedicPack_Healing_C_GetMaxFuel::CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_GetMaxFuel, CallFunc_GetFloatAttribute_ReturnValue) == 0x000034, "Member 'GCL_MedicPack_Healing_C_GetMaxFuel::CallFunc_GetFloatAttribute_ReturnValue' has a wrong offset!");

// Function GCL_MedicPack_Healing.GCL_MedicPack_Healing_C.CalculateFuelPercentage
// 0x0004 (0x0004 - 0x0000)
struct GCL_MedicPack_Healing_C_CalculateFuelPercentage final
{
public:
	float                                         CallFunc_GetFuelPercent_FuelPercent;               // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCL_MedicPack_Healing_C_CalculateFuelPercentage) == 0x000004, "Wrong alignment on GCL_MedicPack_Healing_C_CalculateFuelPercentage");
static_assert(sizeof(GCL_MedicPack_Healing_C_CalculateFuelPercentage) == 0x000004, "Wrong size on GCL_MedicPack_Healing_C_CalculateFuelPercentage");
static_assert(offsetof(GCL_MedicPack_Healing_C_CalculateFuelPercentage, CallFunc_GetFuelPercent_FuelPercent) == 0x000000, "Member 'GCL_MedicPack_Healing_C_CalculateFuelPercentage::CallFunc_GetFuelPercent_FuelPercent' has a wrong offset!");

// Function GCL_MedicPack_Healing.GCL_MedicPack_Healing_C.CacheRenderingDetailMode
// 0x0004 (0x0004 - 0x0000)
struct GCL_MedicPack_Healing_C_CacheRenderingDetailMode final
{
public:
	int32                                         CallFunc_GetRenderingDetailMode_ReturnValue;       // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCL_MedicPack_Healing_C_CacheRenderingDetailMode) == 0x000004, "Wrong alignment on GCL_MedicPack_Healing_C_CacheRenderingDetailMode");
static_assert(sizeof(GCL_MedicPack_Healing_C_CacheRenderingDetailMode) == 0x000004, "Wrong size on GCL_MedicPack_Healing_C_CacheRenderingDetailMode");
static_assert(offsetof(GCL_MedicPack_Healing_C_CacheRenderingDetailMode, CallFunc_GetRenderingDetailMode_ReturnValue) == 0x000000, "Member 'GCL_MedicPack_Healing_C_CacheRenderingDetailMode::CallFunc_GetRenderingDetailMode_ReturnValue' has a wrong offset!");

// Function GCL_MedicPack_Healing.GCL_MedicPack_Healing_C.WhileActive
// 0x00F0 (0x00F0 - 0x0000)
struct GCL_MedicPack_Healing_C_WhileActive final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00B8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x00C0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerPawn_Athena_C*                   K2Node_DynamicCast_AsPlayer_Pawn_Athena;           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetSkeletalMeshForPartType_ReturnValue;   // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCL_MedicPack_Healing_C_WhileActive) == 0x000008, "Wrong alignment on GCL_MedicPack_Healing_C_WhileActive");
static_assert(sizeof(GCL_MedicPack_Healing_C_WhileActive) == 0x0000F0, "Wrong size on GCL_MedicPack_Healing_C_WhileActive");
static_assert(offsetof(GCL_MedicPack_Healing_C_WhileActive, MyTarget) == 0x000000, "Member 'GCL_MedicPack_Healing_C_WhileActive::MyTarget' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_WhileActive, Parameters) == 0x000008, "Member 'GCL_MedicPack_Healing_C_WhileActive::Parameters' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_WhileActive, ReturnValue) == 0x0000C0, "Member 'GCL_MedicPack_Healing_C_WhileActive::ReturnValue' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_WhileActive, K2Node_DynamicCast_AsPlayer_Pawn_Athena) == 0x0000C8, "Member 'GCL_MedicPack_Healing_C_WhileActive::K2Node_DynamicCast_AsPlayer_Pawn_Athena' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_WhileActive, K2Node_DynamicCast_bSuccess) == 0x0000D0, "Member 'GCL_MedicPack_Healing_C_WhileActive::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_WhileActive, CallFunc_GetSkeletalMeshForPartType_ReturnValue) == 0x0000D8, "Member 'GCL_MedicPack_Healing_C_WhileActive::CallFunc_GetSkeletalMeshForPartType_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_WhileActive, CallFunc_IsValid_ReturnValue) == 0x0000E0, "Member 'GCL_MedicPack_Healing_C_WhileActive::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCL_MedicPack_Healing_C_WhileActive, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x0000E8, "Member 'GCL_MedicPack_Healing_C_WhileActive::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");

}

