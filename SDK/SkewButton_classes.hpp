#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SkewButton

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "CommonUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass SkewButton.SkewButton_C
// 0x0058 (0x0B88 - 0x0B30)
class USkewButton_C final : public UCommonButton
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0B30(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Released;                                          // 0x0B38(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Pressed;                                           // 0x0B40(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Hover;                                             // 0x0B48(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 ImageButtonFill;                                   // 0x0B50(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ImageShadow;                                       // 0x0B58(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             NamedSlot_ButtonContent;                           // 0x0B60(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_SkewBrushes;                               // 0x0B68(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FLinearColor                           ButtonColor;                                       // 0x0B70(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Chip;                                              // 0x0B80(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Skew;                                              // 0x0B81(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NoHoverColor;                                      // 0x0B82(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_SkewButton(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void BP_OnClicked();
	void BP_OnHovered();
	void BP_OnUnhovered();
	void Construct();
	struct FEventReply OnMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	struct FEventReply OnMouseButtonUp(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void OnMouseLeave(const struct FPointerEvent& MouseEvent);
	struct FEventReply OnTouchEnded(const struct FGeometry& MyGeometry, const struct FPointerEvent& InTouchEvent);
	struct FEventReply OnTouchStarted(const struct FGeometry& MyGeometry, const struct FPointerEvent& InTouchEvent);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SkewButton_C">();
	}
	static class USkewButton_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<USkewButton_C>();
	}
};
static_assert(alignof(USkewButton_C) == 0x000008, "Wrong alignment on USkewButton_C");
static_assert(sizeof(USkewButton_C) == 0x000B88, "Wrong size on USkewButton_C");
static_assert(offsetof(USkewButton_C, UberGraphFrame) == 0x000B30, "Member 'USkewButton_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(USkewButton_C, Released) == 0x000B38, "Member 'USkewButton_C::Released' has a wrong offset!");
static_assert(offsetof(USkewButton_C, Pressed) == 0x000B40, "Member 'USkewButton_C::Pressed' has a wrong offset!");
static_assert(offsetof(USkewButton_C, Hover) == 0x000B48, "Member 'USkewButton_C::Hover' has a wrong offset!");
static_assert(offsetof(USkewButton_C, ImageButtonFill) == 0x000B50, "Member 'USkewButton_C::ImageButtonFill' has a wrong offset!");
static_assert(offsetof(USkewButton_C, ImageShadow) == 0x000B58, "Member 'USkewButton_C::ImageShadow' has a wrong offset!");
static_assert(offsetof(USkewButton_C, NamedSlot_ButtonContent) == 0x000B60, "Member 'USkewButton_C::NamedSlot_ButtonContent' has a wrong offset!");
static_assert(offsetof(USkewButton_C, Overlay_SkewBrushes) == 0x000B68, "Member 'USkewButton_C::Overlay_SkewBrushes' has a wrong offset!");
static_assert(offsetof(USkewButton_C, ButtonColor) == 0x000B70, "Member 'USkewButton_C::ButtonColor' has a wrong offset!");
static_assert(offsetof(USkewButton_C, Chip) == 0x000B80, "Member 'USkewButton_C::Chip' has a wrong offset!");
static_assert(offsetof(USkewButton_C, Skew) == 0x000B81, "Member 'USkewButton_C::Skew' has a wrong offset!");
static_assert(offsetof(USkewButton_C, NoHoverColor) == 0x000B82, "Member 'USkewButton_C::NoHoverColor' has a wrong offset!");

}

