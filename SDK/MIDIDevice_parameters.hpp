#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MIDIDevice

#include "Basic.hpp"

#include "MIDIDevice_structs.hpp"


namespace SDK::Params
{

// Function MIDIDevice.MIDIDeviceManager.CreateMIDIDeviceController
// 0x0010 (0x0010 - 0x0000)
struct MIDIDeviceManager_CreateMIDIDeviceController final
{
public:
	int32                                         DeviceID;                                          // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MIDIBufferSize;                                    // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMIDIDeviceController*                  ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MIDIDeviceManager_CreateMIDIDeviceController) == 0x000008, "Wrong alignment on MIDIDeviceManager_CreateMIDIDeviceController");
static_assert(sizeof(MIDIDeviceManager_CreateMIDIDeviceController) == 0x000010, "Wrong size on MIDIDeviceManager_CreateMIDIDeviceController");
static_assert(offsetof(MIDIDeviceManager_CreateMIDIDeviceController, DeviceID) == 0x000000, "Member 'MIDIDeviceManager_CreateMIDIDeviceController::DeviceID' has a wrong offset!");
static_assert(offsetof(MIDIDeviceManager_CreateMIDIDeviceController, MIDIBufferSize) == 0x000004, "Member 'MIDIDeviceManager_CreateMIDIDeviceController::MIDIBufferSize' has a wrong offset!");
static_assert(offsetof(MIDIDeviceManager_CreateMIDIDeviceController, ReturnValue) == 0x000008, "Member 'MIDIDeviceManager_CreateMIDIDeviceController::ReturnValue' has a wrong offset!");

// Function MIDIDevice.MIDIDeviceManager.FindMIDIDevices
// 0x0010 (0x0010 - 0x0000)
struct MIDIDeviceManager_FindMIDIDevices final
{
public:
	TArray<struct FFoundMIDIDevice>               OutMIDIDevices;                                    // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(MIDIDeviceManager_FindMIDIDevices) == 0x000008, "Wrong alignment on MIDIDeviceManager_FindMIDIDevices");
static_assert(sizeof(MIDIDeviceManager_FindMIDIDevices) == 0x000010, "Wrong size on MIDIDeviceManager_FindMIDIDevices");
static_assert(offsetof(MIDIDeviceManager_FindMIDIDevices, OutMIDIDevices) == 0x000000, "Member 'MIDIDeviceManager_FindMIDIDevices::OutMIDIDevices' has a wrong offset!");

}

