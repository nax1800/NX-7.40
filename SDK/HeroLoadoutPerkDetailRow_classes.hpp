#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HeroLoadoutPerkDetailRow

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "CommonUI_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass HeroLoadoutPerkDetailRow.HeroLoadoutPerkDetailRow_C
// 0x01F0 (0x0428 - 0x0238)
class UHeroLoadoutPerkDetailRow_C final : public UCommonUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0238(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Hover;                                             // 0x0240(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBorder*                                Border_PerkIcon;                                   // 0x0248(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ImageLockPerk;                                     // 0x0250(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ImagePerkIcon;                                     // 0x0258(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ImageTier;                                         // 0x0260(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonWidgetSwitcher*                  InfoSwitcher;                                      // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               LargeInfo;                                         // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       LargeName;                                         // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       LevelTextNew;                                      // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               OverlayLockPerk;                                   // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               PerkIconSizeBox;                                   // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URichTextBlock*                         RichText_SmallDescription;                         // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Shadow;                                            // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           SmallInfo;                                         // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       SmallName;                                         // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          IncludeName;                                       // 0x02B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IncludeDescription;                                // 0x02B9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ShouldDisplayAsIgnored;                            // 0x02BA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BB[0x5];                                      // 0x02BB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 UnlockedDisplayNameTextStyle;                      // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 LockedDisplayNameTextStyle;                        // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 IgnoredDisplayNameTextStyle;                       // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 UnlockedDescriptionTextStyle;                      // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 LockedDescriptionTextStyle;                        // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 IgnoredDescriptionTextStyle;                       // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortBrushSize                                Icon_Size;                                         // 0x02F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F1[0x7];                                      // 0x02F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortHero*                              Host_Hero;                                         // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	EFortHeroLoadoutPerkType                      Perk_Type_To_Represent;                            // 0x0300(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_301[0x3];                                      // 0x0301(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         HoverAlphaValue;                                   // 0x0304(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	float                                         HoverHorizontalOffset;                             // 0x0308(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30C[0x4];                                      // 0x030C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            LockedIcon;                                        // 0x0310(0x0088)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateBrush                            WarningIcon;                                       // 0x0398(0x0088)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          ShouldDisplayWarning;                              // 0x0420(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_HeroLoadoutPerkDetailRow(int32 EntryPoint);
	void SetHoverHorizontalOffset(float NewValue);
	void SetHoverAlphaValue(float NewValue);
	void PreConstruct(bool IsDesignTime);
	void UpdateFromStyle();
	void UpdateFromState();
	void UpdateTextStyles();
	void SetHero(class UFortHero* Hero);
	class UFortAbilityKit* GetPerkAbilityKit();
	bool IsPerkUnlocked();
	void SetPerkTypeToRepresent(EFortHeroLoadoutPerkType Perk_Type);
	void SetShouldDisplayAsIgnored(bool InShouldDisplayAsIgnored);
	void PlayHoverCue();
	void PlayUnhoverCue();
	void UpdateLockedImage();
	void SetShouldDisplayWarning(bool InShouldDisplayWarning);
	void PlayHover();
	void PlayUnHover();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"HeroLoadoutPerkDetailRow_C">();
	}
	static class UHeroLoadoutPerkDetailRow_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHeroLoadoutPerkDetailRow_C>();
	}
};
static_assert(alignof(UHeroLoadoutPerkDetailRow_C) == 0x000008, "Wrong alignment on UHeroLoadoutPerkDetailRow_C");
static_assert(sizeof(UHeroLoadoutPerkDetailRow_C) == 0x000428, "Wrong size on UHeroLoadoutPerkDetailRow_C");
static_assert(offsetof(UHeroLoadoutPerkDetailRow_C, UberGraphFrame) == 0x000238, "Member 'UHeroLoadoutPerkDetailRow_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutPerkDetailRow_C, Hover) == 0x000240, "Member 'UHeroLoadoutPerkDetailRow_C::Hover' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutPerkDetailRow_C, Border_PerkIcon) == 0x000248, "Member 'UHeroLoadoutPerkDetailRow_C::Border_PerkIcon' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutPerkDetailRow_C, ImageLockPerk) == 0x000250, "Member 'UHeroLoadoutPerkDetailRow_C::ImageLockPerk' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutPerkDetailRow_C, ImagePerkIcon) == 0x000258, "Member 'UHeroLoadoutPerkDetailRow_C::ImagePerkIcon' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutPerkDetailRow_C, ImageTier) == 0x000260, "Member 'UHeroLoadoutPerkDetailRow_C::ImageTier' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutPerkDetailRow_C, InfoSwitcher) == 0x000268, "Member 'UHeroLoadoutPerkDetailRow_C::InfoSwitcher' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutPerkDetailRow_C, LargeInfo) == 0x000270, "Member 'UHeroLoadoutPerkDetailRow_C::LargeInfo' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutPerkDetailRow_C, LargeName) == 0x000278, "Member 'UHeroLoadoutPerkDetailRow_C::LargeName' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutPerkDetailRow_C, LevelTextNew) == 0x000280, "Member 'UHeroLoadoutPerkDetailRow_C::LevelTextNew' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutPerkDetailRow_C, OverlayLockPerk) == 0x000288, "Member 'UHeroLoadoutPerkDetailRow_C::OverlayLockPerk' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutPerkDetailRow_C, PerkIconSizeBox) == 0x000290, "Member 'UHeroLoadoutPerkDetailRow_C::PerkIconSizeBox' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutPerkDetailRow_C, RichText_SmallDescription) == 0x000298, "Member 'UHeroLoadoutPerkDetailRow_C::RichText_SmallDescription' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutPerkDetailRow_C, Shadow) == 0x0002A0, "Member 'UHeroLoadoutPerkDetailRow_C::Shadow' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutPerkDetailRow_C, SmallInfo) == 0x0002A8, "Member 'UHeroLoadoutPerkDetailRow_C::SmallInfo' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutPerkDetailRow_C, SmallName) == 0x0002B0, "Member 'UHeroLoadoutPerkDetailRow_C::SmallName' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutPerkDetailRow_C, IncludeName) == 0x0002B8, "Member 'UHeroLoadoutPerkDetailRow_C::IncludeName' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutPerkDetailRow_C, IncludeDescription) == 0x0002B9, "Member 'UHeroLoadoutPerkDetailRow_C::IncludeDescription' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutPerkDetailRow_C, ShouldDisplayAsIgnored) == 0x0002BA, "Member 'UHeroLoadoutPerkDetailRow_C::ShouldDisplayAsIgnored' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutPerkDetailRow_C, UnlockedDisplayNameTextStyle) == 0x0002C0, "Member 'UHeroLoadoutPerkDetailRow_C::UnlockedDisplayNameTextStyle' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutPerkDetailRow_C, LockedDisplayNameTextStyle) == 0x0002C8, "Member 'UHeroLoadoutPerkDetailRow_C::LockedDisplayNameTextStyle' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutPerkDetailRow_C, IgnoredDisplayNameTextStyle) == 0x0002D0, "Member 'UHeroLoadoutPerkDetailRow_C::IgnoredDisplayNameTextStyle' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutPerkDetailRow_C, UnlockedDescriptionTextStyle) == 0x0002D8, "Member 'UHeroLoadoutPerkDetailRow_C::UnlockedDescriptionTextStyle' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutPerkDetailRow_C, LockedDescriptionTextStyle) == 0x0002E0, "Member 'UHeroLoadoutPerkDetailRow_C::LockedDescriptionTextStyle' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutPerkDetailRow_C, IgnoredDescriptionTextStyle) == 0x0002E8, "Member 'UHeroLoadoutPerkDetailRow_C::IgnoredDescriptionTextStyle' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutPerkDetailRow_C, Icon_Size) == 0x0002F0, "Member 'UHeroLoadoutPerkDetailRow_C::Icon_Size' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutPerkDetailRow_C, Host_Hero) == 0x0002F8, "Member 'UHeroLoadoutPerkDetailRow_C::Host_Hero' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutPerkDetailRow_C, Perk_Type_To_Represent) == 0x000300, "Member 'UHeroLoadoutPerkDetailRow_C::Perk_Type_To_Represent' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutPerkDetailRow_C, HoverAlphaValue) == 0x000304, "Member 'UHeroLoadoutPerkDetailRow_C::HoverAlphaValue' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutPerkDetailRow_C, HoverHorizontalOffset) == 0x000308, "Member 'UHeroLoadoutPerkDetailRow_C::HoverHorizontalOffset' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutPerkDetailRow_C, LockedIcon) == 0x000310, "Member 'UHeroLoadoutPerkDetailRow_C::LockedIcon' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutPerkDetailRow_C, WarningIcon) == 0x000398, "Member 'UHeroLoadoutPerkDetailRow_C::WarningIcon' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutPerkDetailRow_C, ShouldDisplayWarning) == 0x000420, "Member 'UHeroLoadoutPerkDetailRow_C::ShouldDisplayWarning' has a wrong offset!");

}

