#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TheaterCamera_Blueprint

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "CommonInput_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass TheaterCamera_Blueprint.TheaterCamera_Blueprint_C
// 0x01A0 (0x0A20 - 0x0880)
class ATheaterCamera_Blueprint_C final : public AFortTheaterCamera
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0880(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         FocusTimeline_Float_Curve_ADC98EA5D14E24EC78DD4F80C5102578; // 0x0888(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            FocusTimeline__Direction_ADC98EA5D14E24EC78DD4F80C5102578; // 0x088C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_88D[0x3];                                      // 0x088D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     FocusTimeline;                                     // 0x0890(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DebugZoomTL_CameraRotLevelMax_41B63CEF445574B1F9D6F489004E4238; // 0x0898(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DebugZoomTL_CameraRotLevelZero_41B63CEF445574B1F9D6F489004E4238; // 0x089C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DebugZoomTL_CameraOffsetX___LevelMax_41B63CEF445574B1F9D6F489004E4238; // 0x08A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DebugZoomTL_CameraOffsetX___LevelZero_41B63CEF445574B1F9D6F489004E4238; // 0x08A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DebugZoomTL_TotalNumberOfZoomLevels_41B63CEF445574B1F9D6F489004E4238; // 0x08A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DebugZoomTL_CameraHeight_LevelMax_41B63CEF445574B1F9D6F489004E4238; // 0x08AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DebugZoomTL_CameraHeight_LevelZero_41B63CEF445574B1F9D6F489004E4238; // 0x08B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DebugZoomTL_FOV_In_41B63CEF445574B1F9D6F489004E4238; // 0x08B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DebugZoomTL_FOV_Out_41B63CEF445574B1F9D6F489004E4238; // 0x08B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            DebugZoomTL__Direction_41B63CEF445574B1F9D6F489004E4238; // 0x08BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8BD[0x3];                                      // 0x08BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     DebugZoomTL;                                       // 0x08C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WorldLocSnapSize;                                  // 0x08C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CameraZHeightLevelZero;                            // 0x08CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CameraXOffsetLevelZero;                            // 0x08D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D4[0x4];                                      // 0x08D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortTheaterMapTile*                    TargetTile;                                        // 0x08D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentZoomPercentage;                             // 0x08E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NumberOfZoomLevels;                                // 0x08E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ZoomDistanceUnitZ;                                 // 0x08E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentZoomLevel;                                  // 0x08EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FocusedTileLocWithOffset;                          // 0x08F0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          MouseDown;                                         // 0x08FC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8FD[0x3];                                      // 0x08FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CurrentOffsetAmountX;                              // 0x0900(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CameraXOffsetLevelMax;                             // 0x0904(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InitialZoomLevels;                                 // 0x0908(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ForwardVector;                                     // 0x090C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CameraYRotationLevelZero;                          // 0x0918(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetTileLoc;                                     // 0x091C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OldOffsetAmountX;                                  // 0x0928(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentFOV;                                        // 0x092C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FOVLevelZero;                                      // 0x0930(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FOVLevelMax;                                       // 0x0934(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CameraZHeightLevelMax;                             // 0x0938(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ZoomDistanceUnitX;                                 // 0x093C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DebugCameraZoom;                                   // 0x0940(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_941[0x3];                                      // 0x0941(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CameraYRotationLevelMax;                           // 0x0944(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SnapCameraToFocusedTile;                           // 0x0948(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_949[0x7];                                      // 0x0949(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector2D>                      CloudMaskLocations;                                // 0x0950(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	float                                         CloudMaskScale;                                    // 0x0960(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReadyForPings;                                     // 0x0964(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_965[0x3];                                      // 0x0965(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_Hex_PARENT_C*>               AllHexesArray;                                     // 0x0968(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<uint8>                                 HexesPinged;                                       // 0x0978(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	bool                                          AllHexesHavePingedOnce;                            // 0x0988(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          WaitForForceFocus;                                 // 0x0989(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          AQuestIsPinned;                                    // 0x098A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_98B[0x5];                                      // 0x098B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<bool>                                  PinnedQuestsArray;                                 // 0x0990(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	bool                                          WaitForPinned;                                     // 0x09A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A1[0x3];                                      // 0x09A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                HexWorldLocFromBP_Hex_PARENT;                      // 0x09A4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxCameraDistance;                                 // 0x09B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HighestXMinusValue;                                // 0x09B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HighestYMinusValue;                                // 0x09B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TotalWidthOfHexPlane;                              // 0x09BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HexPlaneBufferSize;                                // 0x09C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CenterLocOfAllHexes;                               // 0x09C4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector2D>                      RoadMaskLocations;                                 // 0x09D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FVector2D>                      TileType0MinusLocs;                                // 0x09E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FVector2D>                      TileType1MinusLocs;                                // 0x09F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FVector2D>                      TileType2MinusLocs;                                // 0x0A00(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	float                                         TileTypeMaskScale;                                 // 0x0A10(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSuspendInput;                                     // 0x0A14(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A15[0x3];                                      // 0x0A15(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LastZoomButtonHeldTime;                            // 0x0A18(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_TheaterCamera_Blueprint(int32 EntryPoint);
	void PinnedPing();
	void MaskFinished();
	void RefreshCloudMask();
	void PingFromHex();
	void ForceTileFocus(const struct FVector& HexWorldLoc);
	void StopFocusTimeline();
	void OnDragEnd();
	void OnDragBegin();
	void ReceiveTick(float DeltaSeconds);
	void SetTileFocus(class AFortTheaterMapTile* Param_TargetTile);
	void OnDeactivated();
	void OnActivated();
	void InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_0(const struct FKey& Key);
	void InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_1(const struct FKey& Key);
	void DebugZoomTL__UpdateFunc();
	void DebugZoomTL__FinishedFunc();
	void FocusTimeline__UpdateFunc();
	void FocusTimeline__FinishedFunc();
	void UserConstructionScript();
	void ZoomCameraStep(bool Forward);
	void HandleTheaterSelected(const class FString& TheaterId);
	void PanCamera(float DeltaX, float DeltaY);
	struct FVector2D NewFunction_0(class AActor* Self2);
	bool IsInputSuspended();
	void SetSuspendInput(bool SuspendInput);
	void ZoomCameraWithHeldGamepadInput();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TheaterCamera_Blueprint_C">();
	}
	static class ATheaterCamera_Blueprint_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATheaterCamera_Blueprint_C>();
	}
};
static_assert(alignof(ATheaterCamera_Blueprint_C) == 0x000010, "Wrong alignment on ATheaterCamera_Blueprint_C");
static_assert(sizeof(ATheaterCamera_Blueprint_C) == 0x000A20, "Wrong size on ATheaterCamera_Blueprint_C");
static_assert(offsetof(ATheaterCamera_Blueprint_C, UberGraphFrame) == 0x000880, "Member 'ATheaterCamera_Blueprint_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, FocusTimeline_Float_Curve_ADC98EA5D14E24EC78DD4F80C5102578) == 0x000888, "Member 'ATheaterCamera_Blueprint_C::FocusTimeline_Float_Curve_ADC98EA5D14E24EC78DD4F80C5102578' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, FocusTimeline__Direction_ADC98EA5D14E24EC78DD4F80C5102578) == 0x00088C, "Member 'ATheaterCamera_Blueprint_C::FocusTimeline__Direction_ADC98EA5D14E24EC78DD4F80C5102578' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, FocusTimeline) == 0x000890, "Member 'ATheaterCamera_Blueprint_C::FocusTimeline' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, DebugZoomTL_CameraRotLevelMax_41B63CEF445574B1F9D6F489004E4238) == 0x000898, "Member 'ATheaterCamera_Blueprint_C::DebugZoomTL_CameraRotLevelMax_41B63CEF445574B1F9D6F489004E4238' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, DebugZoomTL_CameraRotLevelZero_41B63CEF445574B1F9D6F489004E4238) == 0x00089C, "Member 'ATheaterCamera_Blueprint_C::DebugZoomTL_CameraRotLevelZero_41B63CEF445574B1F9D6F489004E4238' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, DebugZoomTL_CameraOffsetX___LevelMax_41B63CEF445574B1F9D6F489004E4238) == 0x0008A0, "Member 'ATheaterCamera_Blueprint_C::DebugZoomTL_CameraOffsetX___LevelMax_41B63CEF445574B1F9D6F489004E4238' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, DebugZoomTL_CameraOffsetX___LevelZero_41B63CEF445574B1F9D6F489004E4238) == 0x0008A4, "Member 'ATheaterCamera_Blueprint_C::DebugZoomTL_CameraOffsetX___LevelZero_41B63CEF445574B1F9D6F489004E4238' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, DebugZoomTL_TotalNumberOfZoomLevels_41B63CEF445574B1F9D6F489004E4238) == 0x0008A8, "Member 'ATheaterCamera_Blueprint_C::DebugZoomTL_TotalNumberOfZoomLevels_41B63CEF445574B1F9D6F489004E4238' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, DebugZoomTL_CameraHeight_LevelMax_41B63CEF445574B1F9D6F489004E4238) == 0x0008AC, "Member 'ATheaterCamera_Blueprint_C::DebugZoomTL_CameraHeight_LevelMax_41B63CEF445574B1F9D6F489004E4238' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, DebugZoomTL_CameraHeight_LevelZero_41B63CEF445574B1F9D6F489004E4238) == 0x0008B0, "Member 'ATheaterCamera_Blueprint_C::DebugZoomTL_CameraHeight_LevelZero_41B63CEF445574B1F9D6F489004E4238' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, DebugZoomTL_FOV_In_41B63CEF445574B1F9D6F489004E4238) == 0x0008B4, "Member 'ATheaterCamera_Blueprint_C::DebugZoomTL_FOV_In_41B63CEF445574B1F9D6F489004E4238' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, DebugZoomTL_FOV_Out_41B63CEF445574B1F9D6F489004E4238) == 0x0008B8, "Member 'ATheaterCamera_Blueprint_C::DebugZoomTL_FOV_Out_41B63CEF445574B1F9D6F489004E4238' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, DebugZoomTL__Direction_41B63CEF445574B1F9D6F489004E4238) == 0x0008BC, "Member 'ATheaterCamera_Blueprint_C::DebugZoomTL__Direction_41B63CEF445574B1F9D6F489004E4238' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, DebugZoomTL) == 0x0008C0, "Member 'ATheaterCamera_Blueprint_C::DebugZoomTL' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, WorldLocSnapSize) == 0x0008C8, "Member 'ATheaterCamera_Blueprint_C::WorldLocSnapSize' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, CameraZHeightLevelZero) == 0x0008CC, "Member 'ATheaterCamera_Blueprint_C::CameraZHeightLevelZero' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, CameraXOffsetLevelZero) == 0x0008D0, "Member 'ATheaterCamera_Blueprint_C::CameraXOffsetLevelZero' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, TargetTile) == 0x0008D8, "Member 'ATheaterCamera_Blueprint_C::TargetTile' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, CurrentZoomPercentage) == 0x0008E0, "Member 'ATheaterCamera_Blueprint_C::CurrentZoomPercentage' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, NumberOfZoomLevels) == 0x0008E4, "Member 'ATheaterCamera_Blueprint_C::NumberOfZoomLevels' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, ZoomDistanceUnitZ) == 0x0008E8, "Member 'ATheaterCamera_Blueprint_C::ZoomDistanceUnitZ' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, CurrentZoomLevel) == 0x0008EC, "Member 'ATheaterCamera_Blueprint_C::CurrentZoomLevel' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, FocusedTileLocWithOffset) == 0x0008F0, "Member 'ATheaterCamera_Blueprint_C::FocusedTileLocWithOffset' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, MouseDown) == 0x0008FC, "Member 'ATheaterCamera_Blueprint_C::MouseDown' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, CurrentOffsetAmountX) == 0x000900, "Member 'ATheaterCamera_Blueprint_C::CurrentOffsetAmountX' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, CameraXOffsetLevelMax) == 0x000904, "Member 'ATheaterCamera_Blueprint_C::CameraXOffsetLevelMax' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, InitialZoomLevels) == 0x000908, "Member 'ATheaterCamera_Blueprint_C::InitialZoomLevels' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, ForwardVector) == 0x00090C, "Member 'ATheaterCamera_Blueprint_C::ForwardVector' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, CameraYRotationLevelZero) == 0x000918, "Member 'ATheaterCamera_Blueprint_C::CameraYRotationLevelZero' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, TargetTileLoc) == 0x00091C, "Member 'ATheaterCamera_Blueprint_C::TargetTileLoc' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, OldOffsetAmountX) == 0x000928, "Member 'ATheaterCamera_Blueprint_C::OldOffsetAmountX' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, CurrentFOV) == 0x00092C, "Member 'ATheaterCamera_Blueprint_C::CurrentFOV' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, FOVLevelZero) == 0x000930, "Member 'ATheaterCamera_Blueprint_C::FOVLevelZero' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, FOVLevelMax) == 0x000934, "Member 'ATheaterCamera_Blueprint_C::FOVLevelMax' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, CameraZHeightLevelMax) == 0x000938, "Member 'ATheaterCamera_Blueprint_C::CameraZHeightLevelMax' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, ZoomDistanceUnitX) == 0x00093C, "Member 'ATheaterCamera_Blueprint_C::ZoomDistanceUnitX' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, DebugCameraZoom) == 0x000940, "Member 'ATheaterCamera_Blueprint_C::DebugCameraZoom' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, CameraYRotationLevelMax) == 0x000944, "Member 'ATheaterCamera_Blueprint_C::CameraYRotationLevelMax' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, SnapCameraToFocusedTile) == 0x000948, "Member 'ATheaterCamera_Blueprint_C::SnapCameraToFocusedTile' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, CloudMaskLocations) == 0x000950, "Member 'ATheaterCamera_Blueprint_C::CloudMaskLocations' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, CloudMaskScale) == 0x000960, "Member 'ATheaterCamera_Blueprint_C::CloudMaskScale' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, ReadyForPings) == 0x000964, "Member 'ATheaterCamera_Blueprint_C::ReadyForPings' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, AllHexesArray) == 0x000968, "Member 'ATheaterCamera_Blueprint_C::AllHexesArray' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, HexesPinged) == 0x000978, "Member 'ATheaterCamera_Blueprint_C::HexesPinged' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, AllHexesHavePingedOnce) == 0x000988, "Member 'ATheaterCamera_Blueprint_C::AllHexesHavePingedOnce' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, WaitForForceFocus) == 0x000989, "Member 'ATheaterCamera_Blueprint_C::WaitForForceFocus' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, AQuestIsPinned) == 0x00098A, "Member 'ATheaterCamera_Blueprint_C::AQuestIsPinned' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, PinnedQuestsArray) == 0x000990, "Member 'ATheaterCamera_Blueprint_C::PinnedQuestsArray' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, WaitForPinned) == 0x0009A0, "Member 'ATheaterCamera_Blueprint_C::WaitForPinned' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, HexWorldLocFromBP_Hex_PARENT) == 0x0009A4, "Member 'ATheaterCamera_Blueprint_C::HexWorldLocFromBP_Hex_PARENT' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, MaxCameraDistance) == 0x0009B0, "Member 'ATheaterCamera_Blueprint_C::MaxCameraDistance' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, HighestXMinusValue) == 0x0009B4, "Member 'ATheaterCamera_Blueprint_C::HighestXMinusValue' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, HighestYMinusValue) == 0x0009B8, "Member 'ATheaterCamera_Blueprint_C::HighestYMinusValue' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, TotalWidthOfHexPlane) == 0x0009BC, "Member 'ATheaterCamera_Blueprint_C::TotalWidthOfHexPlane' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, HexPlaneBufferSize) == 0x0009C0, "Member 'ATheaterCamera_Blueprint_C::HexPlaneBufferSize' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, CenterLocOfAllHexes) == 0x0009C4, "Member 'ATheaterCamera_Blueprint_C::CenterLocOfAllHexes' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, RoadMaskLocations) == 0x0009D0, "Member 'ATheaterCamera_Blueprint_C::RoadMaskLocations' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, TileType0MinusLocs) == 0x0009E0, "Member 'ATheaterCamera_Blueprint_C::TileType0MinusLocs' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, TileType1MinusLocs) == 0x0009F0, "Member 'ATheaterCamera_Blueprint_C::TileType1MinusLocs' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, TileType2MinusLocs) == 0x000A00, "Member 'ATheaterCamera_Blueprint_C::TileType2MinusLocs' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, TileTypeMaskScale) == 0x000A10, "Member 'ATheaterCamera_Blueprint_C::TileTypeMaskScale' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, bSuspendInput) == 0x000A14, "Member 'ATheaterCamera_Blueprint_C::bSuspendInput' has a wrong offset!");
static_assert(offsetof(ATheaterCamera_Blueprint_C, LastZoomButtonHeldTime) == 0x000A18, "Member 'ATheaterCamera_Blueprint_C::LastZoomButtonHeldTime' has a wrong offset!");

}

