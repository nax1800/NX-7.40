#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ItemReceivedTwitchHeader

#include "Basic.hpp"

#include "ItemReceivedHeaderSubWidgetBase_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ItemReceivedTwitchHeader.ItemReceivedTwitchHeader_C
// 0x0028 (0x0290 - 0x0268)
class UItemReceivedTwitchHeader_C final : public UItemReceivedHeaderSubWidgetBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_ItemReceivedTwitchHeader_C;         // 0x0268(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCommonTextBlock*                       CommonTextBlock_Message;                           // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Header;                                            // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ImageTwitchIcon;                                   // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          Is_BattlePass;                                     // 0x0288(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_ItemReceivedTwitchHeader(int32 EntryPoint);
	void InitFromGiftBoxItem_BP();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ItemReceivedTwitchHeader_C">();
	}
	static class UItemReceivedTwitchHeader_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemReceivedTwitchHeader_C>();
	}
};
static_assert(alignof(UItemReceivedTwitchHeader_C) == 0x000008, "Wrong alignment on UItemReceivedTwitchHeader_C");
static_assert(sizeof(UItemReceivedTwitchHeader_C) == 0x000290, "Wrong size on UItemReceivedTwitchHeader_C");
static_assert(offsetof(UItemReceivedTwitchHeader_C, UberGraphFrame_ItemReceivedTwitchHeader_C) == 0x000268, "Member 'UItemReceivedTwitchHeader_C::UberGraphFrame_ItemReceivedTwitchHeader_C' has a wrong offset!");
static_assert(offsetof(UItemReceivedTwitchHeader_C, CommonTextBlock_Message) == 0x000270, "Member 'UItemReceivedTwitchHeader_C::CommonTextBlock_Message' has a wrong offset!");
static_assert(offsetof(UItemReceivedTwitchHeader_C, Header) == 0x000278, "Member 'UItemReceivedTwitchHeader_C::Header' has a wrong offset!");
static_assert(offsetof(UItemReceivedTwitchHeader_C, ImageTwitchIcon) == 0x000280, "Member 'UItemReceivedTwitchHeader_C::ImageTwitchIcon' has a wrong offset!");
static_assert(offsetof(UItemReceivedTwitchHeader_C, Is_BattlePass) == 0x000288, "Member 'UItemReceivedTwitchHeader_C::Is_BattlePass' has a wrong offset!");

}

