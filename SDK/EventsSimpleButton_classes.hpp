#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EventsSimpleButton

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "CommonUI_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass EventsSimpleButton.EventsSimpleButton_C
// 0x00C8 (0x0BF8 - 0x0B30)
class UEventsSimpleButton_C final : public UCommonButton
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0B30(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Pressed;                                           // 0x0B38(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Hover;                                             // 0x0B40(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCommonTextBlock*                       CenterButtonTextWidget;                            // 0x0B48(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_ButtonTop;                                   // 0x0B50(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Shadow;                                      // 0x0B58(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_ButtonBG;                                  // 0x0B60(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          ToUpper;                                           // 0x0B68(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          XL;                                                // 0x0B69(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B6A[0x6];                                      // 0x0B6A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ButtonNameText;                                    // 0x0B70(0x0018)(Edit, BlueprintVisible)
	TMap<class FString, struct FLinearColor>      Color;                                             // 0x0B88(0x0050)(Edit, BlueprintVisible, ZeroConstructor)
	struct FLinearColor                           GamepadButtonTextColor;                            // 0x0BD8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DefaultTextColor;                                  // 0x0BE8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_EventsSimpleButton(int32 EntryPoint);
	void InputTypeChanged(bool bUsingGamepad);
	void PreConstruct(bool IsDesignTime);
	void BndEvt__CommonActionWidgetAction_K2Node_ComponentBoundEvent_0_OnInputMethodChanged__DelegateSignature(bool bUsingGamepad);
	void BP_OnClicked();
	void BP_OnUnhovered();
	void BP_OnHovered();
	void Construct();
	struct FEventReply OnMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	struct FEventReply OnMouseButtonUp(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"EventsSimpleButton_C">();
	}
	static class UEventsSimpleButton_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEventsSimpleButton_C>();
	}
};
static_assert(alignof(UEventsSimpleButton_C) == 0x000008, "Wrong alignment on UEventsSimpleButton_C");
static_assert(sizeof(UEventsSimpleButton_C) == 0x000BF8, "Wrong size on UEventsSimpleButton_C");
static_assert(offsetof(UEventsSimpleButton_C, UberGraphFrame) == 0x000B30, "Member 'UEventsSimpleButton_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UEventsSimpleButton_C, Pressed) == 0x000B38, "Member 'UEventsSimpleButton_C::Pressed' has a wrong offset!");
static_assert(offsetof(UEventsSimpleButton_C, Hover) == 0x000B40, "Member 'UEventsSimpleButton_C::Hover' has a wrong offset!");
static_assert(offsetof(UEventsSimpleButton_C, CenterButtonTextWidget) == 0x000B48, "Member 'UEventsSimpleButton_C::CenterButtonTextWidget' has a wrong offset!");
static_assert(offsetof(UEventsSimpleButton_C, Image_ButtonTop) == 0x000B50, "Member 'UEventsSimpleButton_C::Image_ButtonTop' has a wrong offset!");
static_assert(offsetof(UEventsSimpleButton_C, Image_Shadow) == 0x000B58, "Member 'UEventsSimpleButton_C::Image_Shadow' has a wrong offset!");
static_assert(offsetof(UEventsSimpleButton_C, Overlay_ButtonBG) == 0x000B60, "Member 'UEventsSimpleButton_C::Overlay_ButtonBG' has a wrong offset!");
static_assert(offsetof(UEventsSimpleButton_C, ToUpper) == 0x000B68, "Member 'UEventsSimpleButton_C::ToUpper' has a wrong offset!");
static_assert(offsetof(UEventsSimpleButton_C, XL) == 0x000B69, "Member 'UEventsSimpleButton_C::XL' has a wrong offset!");
static_assert(offsetof(UEventsSimpleButton_C, ButtonNameText) == 0x000B70, "Member 'UEventsSimpleButton_C::ButtonNameText' has a wrong offset!");
static_assert(offsetof(UEventsSimpleButton_C, Color) == 0x000B88, "Member 'UEventsSimpleButton_C::Color' has a wrong offset!");
static_assert(offsetof(UEventsSimpleButton_C, GamepadButtonTextColor) == 0x000BD8, "Member 'UEventsSimpleButton_C::GamepadButtonTextColor' has a wrong offset!");
static_assert(offsetof(UEventsSimpleButton_C, DefaultTextColor) == 0x000BE8, "Member 'UEventsSimpleButton_C::DefaultTextColor' has a wrong offset!");

}

