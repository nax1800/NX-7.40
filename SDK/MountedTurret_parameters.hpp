#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MountedTurret

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "CommonInput_structs.hpp"


namespace SDK::Params
{

// Function MountedTurret.MountedTurret_C.ExecuteUbergraph_MountedTurret
// 0x0638 (0x0638 - 0x0000)
struct MountedTurret_C_ExecuteUbergraph_MountedTurret final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName24;                   // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName23;                   // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate1;             // 0x0024(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName22;                   // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate2;             // 0x003C(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName21;                   // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate3;             // 0x0054(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName20;                   // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate4;             // 0x006C(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable;                                // 0x007C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable1;                               // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86[0x2];                                       // 0x0086(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable1;                              // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName19;                   // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate5;             // 0x0098(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName18;                   // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate6;             // 0x00B0(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName17;                   // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate7;             // 0x00C8(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName16;                   // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate8;             // 0x00E0(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName15;                   // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate9;             // 0x00F8(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable1;                               // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate10;            // 0x0110(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName14;                   // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName13;                   // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate11;            // 0x0130(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName12;                   // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate12;            // 0x0148(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName11;                   // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate13;            // 0x0160(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName10;                   // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate14;            // 0x0178(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable2;                               // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate15;            // 0x0190(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName9;                    // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName8;                    // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate16;            // 0x01B0(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName7;                    // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate17;            // 0x01C8(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName6;                    // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate18;            // 0x01E0(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName5;                    // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate19;            // 0x01F8(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable3;                               // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate20;            // 0x0210(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName4;                    // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName3;                    // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate21;            // 0x0230(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName2;                    // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate22;            // 0x0248(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName1;                    // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate23;            // 0x0260(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate24;            // 0x0278(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable4;                               // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_291[0x3];                                      // 0x0291(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName28;                   // 0x0294(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x029C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue1;                // 0x029D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29E[0x2];                                      // 0x029E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Damage;                               // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A4[0x4];                                      // 0x02A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  K2Node_Event_DamageTags;                           // 0x02A8(0x0020)(ConstParm)
	struct FVector                                K2Node_Event_Momentum;                             // 0x02C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_HitInfo;                              // 0x02D4(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_35C[0x4];                                      // 0x035C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPawn*                              K2Node_Event_InstigatedBy;                         // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           K2Node_Event_EffectContext;                        // 0x0370(0x0018)()
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0388(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue1;         // 0x0394(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A1[0x7];                                      // 0x03A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        K2Node_Event_PlayerPawn1;                          // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_SeatIdx;                              // 0x03B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable1;                // 0x03B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B5[0x3];                                      // 0x03B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x03B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOperatingTurret_ReturnValue;            // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x03C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C2[0x6];                                      // 0x03C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        K2Node_Event_PlayerPawn;                           // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_ExitSocketName;                       // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue1;   // 0x03D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x03E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x03E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E2[0x2];                                      // 0x03E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate25;            // 0x03E4(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable5;                               // 0x03F4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_ApplyGlobalEnvironmentGameplayEffectToActor_ReturnValue; // 0x03FC(0x0008)(NoDestructor, HasGetValueTypeHash)
	EDualWeaponHand                               K2Node_CustomEvent_Hand;                           // 0x0404(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bPersistantFire;                // 0x0405(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0406(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_407[0x1];                                      // 0x0407(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_MountedTurretAthena_C*               K2Node_DynamicCast_AsB_Mounted_Turret_Athena;      // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0410(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_411[0x7];                                      // 0x0411(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeGameplayTagContainerFromTag_ReturnValue; // 0x0418(0x0020)()
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue; // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Hide;                           // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0441(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_442[0x2];                                      // 0x0442(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName29;                   // 0x0444(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x044C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44D[0x3];                                      // 0x044D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerControllerGameplay*          K2Node_DynamicCast_AsFort_Player_Controller_Gameplay; // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0460(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_461[0x3];                                      // 0x0461(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName25;                   // 0x0464(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable1;                      // 0x046C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RemoveActiveGameplayEffect_ReturnValue;   // 0x046D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46E[0x2];                                      // 0x046E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate26;            // 0x0470(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue1;           // 0x0480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_481[0x7];                                      // 0x0481(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEffectContextHandle           K2Node_MakeStruct_GameplayEffectContextHandle;     // 0x0488(0x0018)()
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue; // 0x04A0(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate27;            // 0x04A8(0x0010)(ZeroConstructor, NoDestructor)
	class UAnimMontage*                           K2Node_Select_Default;                             // 0x04B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue1; // 0x04C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x04C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x04C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4CA[0x2];                                      // 0x04CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate28;            // 0x04CC(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsMobilePlatform_ReturnValue;             // 0x04DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DD[0x3];                                      // 0x04DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue;     // 0x04E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue1;    // 0x04EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select1_Default;                            // 0x04F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FC[0x4];                                      // 0x04FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0500(0x0008)(NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName26;                   // 0x0508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x0510(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51C[0x4];                                      // 0x051C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0520(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue1;          // 0x0528(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0534(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue4;                     // 0x0540(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_541[0x3];                                      // 0x0541(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0544(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeUnclamped_ReturnValue;            // 0x0548(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x054C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_54D[0x3];                                      // 0x054D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate29;            // 0x0550(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_CurrentOverheatScalar_ReturnValue;        // 0x0560(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0564(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue1;     // 0x0565(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_566[0x2];                                      // 0x0566(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_CurrentOverheatScalar_ReturnValue1;       // 0x0568(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CurrentOverheatScalar_ReturnValue2;       // 0x056C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0570(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0574(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayLength_ReturnValue;                // 0x0580(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EDualWeaponHand Hand, bool bPersistantFire)> K2Node_CreateDelegate_OutputDelegate30;            // 0x0584(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_594[0x4];                                      // 0x0594(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue2; // 0x0598(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue3; // 0x05A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue5;                     // 0x05A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue6;                     // 0x05A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5AA[0x2];                                      // 0x05AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate31;            // 0x05AC(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_5BC[0x4];                                      // 0x05BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue1;         // 0x05C0(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x05C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x05D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D4[0x4];                                      // 0x05D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimBP_MountedTurret_C*                K2Node_DynamicCast_AsAnim_BP_Mounted_Turret;       // 0x05D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x05E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E1[0x3];                                      // 0x05E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x05E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeAxis_ReturnValue;                // 0x05E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x05EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue4; // 0x05F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName27;                   // 0x05F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue7;                     // 0x0600(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_601[0x7];                                      // 0x0601(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue5; // 0x0608(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0610(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue8;                     // 0x0614(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_615[0x3];                                      // 0x0615(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue2;   // 0x0618(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue9;                     // 0x0620(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RemoveActiveGameplayEffect_ReturnValue1;  // 0x0621(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_622[0x2];                                      // 0x0622(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate32;            // 0x0624(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsPlaying_ReturnValue1;                   // 0x0634(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MountedTurret_C_ExecuteUbergraph_MountedTurret) == 0x000008, "Wrong alignment on MountedTurret_C_ExecuteUbergraph_MountedTurret");
static_assert(sizeof(MountedTurret_C_ExecuteUbergraph_MountedTurret) == 0x000638, "Wrong size on MountedTurret_C_ExecuteUbergraph_MountedTurret");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, EntryPoint) == 0x000000, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::EntryPoint' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_NotifyName24) == 0x000004, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_NotifyName24' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_NotifyName23) == 0x00001C, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_NotifyName23' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CreateDelegate_OutputDelegate1) == 0x000024, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_NotifyName22) == 0x000034, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_NotifyName22' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CreateDelegate_OutputDelegate2) == 0x00003C, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_NotifyName21) == 0x00004C, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_NotifyName21' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CreateDelegate_OutputDelegate3) == 0x000054, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_NotifyName20) == 0x000064, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_NotifyName20' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CreateDelegate_OutputDelegate4) == 0x00006C, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CreateDelegate_OutputDelegate4' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, Temp_name_Variable) == 0x00007C, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, Temp_bool_Variable) == 0x000084, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, Temp_bool_Variable1) == 0x000085, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, Temp_float_Variable) == 0x000088, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, Temp_float_Variable1) == 0x00008C, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::Temp_float_Variable1' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_NotifyName19) == 0x000090, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_NotifyName19' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CreateDelegate_OutputDelegate5) == 0x000098, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CreateDelegate_OutputDelegate5' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_NotifyName18) == 0x0000A8, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_NotifyName18' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CreateDelegate_OutputDelegate6) == 0x0000B0, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CreateDelegate_OutputDelegate6' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_NotifyName17) == 0x0000C0, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_NotifyName17' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CreateDelegate_OutputDelegate7) == 0x0000C8, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CreateDelegate_OutputDelegate7' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_NotifyName16) == 0x0000D8, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_NotifyName16' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CreateDelegate_OutputDelegate8) == 0x0000E0, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CreateDelegate_OutputDelegate8' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_NotifyName15) == 0x0000F0, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_NotifyName15' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CreateDelegate_OutputDelegate9) == 0x0000F8, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CreateDelegate_OutputDelegate9' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, Temp_name_Variable1) == 0x000108, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::Temp_name_Variable1' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CreateDelegate_OutputDelegate10) == 0x000110, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CreateDelegate_OutputDelegate10' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_NotifyName14) == 0x000120, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_NotifyName14' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_NotifyName13) == 0x000128, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_NotifyName13' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CreateDelegate_OutputDelegate11) == 0x000130, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CreateDelegate_OutputDelegate11' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_NotifyName12) == 0x000140, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_NotifyName12' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CreateDelegate_OutputDelegate12) == 0x000148, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CreateDelegate_OutputDelegate12' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_NotifyName11) == 0x000158, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_NotifyName11' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CreateDelegate_OutputDelegate13) == 0x000160, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CreateDelegate_OutputDelegate13' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_NotifyName10) == 0x000170, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_NotifyName10' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CreateDelegate_OutputDelegate14) == 0x000178, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CreateDelegate_OutputDelegate14' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, Temp_name_Variable2) == 0x000188, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::Temp_name_Variable2' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CreateDelegate_OutputDelegate15) == 0x000190, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CreateDelegate_OutputDelegate15' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_NotifyName9) == 0x0001A0, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_NotifyName9' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_NotifyName8) == 0x0001A8, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_NotifyName8' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CreateDelegate_OutputDelegate16) == 0x0001B0, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CreateDelegate_OutputDelegate16' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_NotifyName7) == 0x0001C0, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_NotifyName7' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CreateDelegate_OutputDelegate17) == 0x0001C8, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CreateDelegate_OutputDelegate17' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_NotifyName6) == 0x0001D8, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_NotifyName6' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CreateDelegate_OutputDelegate18) == 0x0001E0, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CreateDelegate_OutputDelegate18' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_NotifyName5) == 0x0001F0, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_NotifyName5' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CreateDelegate_OutputDelegate19) == 0x0001F8, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CreateDelegate_OutputDelegate19' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, Temp_name_Variable3) == 0x000208, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::Temp_name_Variable3' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CreateDelegate_OutputDelegate20) == 0x000210, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CreateDelegate_OutputDelegate20' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_NotifyName4) == 0x000220, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_NotifyName4' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_NotifyName3) == 0x000228, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_NotifyName3' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CreateDelegate_OutputDelegate21) == 0x000230, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CreateDelegate_OutputDelegate21' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_NotifyName2) == 0x000240, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_NotifyName2' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CreateDelegate_OutputDelegate22) == 0x000248, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CreateDelegate_OutputDelegate22' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_NotifyName1) == 0x000258, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_NotifyName1' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CreateDelegate_OutputDelegate23) == 0x000260, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CreateDelegate_OutputDelegate23' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_NotifyName) == 0x000270, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CreateDelegate_OutputDelegate24) == 0x000278, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CreateDelegate_OutputDelegate24' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, Temp_name_Variable4) == 0x000288, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::Temp_name_Variable4' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, Temp_bool_Has_Been_Initd_Variable) == 0x000290, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_NotifyName28) == 0x000294, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_NotifyName28' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_HasAuthority_ReturnValue) == 0x00029C, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_HasAuthority_ReturnValue1) == 0x00029D, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_HasAuthority_ReturnValue1' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_Event_Damage) == 0x0002A0, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_Event_DamageTags) == 0x0002A8, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_Event_DamageTags' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_Event_Momentum) == 0x0002C8, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_Event_Momentum' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_Event_HitInfo) == 0x0002D4, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_Event_HitInfo' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_Event_InstigatedBy) == 0x000360, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_Event_InstigatedBy' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_Event_DamageCauser) == 0x000368, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_Event_EffectContext) == 0x000370, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_Event_EffectContext' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000388, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_K2_GetActorLocation_ReturnValue1) == 0x000394, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_K2_GetActorLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, Temp_bool_IsClosed_Variable) == 0x0003A0, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_Event_PlayerPawn1) == 0x0003A8, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_Event_PlayerPawn1' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_Event_SeatIdx) == 0x0003B0, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_Event_SeatIdx' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, Temp_bool_Has_Been_Initd_Variable1) == 0x0003B4, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::Temp_bool_Has_Been_Initd_Variable1' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x0003B8, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_IsOperatingTurret_ReturnValue) == 0x0003C0, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_IsOperatingTurret_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_IsLocallyControlled_ReturnValue) == 0x0003C1, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_Event_PlayerPawn) == 0x0003C8, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_Event_PlayerPawn' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_Event_ExitSocketName) == 0x0003D0, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_Event_ExitSocketName' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_GetAbilitySystemComponent_ReturnValue1) == 0x0003D8, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_GetAbilitySystemComponent_ReturnValue1' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_Event_EndPlayReason) == 0x0003E0, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_IsDedicatedServer_ReturnValue) == 0x0003E1, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CreateDelegate_OutputDelegate25) == 0x0003E4, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CreateDelegate_OutputDelegate25' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, Temp_name_Variable5) == 0x0003F4, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::Temp_name_Variable5' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_ApplyGlobalEnvironmentGameplayEffectToActor_ReturnValue) == 0x0003FC, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_ApplyGlobalEnvironmentGameplayEffectToActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_Hand) == 0x000404, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_Hand' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_bPersistantFire) == 0x000405, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_bPersistantFire' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000406, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_DynamicCast_AsB_Mounted_Turret_Athena) == 0x000408, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_DynamicCast_AsB_Mounted_Turret_Athena' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_DynamicCast_bSuccess) == 0x000410, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_MakeGameplayTagContainerFromTag_ReturnValue) == 0x000418, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_MakeGameplayTagContainerFromTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue) == 0x000438, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_Hide) == 0x000440, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_Hide' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_IsValid_ReturnValue) == 0x000441, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_NotifyName29) == 0x000444, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_NotifyName29' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_IsValid_ReturnValue1) == 0x00044C, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_GetController_ReturnValue) == 0x000450, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_DynamicCast_AsFort_Player_Controller_Gameplay) == 0x000458, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_DynamicCast_AsFort_Player_Controller_Gameplay' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_DynamicCast_bSuccess1) == 0x000460, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_NotifyName25) == 0x000464, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_NotifyName25' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, Temp_bool_IsClosed_Variable1) == 0x00046C, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::Temp_bool_IsClosed_Variable1' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_RemoveActiveGameplayEffect_ReturnValue) == 0x00046D, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_RemoveActiveGameplayEffect_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CreateDelegate_OutputDelegate26) == 0x000470, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CreateDelegate_OutputDelegate26' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_IsDedicatedServer_ReturnValue1) == 0x000480, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_IsDedicatedServer_ReturnValue1' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_MakeStruct_GameplayEffectContextHandle) == 0x000488, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_MakeStruct_GameplayEffectContextHandle' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue) == 0x0004A0, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CreateDelegate_OutputDelegate27) == 0x0004A8, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CreateDelegate_OutputDelegate27' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_Select_Default) == 0x0004B8, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue1) == 0x0004C0, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue1' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_IsValid_ReturnValue2) == 0x0004C8, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_IsValid_ReturnValue3) == 0x0004C9, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CreateDelegate_OutputDelegate28) == 0x0004CC, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CreateDelegate_OutputDelegate28' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_IsMobilePlatform_ReturnValue) == 0x0004DC, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_IsMobilePlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_Conv_LinearColorToVector_ReturnValue) == 0x0004E0, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_Conv_LinearColorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_Conv_LinearColorToVector_ReturnValue1) == 0x0004EC, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_Conv_LinearColorToVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_Select1_Default) == 0x0004F8, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000500, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_NotifyName26) == 0x000508, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_NotifyName26' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_GetControlRotation_ReturnValue) == 0x000510, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000520, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_GetControlRotation_ReturnValue1) == 0x000528, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_GetControlRotation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000534, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_IsValid_ReturnValue4) == 0x000540, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_IsValid_ReturnValue4' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_Abs_ReturnValue) == 0x000544, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_MapRangeUnclamped_ReturnValue) == 0x000548, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_MapRangeUnclamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_IsPlaying_ReturnValue) == 0x00054C, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CreateDelegate_OutputDelegate29) == 0x000550, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CreateDelegate_OutputDelegate29' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_CurrentOverheatScalar_ReturnValue) == 0x000560, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_CurrentOverheatScalar_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000564, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_GreaterEqual_FloatFloat_ReturnValue1) == 0x000565, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_GreaterEqual_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_CurrentOverheatScalar_ReturnValue1) == 0x000568, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_CurrentOverheatScalar_ReturnValue1' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_CurrentOverheatScalar_ReturnValue2) == 0x00056C, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_CurrentOverheatScalar_ReturnValue2' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000570, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_VLerp_ReturnValue) == 0x000574, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_GetPlayLength_ReturnValue) == 0x000580, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_GetPlayLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CreateDelegate_OutputDelegate30) == 0x000584, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CreateDelegate_OutputDelegate30' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue2) == 0x000598, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue2' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue3) == 0x0005A0, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue3' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_IsValid_ReturnValue5) == 0x0005A8, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_IsValid_ReturnValue5' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_IsValid_ReturnValue6) == 0x0005A9, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_IsValid_ReturnValue6' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CreateDelegate_OutputDelegate31) == 0x0005AC, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CreateDelegate_OutputDelegate31' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_K2_SetTimerDelegate_ReturnValue1) == 0x0005C0, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_K2_SetTimerDelegate_ReturnValue1' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_GetAnimInstance_ReturnValue) == 0x0005C8, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0005D0, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_DynamicCast_AsAnim_BP_Mounted_Turret) == 0x0005D8, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_DynamicCast_AsAnim_BP_Mounted_Turret' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_DynamicCast_bSuccess2) == 0x0005E0, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_GetFloatValue_ReturnValue) == 0x0005E4, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_NormalizeAxis_ReturnValue) == 0x0005E8, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_NormalizeAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_MapRangeClamped_ReturnValue) == 0x0005EC, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue4) == 0x0005F0, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue4' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CustomEvent_NotifyName27) == 0x0005F8, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CustomEvent_NotifyName27' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_IsValid_ReturnValue7) == 0x000600, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_IsValid_ReturnValue7' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue5) == 0x000608, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue5' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_Add_FloatFloat_ReturnValue) == 0x000610, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_IsValid_ReturnValue8) == 0x000614, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_IsValid_ReturnValue8' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_GetAbilitySystemComponent_ReturnValue2) == 0x000618, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_GetAbilitySystemComponent_ReturnValue2' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_IsValid_ReturnValue9) == 0x000620, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_IsValid_ReturnValue9' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_RemoveActiveGameplayEffect_ReturnValue1) == 0x000621, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_RemoveActiveGameplayEffect_ReturnValue1' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, K2Node_CreateDelegate_OutputDelegate32) == 0x000624, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::K2Node_CreateDelegate_OutputDelegate32' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_ExecuteUbergraph_MountedTurret, CallFunc_IsPlaying_ReturnValue1) == 0x000634, "Member 'MountedTurret_C_ExecuteUbergraph_MountedTurret::CallFunc_IsPlaying_ReturnValue1' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.HideQuickBarForAbility
// 0x0001 (0x0001 - 0x0000)
struct MountedTurret_C_HideQuickBarForAbility final
{
public:
	bool                                          Hide;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MountedTurret_C_HideQuickBarForAbility) == 0x000001, "Wrong alignment on MountedTurret_C_HideQuickBarForAbility");
static_assert(sizeof(MountedTurret_C_HideQuickBarForAbility) == 0x000001, "Wrong size on MountedTurret_C_HideQuickBarForAbility");
static_assert(offsetof(MountedTurret_C_HideQuickBarForAbility, Hide) == 0x000000, "Member 'MountedTurret_C_HideQuickBarForAbility::Hide' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.Event On Weapon Fired
// 0x0002 (0x0002 - 0x0000)
struct MountedTurret_C_Event_On_Weapon_Fired final
{
public:
	EDualWeaponHand                               Hand;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPersistantFire;                                   // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MountedTurret_C_Event_On_Weapon_Fired) == 0x000001, "Wrong alignment on MountedTurret_C_Event_On_Weapon_Fired");
static_assert(sizeof(MountedTurret_C_Event_On_Weapon_Fired) == 0x000002, "Wrong size on MountedTurret_C_Event_On_Weapon_Fired");
static_assert(offsetof(MountedTurret_C_Event_On_Weapon_Fired, Hand) == 0x000000, "Member 'MountedTurret_C_Event_On_Weapon_Fired::Hand' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_Event_On_Weapon_Fired, bPersistantFire) == 0x000001, "Member 'MountedTurret_C_Event_On_Weapon_Fired::bPersistantFire' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct MountedTurret_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on MountedTurret_C_ReceiveEndPlay");
static_assert(sizeof(MountedTurret_C_ReceiveEndPlay) == 0x000001, "Wrong size on MountedTurret_C_ReceiveEndPlay");
static_assert(offsetof(MountedTurret_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'MountedTurret_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnPawnExitVehicle
// 0x0010 (0x0010 - 0x0000)
struct MountedTurret_C_OnPawnExitVehicle final
{
public:
	class AFortPlayerPawn*                        PlayerPawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ExitSocketName;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_OnPawnExitVehicle) == 0x000008, "Wrong alignment on MountedTurret_C_OnPawnExitVehicle");
static_assert(sizeof(MountedTurret_C_OnPawnExitVehicle) == 0x000010, "Wrong size on MountedTurret_C_OnPawnExitVehicle");
static_assert(offsetof(MountedTurret_C_OnPawnExitVehicle, PlayerPawn) == 0x000000, "Member 'MountedTurret_C_OnPawnExitVehicle::PlayerPawn' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_OnPawnExitVehicle, ExitSocketName) == 0x000008, "Member 'MountedTurret_C_OnPawnExitVehicle::ExitSocketName' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnPawnEnterVehicle
// 0x0010 (0x0010 - 0x0000)
struct MountedTurret_C_OnPawnEnterVehicle final
{
public:
	class AFortPlayerPawn*                        PlayerPawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SeatIdx;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_OnPawnEnterVehicle) == 0x000008, "Wrong alignment on MountedTurret_C_OnPawnEnterVehicle");
static_assert(sizeof(MountedTurret_C_OnPawnEnterVehicle) == 0x000010, "Wrong size on MountedTurret_C_OnPawnEnterVehicle");
static_assert(offsetof(MountedTurret_C_OnPawnEnterVehicle, PlayerPawn) == 0x000000, "Member 'MountedTurret_C_OnPawnEnterVehicle::PlayerPawn' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_OnPawnEnterVehicle, SeatIdx) == 0x000008, "Member 'MountedTurret_C_OnPawnEnterVehicle::SeatIdx' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnDeathPlayEffects
// 0x00E8 (0x00E8 - 0x0000)
struct MountedTurret_C_OnDeathPlayEffects final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  DamageTags;                                        // 0x0008(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                Momentum;                                          // 0x0028(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitInfo;                                           // 0x0034(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPawn*                              InstigatedBy;                                      // 0x00C0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x00C8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           EffectContext;                                     // 0x00D0(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(MountedTurret_C_OnDeathPlayEffects) == 0x000008, "Wrong alignment on MountedTurret_C_OnDeathPlayEffects");
static_assert(sizeof(MountedTurret_C_OnDeathPlayEffects) == 0x0000E8, "Wrong size on MountedTurret_C_OnDeathPlayEffects");
static_assert(offsetof(MountedTurret_C_OnDeathPlayEffects, Damage) == 0x000000, "Member 'MountedTurret_C_OnDeathPlayEffects::Damage' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_OnDeathPlayEffects, DamageTags) == 0x000008, "Member 'MountedTurret_C_OnDeathPlayEffects::DamageTags' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_OnDeathPlayEffects, Momentum) == 0x000028, "Member 'MountedTurret_C_OnDeathPlayEffects::Momentum' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_OnDeathPlayEffects, HitInfo) == 0x000034, "Member 'MountedTurret_C_OnDeathPlayEffects::HitInfo' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_OnDeathPlayEffects, InstigatedBy) == 0x0000C0, "Member 'MountedTurret_C_OnDeathPlayEffects::InstigatedBy' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_OnDeathPlayEffects, DamageCauser) == 0x0000C8, "Member 'MountedTurret_C_OnDeathPlayEffects::DamageCauser' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_OnDeathPlayEffects, EffectContext) == 0x0000D0, "Member 'MountedTurret_C_OnDeathPlayEffects::EffectContext' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnCompleted_DC5D83234D74654A536804AC35F92FE4
// 0x0008 (0x0008 - 0x0000)
struct MountedTurret_C_OnCompleted_DC5D83234D74654A536804AC35F92FE4 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_OnCompleted_DC5D83234D74654A536804AC35F92FE4) == 0x000004, "Wrong alignment on MountedTurret_C_OnCompleted_DC5D83234D74654A536804AC35F92FE4");
static_assert(sizeof(MountedTurret_C_OnCompleted_DC5D83234D74654A536804AC35F92FE4) == 0x000008, "Wrong size on MountedTurret_C_OnCompleted_DC5D83234D74654A536804AC35F92FE4");
static_assert(offsetof(MountedTurret_C_OnCompleted_DC5D83234D74654A536804AC35F92FE4, NotifyName) == 0x000000, "Member 'MountedTurret_C_OnCompleted_DC5D83234D74654A536804AC35F92FE4::NotifyName' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnBlendOut_DC5D83234D74654A536804AC35F92FE4
// 0x0008 (0x0008 - 0x0000)
struct MountedTurret_C_OnBlendOut_DC5D83234D74654A536804AC35F92FE4 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_OnBlendOut_DC5D83234D74654A536804AC35F92FE4) == 0x000004, "Wrong alignment on MountedTurret_C_OnBlendOut_DC5D83234D74654A536804AC35F92FE4");
static_assert(sizeof(MountedTurret_C_OnBlendOut_DC5D83234D74654A536804AC35F92FE4) == 0x000008, "Wrong size on MountedTurret_C_OnBlendOut_DC5D83234D74654A536804AC35F92FE4");
static_assert(offsetof(MountedTurret_C_OnBlendOut_DC5D83234D74654A536804AC35F92FE4, NotifyName) == 0x000000, "Member 'MountedTurret_C_OnBlendOut_DC5D83234D74654A536804AC35F92FE4::NotifyName' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnInterrupted_DC5D83234D74654A536804AC35F92FE4
// 0x0008 (0x0008 - 0x0000)
struct MountedTurret_C_OnInterrupted_DC5D83234D74654A536804AC35F92FE4 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_OnInterrupted_DC5D83234D74654A536804AC35F92FE4) == 0x000004, "Wrong alignment on MountedTurret_C_OnInterrupted_DC5D83234D74654A536804AC35F92FE4");
static_assert(sizeof(MountedTurret_C_OnInterrupted_DC5D83234D74654A536804AC35F92FE4) == 0x000008, "Wrong size on MountedTurret_C_OnInterrupted_DC5D83234D74654A536804AC35F92FE4");
static_assert(offsetof(MountedTurret_C_OnInterrupted_DC5D83234D74654A536804AC35F92FE4, NotifyName) == 0x000000, "Member 'MountedTurret_C_OnInterrupted_DC5D83234D74654A536804AC35F92FE4::NotifyName' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnNotifyBegin_DC5D83234D74654A536804AC35F92FE4
// 0x0008 (0x0008 - 0x0000)
struct MountedTurret_C_OnNotifyBegin_DC5D83234D74654A536804AC35F92FE4 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_OnNotifyBegin_DC5D83234D74654A536804AC35F92FE4) == 0x000004, "Wrong alignment on MountedTurret_C_OnNotifyBegin_DC5D83234D74654A536804AC35F92FE4");
static_assert(sizeof(MountedTurret_C_OnNotifyBegin_DC5D83234D74654A536804AC35F92FE4) == 0x000008, "Wrong size on MountedTurret_C_OnNotifyBegin_DC5D83234D74654A536804AC35F92FE4");
static_assert(offsetof(MountedTurret_C_OnNotifyBegin_DC5D83234D74654A536804AC35F92FE4, NotifyName) == 0x000000, "Member 'MountedTurret_C_OnNotifyBegin_DC5D83234D74654A536804AC35F92FE4::NotifyName' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnNotifyEnd_DC5D83234D74654A536804AC35F92FE4
// 0x0008 (0x0008 - 0x0000)
struct MountedTurret_C_OnNotifyEnd_DC5D83234D74654A536804AC35F92FE4 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_OnNotifyEnd_DC5D83234D74654A536804AC35F92FE4) == 0x000004, "Wrong alignment on MountedTurret_C_OnNotifyEnd_DC5D83234D74654A536804AC35F92FE4");
static_assert(sizeof(MountedTurret_C_OnNotifyEnd_DC5D83234D74654A536804AC35F92FE4) == 0x000008, "Wrong size on MountedTurret_C_OnNotifyEnd_DC5D83234D74654A536804AC35F92FE4");
static_assert(offsetof(MountedTurret_C_OnNotifyEnd_DC5D83234D74654A536804AC35F92FE4, NotifyName) == 0x000000, "Member 'MountedTurret_C_OnNotifyEnd_DC5D83234D74654A536804AC35F92FE4::NotifyName' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnCompleted_1E67D99B41450F4F37BDBF8C6F8AAE0B
// 0x0008 (0x0008 - 0x0000)
struct MountedTurret_C_OnCompleted_1E67D99B41450F4F37BDBF8C6F8AAE0B final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_OnCompleted_1E67D99B41450F4F37BDBF8C6F8AAE0B) == 0x000004, "Wrong alignment on MountedTurret_C_OnCompleted_1E67D99B41450F4F37BDBF8C6F8AAE0B");
static_assert(sizeof(MountedTurret_C_OnCompleted_1E67D99B41450F4F37BDBF8C6F8AAE0B) == 0x000008, "Wrong size on MountedTurret_C_OnCompleted_1E67D99B41450F4F37BDBF8C6F8AAE0B");
static_assert(offsetof(MountedTurret_C_OnCompleted_1E67D99B41450F4F37BDBF8C6F8AAE0B, NotifyName) == 0x000000, "Member 'MountedTurret_C_OnCompleted_1E67D99B41450F4F37BDBF8C6F8AAE0B::NotifyName' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnBlendOut_1E67D99B41450F4F37BDBF8C6F8AAE0B
// 0x0008 (0x0008 - 0x0000)
struct MountedTurret_C_OnBlendOut_1E67D99B41450F4F37BDBF8C6F8AAE0B final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_OnBlendOut_1E67D99B41450F4F37BDBF8C6F8AAE0B) == 0x000004, "Wrong alignment on MountedTurret_C_OnBlendOut_1E67D99B41450F4F37BDBF8C6F8AAE0B");
static_assert(sizeof(MountedTurret_C_OnBlendOut_1E67D99B41450F4F37BDBF8C6F8AAE0B) == 0x000008, "Wrong size on MountedTurret_C_OnBlendOut_1E67D99B41450F4F37BDBF8C6F8AAE0B");
static_assert(offsetof(MountedTurret_C_OnBlendOut_1E67D99B41450F4F37BDBF8C6F8AAE0B, NotifyName) == 0x000000, "Member 'MountedTurret_C_OnBlendOut_1E67D99B41450F4F37BDBF8C6F8AAE0B::NotifyName' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnInterrupted_1E67D99B41450F4F37BDBF8C6F8AAE0B
// 0x0008 (0x0008 - 0x0000)
struct MountedTurret_C_OnInterrupted_1E67D99B41450F4F37BDBF8C6F8AAE0B final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_OnInterrupted_1E67D99B41450F4F37BDBF8C6F8AAE0B) == 0x000004, "Wrong alignment on MountedTurret_C_OnInterrupted_1E67D99B41450F4F37BDBF8C6F8AAE0B");
static_assert(sizeof(MountedTurret_C_OnInterrupted_1E67D99B41450F4F37BDBF8C6F8AAE0B) == 0x000008, "Wrong size on MountedTurret_C_OnInterrupted_1E67D99B41450F4F37BDBF8C6F8AAE0B");
static_assert(offsetof(MountedTurret_C_OnInterrupted_1E67D99B41450F4F37BDBF8C6F8AAE0B, NotifyName) == 0x000000, "Member 'MountedTurret_C_OnInterrupted_1E67D99B41450F4F37BDBF8C6F8AAE0B::NotifyName' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnNotifyBegin_1E67D99B41450F4F37BDBF8C6F8AAE0B
// 0x0008 (0x0008 - 0x0000)
struct MountedTurret_C_OnNotifyBegin_1E67D99B41450F4F37BDBF8C6F8AAE0B final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_OnNotifyBegin_1E67D99B41450F4F37BDBF8C6F8AAE0B) == 0x000004, "Wrong alignment on MountedTurret_C_OnNotifyBegin_1E67D99B41450F4F37BDBF8C6F8AAE0B");
static_assert(sizeof(MountedTurret_C_OnNotifyBegin_1E67D99B41450F4F37BDBF8C6F8AAE0B) == 0x000008, "Wrong size on MountedTurret_C_OnNotifyBegin_1E67D99B41450F4F37BDBF8C6F8AAE0B");
static_assert(offsetof(MountedTurret_C_OnNotifyBegin_1E67D99B41450F4F37BDBF8C6F8AAE0B, NotifyName) == 0x000000, "Member 'MountedTurret_C_OnNotifyBegin_1E67D99B41450F4F37BDBF8C6F8AAE0B::NotifyName' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnNotifyEnd_1E67D99B41450F4F37BDBF8C6F8AAE0B
// 0x0008 (0x0008 - 0x0000)
struct MountedTurret_C_OnNotifyEnd_1E67D99B41450F4F37BDBF8C6F8AAE0B final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_OnNotifyEnd_1E67D99B41450F4F37BDBF8C6F8AAE0B) == 0x000004, "Wrong alignment on MountedTurret_C_OnNotifyEnd_1E67D99B41450F4F37BDBF8C6F8AAE0B");
static_assert(sizeof(MountedTurret_C_OnNotifyEnd_1E67D99B41450F4F37BDBF8C6F8AAE0B) == 0x000008, "Wrong size on MountedTurret_C_OnNotifyEnd_1E67D99B41450F4F37BDBF8C6F8AAE0B");
static_assert(offsetof(MountedTurret_C_OnNotifyEnd_1E67D99B41450F4F37BDBF8C6F8AAE0B, NotifyName) == 0x000000, "Member 'MountedTurret_C_OnNotifyEnd_1E67D99B41450F4F37BDBF8C6F8AAE0B::NotifyName' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnCompleted_C545F8F445E4AE78043EFD8678F12483
// 0x0008 (0x0008 - 0x0000)
struct MountedTurret_C_OnCompleted_C545F8F445E4AE78043EFD8678F12483 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_OnCompleted_C545F8F445E4AE78043EFD8678F12483) == 0x000004, "Wrong alignment on MountedTurret_C_OnCompleted_C545F8F445E4AE78043EFD8678F12483");
static_assert(sizeof(MountedTurret_C_OnCompleted_C545F8F445E4AE78043EFD8678F12483) == 0x000008, "Wrong size on MountedTurret_C_OnCompleted_C545F8F445E4AE78043EFD8678F12483");
static_assert(offsetof(MountedTurret_C_OnCompleted_C545F8F445E4AE78043EFD8678F12483, NotifyName) == 0x000000, "Member 'MountedTurret_C_OnCompleted_C545F8F445E4AE78043EFD8678F12483::NotifyName' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnBlendOut_C545F8F445E4AE78043EFD8678F12483
// 0x0008 (0x0008 - 0x0000)
struct MountedTurret_C_OnBlendOut_C545F8F445E4AE78043EFD8678F12483 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_OnBlendOut_C545F8F445E4AE78043EFD8678F12483) == 0x000004, "Wrong alignment on MountedTurret_C_OnBlendOut_C545F8F445E4AE78043EFD8678F12483");
static_assert(sizeof(MountedTurret_C_OnBlendOut_C545F8F445E4AE78043EFD8678F12483) == 0x000008, "Wrong size on MountedTurret_C_OnBlendOut_C545F8F445E4AE78043EFD8678F12483");
static_assert(offsetof(MountedTurret_C_OnBlendOut_C545F8F445E4AE78043EFD8678F12483, NotifyName) == 0x000000, "Member 'MountedTurret_C_OnBlendOut_C545F8F445E4AE78043EFD8678F12483::NotifyName' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnInterrupted_C545F8F445E4AE78043EFD8678F12483
// 0x0008 (0x0008 - 0x0000)
struct MountedTurret_C_OnInterrupted_C545F8F445E4AE78043EFD8678F12483 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_OnInterrupted_C545F8F445E4AE78043EFD8678F12483) == 0x000004, "Wrong alignment on MountedTurret_C_OnInterrupted_C545F8F445E4AE78043EFD8678F12483");
static_assert(sizeof(MountedTurret_C_OnInterrupted_C545F8F445E4AE78043EFD8678F12483) == 0x000008, "Wrong size on MountedTurret_C_OnInterrupted_C545F8F445E4AE78043EFD8678F12483");
static_assert(offsetof(MountedTurret_C_OnInterrupted_C545F8F445E4AE78043EFD8678F12483, NotifyName) == 0x000000, "Member 'MountedTurret_C_OnInterrupted_C545F8F445E4AE78043EFD8678F12483::NotifyName' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnNotifyBegin_C545F8F445E4AE78043EFD8678F12483
// 0x0008 (0x0008 - 0x0000)
struct MountedTurret_C_OnNotifyBegin_C545F8F445E4AE78043EFD8678F12483 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_OnNotifyBegin_C545F8F445E4AE78043EFD8678F12483) == 0x000004, "Wrong alignment on MountedTurret_C_OnNotifyBegin_C545F8F445E4AE78043EFD8678F12483");
static_assert(sizeof(MountedTurret_C_OnNotifyBegin_C545F8F445E4AE78043EFD8678F12483) == 0x000008, "Wrong size on MountedTurret_C_OnNotifyBegin_C545F8F445E4AE78043EFD8678F12483");
static_assert(offsetof(MountedTurret_C_OnNotifyBegin_C545F8F445E4AE78043EFD8678F12483, NotifyName) == 0x000000, "Member 'MountedTurret_C_OnNotifyBegin_C545F8F445E4AE78043EFD8678F12483::NotifyName' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnNotifyEnd_C545F8F445E4AE78043EFD8678F12483
// 0x0008 (0x0008 - 0x0000)
struct MountedTurret_C_OnNotifyEnd_C545F8F445E4AE78043EFD8678F12483 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_OnNotifyEnd_C545F8F445E4AE78043EFD8678F12483) == 0x000004, "Wrong alignment on MountedTurret_C_OnNotifyEnd_C545F8F445E4AE78043EFD8678F12483");
static_assert(sizeof(MountedTurret_C_OnNotifyEnd_C545F8F445E4AE78043EFD8678F12483) == 0x000008, "Wrong size on MountedTurret_C_OnNotifyEnd_C545F8F445E4AE78043EFD8678F12483");
static_assert(offsetof(MountedTurret_C_OnNotifyEnd_C545F8F445E4AE78043EFD8678F12483, NotifyName) == 0x000000, "Member 'MountedTurret_C_OnNotifyEnd_C545F8F445E4AE78043EFD8678F12483::NotifyName' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnCompleted_BE998F90462B0AB8D888EB90F677D680
// 0x0008 (0x0008 - 0x0000)
struct MountedTurret_C_OnCompleted_BE998F90462B0AB8D888EB90F677D680 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_OnCompleted_BE998F90462B0AB8D888EB90F677D680) == 0x000004, "Wrong alignment on MountedTurret_C_OnCompleted_BE998F90462B0AB8D888EB90F677D680");
static_assert(sizeof(MountedTurret_C_OnCompleted_BE998F90462B0AB8D888EB90F677D680) == 0x000008, "Wrong size on MountedTurret_C_OnCompleted_BE998F90462B0AB8D888EB90F677D680");
static_assert(offsetof(MountedTurret_C_OnCompleted_BE998F90462B0AB8D888EB90F677D680, NotifyName) == 0x000000, "Member 'MountedTurret_C_OnCompleted_BE998F90462B0AB8D888EB90F677D680::NotifyName' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnBlendOut_BE998F90462B0AB8D888EB90F677D680
// 0x0008 (0x0008 - 0x0000)
struct MountedTurret_C_OnBlendOut_BE998F90462B0AB8D888EB90F677D680 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_OnBlendOut_BE998F90462B0AB8D888EB90F677D680) == 0x000004, "Wrong alignment on MountedTurret_C_OnBlendOut_BE998F90462B0AB8D888EB90F677D680");
static_assert(sizeof(MountedTurret_C_OnBlendOut_BE998F90462B0AB8D888EB90F677D680) == 0x000008, "Wrong size on MountedTurret_C_OnBlendOut_BE998F90462B0AB8D888EB90F677D680");
static_assert(offsetof(MountedTurret_C_OnBlendOut_BE998F90462B0AB8D888EB90F677D680, NotifyName) == 0x000000, "Member 'MountedTurret_C_OnBlendOut_BE998F90462B0AB8D888EB90F677D680::NotifyName' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnInterrupted_BE998F90462B0AB8D888EB90F677D680
// 0x0008 (0x0008 - 0x0000)
struct MountedTurret_C_OnInterrupted_BE998F90462B0AB8D888EB90F677D680 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_OnInterrupted_BE998F90462B0AB8D888EB90F677D680) == 0x000004, "Wrong alignment on MountedTurret_C_OnInterrupted_BE998F90462B0AB8D888EB90F677D680");
static_assert(sizeof(MountedTurret_C_OnInterrupted_BE998F90462B0AB8D888EB90F677D680) == 0x000008, "Wrong size on MountedTurret_C_OnInterrupted_BE998F90462B0AB8D888EB90F677D680");
static_assert(offsetof(MountedTurret_C_OnInterrupted_BE998F90462B0AB8D888EB90F677D680, NotifyName) == 0x000000, "Member 'MountedTurret_C_OnInterrupted_BE998F90462B0AB8D888EB90F677D680::NotifyName' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnNotifyBegin_BE998F90462B0AB8D888EB90F677D680
// 0x0008 (0x0008 - 0x0000)
struct MountedTurret_C_OnNotifyBegin_BE998F90462B0AB8D888EB90F677D680 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_OnNotifyBegin_BE998F90462B0AB8D888EB90F677D680) == 0x000004, "Wrong alignment on MountedTurret_C_OnNotifyBegin_BE998F90462B0AB8D888EB90F677D680");
static_assert(sizeof(MountedTurret_C_OnNotifyBegin_BE998F90462B0AB8D888EB90F677D680) == 0x000008, "Wrong size on MountedTurret_C_OnNotifyBegin_BE998F90462B0AB8D888EB90F677D680");
static_assert(offsetof(MountedTurret_C_OnNotifyBegin_BE998F90462B0AB8D888EB90F677D680, NotifyName) == 0x000000, "Member 'MountedTurret_C_OnNotifyBegin_BE998F90462B0AB8D888EB90F677D680::NotifyName' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnNotifyEnd_BE998F90462B0AB8D888EB90F677D680
// 0x0008 (0x0008 - 0x0000)
struct MountedTurret_C_OnNotifyEnd_BE998F90462B0AB8D888EB90F677D680 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_OnNotifyEnd_BE998F90462B0AB8D888EB90F677D680) == 0x000004, "Wrong alignment on MountedTurret_C_OnNotifyEnd_BE998F90462B0AB8D888EB90F677D680");
static_assert(sizeof(MountedTurret_C_OnNotifyEnd_BE998F90462B0AB8D888EB90F677D680) == 0x000008, "Wrong size on MountedTurret_C_OnNotifyEnd_BE998F90462B0AB8D888EB90F677D680");
static_assert(offsetof(MountedTurret_C_OnNotifyEnd_BE998F90462B0AB8D888EB90F677D680, NotifyName) == 0x000000, "Member 'MountedTurret_C_OnNotifyEnd_BE998F90462B0AB8D888EB90F677D680::NotifyName' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnCompleted_43B2536B49D71F6DB759A49367555C0D
// 0x0008 (0x0008 - 0x0000)
struct MountedTurret_C_OnCompleted_43B2536B49D71F6DB759A49367555C0D final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_OnCompleted_43B2536B49D71F6DB759A49367555C0D) == 0x000004, "Wrong alignment on MountedTurret_C_OnCompleted_43B2536B49D71F6DB759A49367555C0D");
static_assert(sizeof(MountedTurret_C_OnCompleted_43B2536B49D71F6DB759A49367555C0D) == 0x000008, "Wrong size on MountedTurret_C_OnCompleted_43B2536B49D71F6DB759A49367555C0D");
static_assert(offsetof(MountedTurret_C_OnCompleted_43B2536B49D71F6DB759A49367555C0D, NotifyName) == 0x000000, "Member 'MountedTurret_C_OnCompleted_43B2536B49D71F6DB759A49367555C0D::NotifyName' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnBlendOut_43B2536B49D71F6DB759A49367555C0D
// 0x0008 (0x0008 - 0x0000)
struct MountedTurret_C_OnBlendOut_43B2536B49D71F6DB759A49367555C0D final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_OnBlendOut_43B2536B49D71F6DB759A49367555C0D) == 0x000004, "Wrong alignment on MountedTurret_C_OnBlendOut_43B2536B49D71F6DB759A49367555C0D");
static_assert(sizeof(MountedTurret_C_OnBlendOut_43B2536B49D71F6DB759A49367555C0D) == 0x000008, "Wrong size on MountedTurret_C_OnBlendOut_43B2536B49D71F6DB759A49367555C0D");
static_assert(offsetof(MountedTurret_C_OnBlendOut_43B2536B49D71F6DB759A49367555C0D, NotifyName) == 0x000000, "Member 'MountedTurret_C_OnBlendOut_43B2536B49D71F6DB759A49367555C0D::NotifyName' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnInterrupted_43B2536B49D71F6DB759A49367555C0D
// 0x0008 (0x0008 - 0x0000)
struct MountedTurret_C_OnInterrupted_43B2536B49D71F6DB759A49367555C0D final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_OnInterrupted_43B2536B49D71F6DB759A49367555C0D) == 0x000004, "Wrong alignment on MountedTurret_C_OnInterrupted_43B2536B49D71F6DB759A49367555C0D");
static_assert(sizeof(MountedTurret_C_OnInterrupted_43B2536B49D71F6DB759A49367555C0D) == 0x000008, "Wrong size on MountedTurret_C_OnInterrupted_43B2536B49D71F6DB759A49367555C0D");
static_assert(offsetof(MountedTurret_C_OnInterrupted_43B2536B49D71F6DB759A49367555C0D, NotifyName) == 0x000000, "Member 'MountedTurret_C_OnInterrupted_43B2536B49D71F6DB759A49367555C0D::NotifyName' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnNotifyBegin_43B2536B49D71F6DB759A49367555C0D
// 0x0008 (0x0008 - 0x0000)
struct MountedTurret_C_OnNotifyBegin_43B2536B49D71F6DB759A49367555C0D final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_OnNotifyBegin_43B2536B49D71F6DB759A49367555C0D) == 0x000004, "Wrong alignment on MountedTurret_C_OnNotifyBegin_43B2536B49D71F6DB759A49367555C0D");
static_assert(sizeof(MountedTurret_C_OnNotifyBegin_43B2536B49D71F6DB759A49367555C0D) == 0x000008, "Wrong size on MountedTurret_C_OnNotifyBegin_43B2536B49D71F6DB759A49367555C0D");
static_assert(offsetof(MountedTurret_C_OnNotifyBegin_43B2536B49D71F6DB759A49367555C0D, NotifyName) == 0x000000, "Member 'MountedTurret_C_OnNotifyBegin_43B2536B49D71F6DB759A49367555C0D::NotifyName' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnNotifyEnd_43B2536B49D71F6DB759A49367555C0D
// 0x0008 (0x0008 - 0x0000)
struct MountedTurret_C_OnNotifyEnd_43B2536B49D71F6DB759A49367555C0D final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_OnNotifyEnd_43B2536B49D71F6DB759A49367555C0D) == 0x000004, "Wrong alignment on MountedTurret_C_OnNotifyEnd_43B2536B49D71F6DB759A49367555C0D");
static_assert(sizeof(MountedTurret_C_OnNotifyEnd_43B2536B49D71F6DB759A49367555C0D) == 0x000008, "Wrong size on MountedTurret_C_OnNotifyEnd_43B2536B49D71F6DB759A49367555C0D");
static_assert(offsetof(MountedTurret_C_OnNotifyEnd_43B2536B49D71F6DB759A49367555C0D, NotifyName) == 0x000000, "Member 'MountedTurret_C_OnNotifyEnd_43B2536B49D71F6DB759A49367555C0D::NotifyName' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnCompleted_761292E24A89E794B70E9C9206892380
// 0x0008 (0x0008 - 0x0000)
struct MountedTurret_C_OnCompleted_761292E24A89E794B70E9C9206892380 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_OnCompleted_761292E24A89E794B70E9C9206892380) == 0x000004, "Wrong alignment on MountedTurret_C_OnCompleted_761292E24A89E794B70E9C9206892380");
static_assert(sizeof(MountedTurret_C_OnCompleted_761292E24A89E794B70E9C9206892380) == 0x000008, "Wrong size on MountedTurret_C_OnCompleted_761292E24A89E794B70E9C9206892380");
static_assert(offsetof(MountedTurret_C_OnCompleted_761292E24A89E794B70E9C9206892380, NotifyName) == 0x000000, "Member 'MountedTurret_C_OnCompleted_761292E24A89E794B70E9C9206892380::NotifyName' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnBlendOut_761292E24A89E794B70E9C9206892380
// 0x0008 (0x0008 - 0x0000)
struct MountedTurret_C_OnBlendOut_761292E24A89E794B70E9C9206892380 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_OnBlendOut_761292E24A89E794B70E9C9206892380) == 0x000004, "Wrong alignment on MountedTurret_C_OnBlendOut_761292E24A89E794B70E9C9206892380");
static_assert(sizeof(MountedTurret_C_OnBlendOut_761292E24A89E794B70E9C9206892380) == 0x000008, "Wrong size on MountedTurret_C_OnBlendOut_761292E24A89E794B70E9C9206892380");
static_assert(offsetof(MountedTurret_C_OnBlendOut_761292E24A89E794B70E9C9206892380, NotifyName) == 0x000000, "Member 'MountedTurret_C_OnBlendOut_761292E24A89E794B70E9C9206892380::NotifyName' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnInterrupted_761292E24A89E794B70E9C9206892380
// 0x0008 (0x0008 - 0x0000)
struct MountedTurret_C_OnInterrupted_761292E24A89E794B70E9C9206892380 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_OnInterrupted_761292E24A89E794B70E9C9206892380) == 0x000004, "Wrong alignment on MountedTurret_C_OnInterrupted_761292E24A89E794B70E9C9206892380");
static_assert(sizeof(MountedTurret_C_OnInterrupted_761292E24A89E794B70E9C9206892380) == 0x000008, "Wrong size on MountedTurret_C_OnInterrupted_761292E24A89E794B70E9C9206892380");
static_assert(offsetof(MountedTurret_C_OnInterrupted_761292E24A89E794B70E9C9206892380, NotifyName) == 0x000000, "Member 'MountedTurret_C_OnInterrupted_761292E24A89E794B70E9C9206892380::NotifyName' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnNotifyBegin_761292E24A89E794B70E9C9206892380
// 0x0008 (0x0008 - 0x0000)
struct MountedTurret_C_OnNotifyBegin_761292E24A89E794B70E9C9206892380 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_OnNotifyBegin_761292E24A89E794B70E9C9206892380) == 0x000004, "Wrong alignment on MountedTurret_C_OnNotifyBegin_761292E24A89E794B70E9C9206892380");
static_assert(sizeof(MountedTurret_C_OnNotifyBegin_761292E24A89E794B70E9C9206892380) == 0x000008, "Wrong size on MountedTurret_C_OnNotifyBegin_761292E24A89E794B70E9C9206892380");
static_assert(offsetof(MountedTurret_C_OnNotifyBegin_761292E24A89E794B70E9C9206892380, NotifyName) == 0x000000, "Member 'MountedTurret_C_OnNotifyBegin_761292E24A89E794B70E9C9206892380::NotifyName' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnNotifyEnd_761292E24A89E794B70E9C9206892380
// 0x0008 (0x0008 - 0x0000)
struct MountedTurret_C_OnNotifyEnd_761292E24A89E794B70E9C9206892380 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_OnNotifyEnd_761292E24A89E794B70E9C9206892380) == 0x000004, "Wrong alignment on MountedTurret_C_OnNotifyEnd_761292E24A89E794B70E9C9206892380");
static_assert(sizeof(MountedTurret_C_OnNotifyEnd_761292E24A89E794B70E9C9206892380) == 0x000008, "Wrong size on MountedTurret_C_OnNotifyEnd_761292E24A89E794B70E9C9206892380");
static_assert(offsetof(MountedTurret_C_OnNotifyEnd_761292E24A89E794B70E9C9206892380, NotifyName) == 0x000000, "Member 'MountedTurret_C_OnNotifyEnd_761292E24A89E794B70E9C9206892380::NotifyName' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.GetVehicleSeatActionNames
// 0x0060 (0x0060 - 0x0000)
struct MountedTurret_C_GetVehicleSeatActionNames final
{
public:
	class AFortPlayerPawn*                        PlayerPawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              OverrideInputType;                                 // 0x0008(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm)
	class AFortPlayerPawn*                        PlayerPawn_Local;                                  // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           ReturnActionNames_Local;                           // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetFireActionName_ReturnValue;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue1;                  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetVehicleExitActionName_ReturnValue;     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue1;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_GetVehicleSeatActionNames) == 0x000008, "Wrong alignment on MountedTurret_C_GetVehicleSeatActionNames");
static_assert(sizeof(MountedTurret_C_GetVehicleSeatActionNames) == 0x000060, "Wrong size on MountedTurret_C_GetVehicleSeatActionNames");
static_assert(offsetof(MountedTurret_C_GetVehicleSeatActionNames, PlayerPawn) == 0x000000, "Member 'MountedTurret_C_GetVehicleSeatActionNames::PlayerPawn' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_GetVehicleSeatActionNames, OverrideInputType) == 0x000008, "Member 'MountedTurret_C_GetVehicleSeatActionNames::OverrideInputType' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_GetVehicleSeatActionNames, ReturnValue) == 0x000010, "Member 'MountedTurret_C_GetVehicleSeatActionNames::ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_GetVehicleSeatActionNames, PlayerPawn_Local) == 0x000020, "Member 'MountedTurret_C_GetVehicleSeatActionNames::PlayerPawn_Local' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_GetVehicleSeatActionNames, ReturnActionNames_Local) == 0x000028, "Member 'MountedTurret_C_GetVehicleSeatActionNames::ReturnActionNames_Local' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_GetVehicleSeatActionNames, CallFunc_GetContext_ReturnValue) == 0x000038, "Member 'MountedTurret_C_GetVehicleSeatActionNames::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_GetVehicleSeatActionNames, CallFunc_GetFireActionName_ReturnValue) == 0x000040, "Member 'MountedTurret_C_GetVehicleSeatActionNames::CallFunc_GetFireActionName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_GetVehicleSeatActionNames, CallFunc_GetContext_ReturnValue1) == 0x000048, "Member 'MountedTurret_C_GetVehicleSeatActionNames::CallFunc_GetContext_ReturnValue1' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_GetVehicleSeatActionNames, CallFunc_GetVehicleExitActionName_ReturnValue) == 0x000050, "Member 'MountedTurret_C_GetVehicleSeatActionNames::CallFunc_GetVehicleExitActionName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_GetVehicleSeatActionNames, CallFunc_Array_Add_ReturnValue) == 0x000058, "Member 'MountedTurret_C_GetVehicleSeatActionNames::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_GetVehicleSeatActionNames, CallFunc_Array_Add_ReturnValue1) == 0x00005C, "Member 'MountedTurret_C_GetVehicleSeatActionNames::CallFunc_Array_Add_ReturnValue1' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.GetVehicleSeatLabels
// 0x0050 (0x0050 - 0x0000)
struct MountedTurret_C_GetVehicleSeatLabels final
{
public:
	class AFortPlayerPawn*                        PlayerPawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              OverrideInputType;                                 // 0x0008(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm)
	TArray<class FText>                           ReturnLabels_Local;                                // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0030(0x0018)()
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_GetVehicleSeatLabels) == 0x000008, "Wrong alignment on MountedTurret_C_GetVehicleSeatLabels");
static_assert(sizeof(MountedTurret_C_GetVehicleSeatLabels) == 0x000050, "Wrong size on MountedTurret_C_GetVehicleSeatLabels");
static_assert(offsetof(MountedTurret_C_GetVehicleSeatLabels, PlayerPawn) == 0x000000, "Member 'MountedTurret_C_GetVehicleSeatLabels::PlayerPawn' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_GetVehicleSeatLabels, OverrideInputType) == 0x000008, "Member 'MountedTurret_C_GetVehicleSeatLabels::OverrideInputType' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_GetVehicleSeatLabels, ReturnValue) == 0x000010, "Member 'MountedTurret_C_GetVehicleSeatLabels::ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_GetVehicleSeatLabels, ReturnLabels_Local) == 0x000020, "Member 'MountedTurret_C_GetVehicleSeatLabels::ReturnLabels_Local' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_GetVehicleSeatLabels, CallFunc_MakeLiteralText_ReturnValue) == 0x000030, "Member 'MountedTurret_C_GetVehicleSeatLabels::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_GetVehicleSeatLabels, CallFunc_Array_Add_ReturnValue) == 0x000048, "Member 'MountedTurret_C_GetVehicleSeatLabels::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.GetVehicleSeatActionLabels
// 0x0070 (0x0070 - 0x0000)
struct MountedTurret_C_GetVehicleSeatActionLabels final
{
public:
	class AFortPlayerPawn*                        PlayerPawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              OverrideInputType;                                 // 0x0008(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm)
	TArray<class FText>                           ReturnLabels_Local;                                // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0030(0x0018)()
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue1;             // 0x0050(0x0018)()
	int32                                         CallFunc_Array_Add_ReturnValue1;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_GetVehicleSeatActionLabels) == 0x000008, "Wrong alignment on MountedTurret_C_GetVehicleSeatActionLabels");
static_assert(sizeof(MountedTurret_C_GetVehicleSeatActionLabels) == 0x000070, "Wrong size on MountedTurret_C_GetVehicleSeatActionLabels");
static_assert(offsetof(MountedTurret_C_GetVehicleSeatActionLabels, PlayerPawn) == 0x000000, "Member 'MountedTurret_C_GetVehicleSeatActionLabels::PlayerPawn' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_GetVehicleSeatActionLabels, OverrideInputType) == 0x000008, "Member 'MountedTurret_C_GetVehicleSeatActionLabels::OverrideInputType' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_GetVehicleSeatActionLabels, ReturnValue) == 0x000010, "Member 'MountedTurret_C_GetVehicleSeatActionLabels::ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_GetVehicleSeatActionLabels, ReturnLabels_Local) == 0x000020, "Member 'MountedTurret_C_GetVehicleSeatActionLabels::ReturnLabels_Local' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_GetVehicleSeatActionLabels, CallFunc_MakeLiteralText_ReturnValue) == 0x000030, "Member 'MountedTurret_C_GetVehicleSeatActionLabels::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_GetVehicleSeatActionLabels, CallFunc_Array_Add_ReturnValue) == 0x000048, "Member 'MountedTurret_C_GetVehicleSeatActionLabels::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_GetVehicleSeatActionLabels, CallFunc_MakeLiteralText_ReturnValue1) == 0x000050, "Member 'MountedTurret_C_GetVehicleSeatActionLabels::CallFunc_MakeLiteralText_ReturnValue1' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_GetVehicleSeatActionLabels, CallFunc_Array_Add_ReturnValue1) == 0x000068, "Member 'MountedTurret_C_GetVehicleSeatActionLabels::CallFunc_Array_Add_ReturnValue1' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.CurrentOverheatScalar
// 0x0014 (0x0014 - 0x0000)
struct MountedTurret_C_CurrentOverheatScalar final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetOverheatingMaxValue_ReturnValue;       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentOverheatValue_ReturnValue;      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_CurrentOverheatScalar) == 0x000004, "Wrong alignment on MountedTurret_C_CurrentOverheatScalar");
static_assert(sizeof(MountedTurret_C_CurrentOverheatScalar) == 0x000014, "Wrong size on MountedTurret_C_CurrentOverheatScalar");
static_assert(offsetof(MountedTurret_C_CurrentOverheatScalar, ReturnValue) == 0x000000, "Member 'MountedTurret_C_CurrentOverheatScalar::ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_CurrentOverheatScalar, CallFunc_GetOverheatingMaxValue_ReturnValue) == 0x000004, "Member 'MountedTurret_C_CurrentOverheatScalar::CallFunc_GetOverheatingMaxValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_CurrentOverheatScalar, CallFunc_GetCurrentOverheatValue_ReturnValue) == 0x000008, "Member 'MountedTurret_C_CurrentOverheatScalar::CallFunc_GetCurrentOverheatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_CurrentOverheatScalar, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00000C, "Member 'MountedTurret_C_CurrentOverheatScalar::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_CurrentOverheatScalar, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000010, "Member 'MountedTurret_C_CurrentOverheatScalar::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.BP_CanInteract
// 0x00D0 (0x00D0 - 0x0000)
struct MountedTurret_C_BP_CanInteract final
{
public:
	class AFortPlayerController*                  FortPC;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0028(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0044(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MountedTurret_C_BP_CanInteract) == 0x000008, "Wrong alignment on MountedTurret_C_BP_CanInteract");
static_assert(sizeof(MountedTurret_C_BP_CanInteract) == 0x0000D0, "Wrong size on MountedTurret_C_BP_CanInteract");
static_assert(offsetof(MountedTurret_C_BP_CanInteract, FortPC) == 0x000000, "Member 'MountedTurret_C_BP_CanInteract::FortPC' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_BP_CanInteract, ReturnValue) == 0x000008, "Member 'MountedTurret_C_BP_CanInteract::ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_BP_CanInteract, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'MountedTurret_C_BP_CanInteract::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_BP_CanInteract, CallFunc_K2_GetPawn_ReturnValue) == 0x000010, "Member 'MountedTurret_C_BP_CanInteract::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_BP_CanInteract, CallFunc_IsValid_ReturnValue1) == 0x000018, "Member 'MountedTurret_C_BP_CanInteract::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_BP_CanInteract, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00001C, "Member 'MountedTurret_C_BP_CanInteract::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_BP_CanInteract, Temp_object_Variable) == 0x000028, "Member 'MountedTurret_C_BP_CanInteract::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_BP_CanInteract, CallFunc_GetSocketLocation_ReturnValue) == 0x000038, "Member 'MountedTurret_C_BP_CanInteract::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_BP_CanInteract, CallFunc_LineTraceSingle_OutHit) == 0x000044, "Member 'MountedTurret_C_BP_CanInteract::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_BP_CanInteract, CallFunc_LineTraceSingle_ReturnValue) == 0x0000CC, "Member 'MountedTurret_C_BP_CanInteract::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.OnGetExitSocketTransform
// 0x0110 (0x0110 - 0x0000)
struct MountedTurret_C_OnGetExitSocketTransform final
{
public:
	class FName                                   ExitSocket;                                        // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SocketIndex;                                       // 0x0008(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             InTransform;                                       // 0x0010(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	bool                                          bOutOverriderExitSocket;                           // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0xF];                                       // 0x0041(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             OutOverrideTransform;                              // 0x0050(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0xC];                                       // 0x00D4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00E0(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(MountedTurret_C_OnGetExitSocketTransform) == 0x000010, "Wrong alignment on MountedTurret_C_OnGetExitSocketTransform");
static_assert(sizeof(MountedTurret_C_OnGetExitSocketTransform) == 0x000110, "Wrong size on MountedTurret_C_OnGetExitSocketTransform");
static_assert(offsetof(MountedTurret_C_OnGetExitSocketTransform, ExitSocket) == 0x000000, "Member 'MountedTurret_C_OnGetExitSocketTransform::ExitSocket' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_OnGetExitSocketTransform, SocketIndex) == 0x000008, "Member 'MountedTurret_C_OnGetExitSocketTransform::SocketIndex' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_OnGetExitSocketTransform, InTransform) == 0x000010, "Member 'MountedTurret_C_OnGetExitSocketTransform::InTransform' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_OnGetExitSocketTransform, bOutOverriderExitSocket) == 0x000040, "Member 'MountedTurret_C_OnGetExitSocketTransform::bOutOverriderExitSocket' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_OnGetExitSocketTransform, OutOverrideTransform) == 0x000050, "Member 'MountedTurret_C_OnGetExitSocketTransform::OutOverrideTransform' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_OnGetExitSocketTransform, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000080, "Member 'MountedTurret_C_OnGetExitSocketTransform::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_OnGetExitSocketTransform, CallFunc_BreakTransform_Location) == 0x00008C, "Member 'MountedTurret_C_OnGetExitSocketTransform::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_OnGetExitSocketTransform, CallFunc_BreakTransform_Rotation) == 0x000098, "Member 'MountedTurret_C_OnGetExitSocketTransform::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_OnGetExitSocketTransform, CallFunc_BreakTransform_Scale) == 0x0000A4, "Member 'MountedTurret_C_OnGetExitSocketTransform::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_OnGetExitSocketTransform, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000B0, "Member 'MountedTurret_C_OnGetExitSocketTransform::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_OnGetExitSocketTransform, CallFunc_RotateAngleAxis_ReturnValue) == 0x0000BC, "Member 'MountedTurret_C_OnGetExitSocketTransform::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_OnGetExitSocketTransform, CallFunc_Add_VectorVector_ReturnValue) == 0x0000C8, "Member 'MountedTurret_C_OnGetExitSocketTransform::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_OnGetExitSocketTransform, CallFunc_MakeTransform_ReturnValue) == 0x0000E0, "Member 'MountedTurret_C_OnGetExitSocketTransform::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.GetIconPlacement
// 0x0030 (0x0030 - 0x0000)
struct MountedTurret_C_GetIconPlacement final
{
public:
	class AActor*                                 SelfActor;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OutLocation;                                       // 0x0008(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OutExtents;                                        // 0x0014(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCenterOfMass_ReturnValue;              // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_GetIconPlacement) == 0x000008, "Wrong alignment on MountedTurret_C_GetIconPlacement");
static_assert(sizeof(MountedTurret_C_GetIconPlacement) == 0x000030, "Wrong size on MountedTurret_C_GetIconPlacement");
static_assert(offsetof(MountedTurret_C_GetIconPlacement, SelfActor) == 0x000000, "Member 'MountedTurret_C_GetIconPlacement::SelfActor' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_GetIconPlacement, OutLocation) == 0x000008, "Member 'MountedTurret_C_GetIconPlacement::OutLocation' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_GetIconPlacement, OutExtents) == 0x000014, "Member 'MountedTurret_C_GetIconPlacement::OutExtents' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_GetIconPlacement, CallFunc_GetCenterOfMass_ReturnValue) == 0x000020, "Member 'MountedTurret_C_GetIconPlacement::CallFunc_GetCenterOfMass_ReturnValue' has a wrong offset!");

// Function MountedTurret.MountedTurret_C.GetVehicleSeatPrimaryAction
// 0x0020 (0x0020 - 0x0000)
struct MountedTurret_C_GetVehicleSeatPrimaryAction final
{
public:
	class AFortPlayerPawn*                        FortPlayerPawn;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetFireActionName_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MountedTurret_C_GetVehicleSeatPrimaryAction) == 0x000008, "Wrong alignment on MountedTurret_C_GetVehicleSeatPrimaryAction");
static_assert(sizeof(MountedTurret_C_GetVehicleSeatPrimaryAction) == 0x000020, "Wrong size on MountedTurret_C_GetVehicleSeatPrimaryAction");
static_assert(offsetof(MountedTurret_C_GetVehicleSeatPrimaryAction, FortPlayerPawn) == 0x000000, "Member 'MountedTurret_C_GetVehicleSeatPrimaryAction::FortPlayerPawn' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_GetVehicleSeatPrimaryAction, ReturnValue) == 0x000008, "Member 'MountedTurret_C_GetVehicleSeatPrimaryAction::ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_GetVehicleSeatPrimaryAction, CallFunc_GetContext_ReturnValue) == 0x000010, "Member 'MountedTurret_C_GetVehicleSeatPrimaryAction::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(MountedTurret_C_GetVehicleSeatPrimaryAction, CallFunc_GetFireActionName_ReturnValue) == 0x000018, "Member 'MountedTurret_C_GetVehicleSeatPrimaryAction::CallFunc_GetFireActionName_ReturnValue' has a wrong offset!");

}

