#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MinigameSettingsMachine

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function MinigameSettingsMachine.MinigameSettingsMachine_C.ExecuteUbergraph_MinigameSettingsMachine
// 0x0070 (0x0070 - 0x0000)
struct MinigameSettingsMachine_C_ExecuteUbergraph_MinigameSettingsMachine final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	const class AFortPawn*                        K2Node_Event_InteractingPawn;                      // 0x0008(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AFortPlayerController*>          CallFunc_GetLocalFortPlayerControllers_ReturnValue; // 0x0010(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<class AFortPlayerController*>          CallFunc_GetLocalFortPlayerControllers_ReturnValue1; // 0x0020(0x0010)(ZeroConstructor, ReferenceParm)
	class AFortPlayerController*                  CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerController*                  CallFunc_Array_Get_Item1;                          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerControllerAthena*            K2Node_DynamicCast_AsFort_Player_Controller_Athena; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerControllerAthena*            K2Node_DynamicCast_AsFort_Player_Controller_Athena1; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x005C(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(MinigameSettingsMachine_C_ExecuteUbergraph_MinigameSettingsMachine) == 0x000008, "Wrong alignment on MinigameSettingsMachine_C_ExecuteUbergraph_MinigameSettingsMachine");
static_assert(sizeof(MinigameSettingsMachine_C_ExecuteUbergraph_MinigameSettingsMachine) == 0x000070, "Wrong size on MinigameSettingsMachine_C_ExecuteUbergraph_MinigameSettingsMachine");
static_assert(offsetof(MinigameSettingsMachine_C_ExecuteUbergraph_MinigameSettingsMachine, EntryPoint) == 0x000000, "Member 'MinigameSettingsMachine_C_ExecuteUbergraph_MinigameSettingsMachine::EntryPoint' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_ExecuteUbergraph_MinigameSettingsMachine, CallFunc_HasAuthority_ReturnValue) == 0x000004, "Member 'MinigameSettingsMachine_C_ExecuteUbergraph_MinigameSettingsMachine::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_ExecuteUbergraph_MinigameSettingsMachine, K2Node_Event_InteractingPawn) == 0x000008, "Member 'MinigameSettingsMachine_C_ExecuteUbergraph_MinigameSettingsMachine::K2Node_Event_InteractingPawn' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_ExecuteUbergraph_MinigameSettingsMachine, CallFunc_GetLocalFortPlayerControllers_ReturnValue) == 0x000010, "Member 'MinigameSettingsMachine_C_ExecuteUbergraph_MinigameSettingsMachine::CallFunc_GetLocalFortPlayerControllers_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_ExecuteUbergraph_MinigameSettingsMachine, CallFunc_GetLocalFortPlayerControllers_ReturnValue1) == 0x000020, "Member 'MinigameSettingsMachine_C_ExecuteUbergraph_MinigameSettingsMachine::CallFunc_GetLocalFortPlayerControllers_ReturnValue1' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_ExecuteUbergraph_MinigameSettingsMachine, CallFunc_Array_Get_Item) == 0x000030, "Member 'MinigameSettingsMachine_C_ExecuteUbergraph_MinigameSettingsMachine::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_ExecuteUbergraph_MinigameSettingsMachine, CallFunc_Array_Get_Item1) == 0x000038, "Member 'MinigameSettingsMachine_C_ExecuteUbergraph_MinigameSettingsMachine::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_ExecuteUbergraph_MinigameSettingsMachine, K2Node_DynamicCast_AsFort_Player_Controller_Athena) == 0x000040, "Member 'MinigameSettingsMachine_C_ExecuteUbergraph_MinigameSettingsMachine::K2Node_DynamicCast_AsFort_Player_Controller_Athena' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_ExecuteUbergraph_MinigameSettingsMachine, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'MinigameSettingsMachine_C_ExecuteUbergraph_MinigameSettingsMachine::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_ExecuteUbergraph_MinigameSettingsMachine, K2Node_DynamicCast_AsFort_Player_Controller_Athena1) == 0x000050, "Member 'MinigameSettingsMachine_C_ExecuteUbergraph_MinigameSettingsMachine::K2Node_DynamicCast_AsFort_Player_Controller_Athena1' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_ExecuteUbergraph_MinigameSettingsMachine, K2Node_DynamicCast_bSuccess1) == 0x000058, "Member 'MinigameSettingsMachine_C_ExecuteUbergraph_MinigameSettingsMachine::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_ExecuteUbergraph_MinigameSettingsMachine, K2Node_CreateDelegate_OutputDelegate) == 0x00005C, "Member 'MinigameSettingsMachine_C_ExecuteUbergraph_MinigameSettingsMachine::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function MinigameSettingsMachine.MinigameSettingsMachine_C.BlueprintOnInteract
// 0x0008 (0x0008 - 0x0000)
struct MinigameSettingsMachine_C_BlueprintOnInteract final
{
public:
	const class AFortPawn*                        InteractingPawn;                                   // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MinigameSettingsMachine_C_BlueprintOnInteract) == 0x000008, "Wrong alignment on MinigameSettingsMachine_C_BlueprintOnInteract");
static_assert(sizeof(MinigameSettingsMachine_C_BlueprintOnInteract) == 0x000008, "Wrong size on MinigameSettingsMachine_C_BlueprintOnInteract");
static_assert(offsetof(MinigameSettingsMachine_C_BlueprintOnInteract, InteractingPawn) == 0x000000, "Member 'MinigameSettingsMachine_C_BlueprintOnInteract::InteractingPawn' has a wrong offset!");

// Function MinigameSettingsMachine.MinigameSettingsMachine_C.BlueprintOnLocalInteract
// 0x0028 (0x0028 - 0x0000)
struct MinigameSettingsMachine_C_BlueprintOnLocalInteract final
{
public:
	class AFortPlayerPawn*                        InteractingPawn;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnLocalInteract_bResult;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortMatchmakingKnobsModal*             CallFunc_OnLocalInteract_ModalWidget;              // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCreativeMinigameGameKnobsModal_C*      K2Node_DynamicCast_AsCreative_Minigame_Game_Knobs_Modal; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MinigameSettingsMachine_C_BlueprintOnLocalInteract) == 0x000008, "Wrong alignment on MinigameSettingsMachine_C_BlueprintOnLocalInteract");
static_assert(sizeof(MinigameSettingsMachine_C_BlueprintOnLocalInteract) == 0x000028, "Wrong size on MinigameSettingsMachine_C_BlueprintOnLocalInteract");
static_assert(offsetof(MinigameSettingsMachine_C_BlueprintOnLocalInteract, InteractingPawn) == 0x000000, "Member 'MinigameSettingsMachine_C_BlueprintOnLocalInteract::InteractingPawn' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_BlueprintOnLocalInteract, ReturnValue) == 0x000008, "Member 'MinigameSettingsMachine_C_BlueprintOnLocalInteract::ReturnValue' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_BlueprintOnLocalInteract, CallFunc_OnLocalInteract_bResult) == 0x000009, "Member 'MinigameSettingsMachine_C_BlueprintOnLocalInteract::CallFunc_OnLocalInteract_bResult' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_BlueprintOnLocalInteract, CallFunc_OnLocalInteract_ModalWidget) == 0x000010, "Member 'MinigameSettingsMachine_C_BlueprintOnLocalInteract::CallFunc_OnLocalInteract_ModalWidget' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_BlueprintOnLocalInteract, K2Node_DynamicCast_AsCreative_Minigame_Game_Knobs_Modal) == 0x000018, "Member 'MinigameSettingsMachine_C_BlueprintOnLocalInteract::K2Node_DynamicCast_AsCreative_Minigame_Game_Knobs_Modal' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_BlueprintOnLocalInteract, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'MinigameSettingsMachine_C_BlueprintOnLocalInteract::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function MinigameSettingsMachine.MinigameSettingsMachine_C.GetPickupSpawnLocation
// 0x0058 (0x0058 - 0x0000)
struct MinigameSettingsMachine_C_GetPickupSpawnLocation final
{
public:
	struct FVector                                SpawnLocation;                                     // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorInt_ReturnValue;           // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue1;            // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MinigameSettingsMachine_C_GetPickupSpawnLocation) == 0x000008, "Wrong alignment on MinigameSettingsMachine_C_GetPickupSpawnLocation");
static_assert(sizeof(MinigameSettingsMachine_C_GetPickupSpawnLocation) == 0x000058, "Wrong size on MinigameSettingsMachine_C_GetPickupSpawnLocation");
static_assert(offsetof(MinigameSettingsMachine_C_GetPickupSpawnLocation, SpawnLocation) == 0x000000, "Member 'MinigameSettingsMachine_C_GetPickupSpawnLocation::SpawnLocation' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_GetPickupSpawnLocation, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'MinigameSettingsMachine_C_GetPickupSpawnLocation::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_GetPickupSpawnLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'MinigameSettingsMachine_C_GetPickupSpawnLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_GetPickupSpawnLocation, CallFunc_GetActorForwardVector_ReturnValue) == 0x000024, "Member 'MinigameSettingsMachine_C_GetPickupSpawnLocation::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_GetPickupSpawnLocation, CallFunc_Multiply_VectorInt_ReturnValue) == 0x000030, "Member 'MinigameSettingsMachine_C_GetPickupSpawnLocation::CallFunc_Multiply_VectorInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_GetPickupSpawnLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x00003C, "Member 'MinigameSettingsMachine_C_GetPickupSpawnLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_GetPickupSpawnLocation, CallFunc_Add_VectorVector_ReturnValue1) == 0x000048, "Member 'MinigameSettingsMachine_C_GetPickupSpawnLocation::CallFunc_Add_VectorVector_ReturnValue1' has a wrong offset!");

// Function MinigameSettingsMachine.MinigameSettingsMachine_C.IsValidGame
// 0x0002 (0x0002 - 0x0000)
struct MinigameSettingsMachine_C_IsValidGame final
{
public:
	bool                                          bCanStartGame;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MinigameSettingsMachine_C_IsValidGame) == 0x000001, "Wrong alignment on MinigameSettingsMachine_C_IsValidGame");
static_assert(sizeof(MinigameSettingsMachine_C_IsValidGame) == 0x000002, "Wrong size on MinigameSettingsMachine_C_IsValidGame");
static_assert(offsetof(MinigameSettingsMachine_C_IsValidGame, bCanStartGame) == 0x000000, "Member 'MinigameSettingsMachine_C_IsValidGame::bCanStartGame' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_IsValidGame, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000001, "Member 'MinigameSettingsMachine_C_IsValidGame::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function MinigameSettingsMachine.MinigameSettingsMachine_C.HasMinigameStarted
// 0x0018 (0x0018 - 0x0000)
struct MinigameSettingsMachine_C_HasMinigameStarted final
{
public:
	bool                                          bHasStarted;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortMinigame*                          CallFunc_GetCurrentMinigame_Minigame;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasStarted_ReturnValue;                   // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MinigameSettingsMachine_C_HasMinigameStarted) == 0x000008, "Wrong alignment on MinigameSettingsMachine_C_HasMinigameStarted");
static_assert(sizeof(MinigameSettingsMachine_C_HasMinigameStarted) == 0x000018, "Wrong size on MinigameSettingsMachine_C_HasMinigameStarted");
static_assert(offsetof(MinigameSettingsMachine_C_HasMinigameStarted, bHasStarted) == 0x000000, "Member 'MinigameSettingsMachine_C_HasMinigameStarted::bHasStarted' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_HasMinigameStarted, CallFunc_GetCurrentMinigame_Minigame) == 0x000008, "Member 'MinigameSettingsMachine_C_HasMinigameStarted::CallFunc_GetCurrentMinigame_Minigame' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_HasMinigameStarted, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'MinigameSettingsMachine_C_HasMinigameStarted::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_HasMinigameStarted, CallFunc_HasStarted_ReturnValue) == 0x000011, "Member 'MinigameSettingsMachine_C_HasMinigameStarted::CallFunc_HasStarted_ReturnValue' has a wrong offset!");

// Function MinigameSettingsMachine.MinigameSettingsMachine_C.UpdateGameMode
// 0x0020 (0x0020 - 0x0000)
struct MinigameSettingsMachine_C_UpdateGameMode final
{
public:
	class AFortMinigame*                          CurrentMinigame;                                   // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortMinigame*                          CallFunc_GetCurrentMinigame_Minigame;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MinigameSettingsMachine_C_UpdateGameMode) == 0x000008, "Wrong alignment on MinigameSettingsMachine_C_UpdateGameMode");
static_assert(sizeof(MinigameSettingsMachine_C_UpdateGameMode) == 0x000020, "Wrong size on MinigameSettingsMachine_C_UpdateGameMode");
static_assert(offsetof(MinigameSettingsMachine_C_UpdateGameMode, CurrentMinigame) == 0x000000, "Member 'MinigameSettingsMachine_C_UpdateGameMode::CurrentMinigame' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_UpdateGameMode, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000008, "Member 'MinigameSettingsMachine_C_UpdateGameMode::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_UpdateGameMode, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'MinigameSettingsMachine_C_UpdateGameMode::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_UpdateGameMode, CallFunc_GetCurrentMinigame_Minigame) == 0x000010, "Member 'MinigameSettingsMachine_C_UpdateGameMode::CallFunc_GetCurrentMinigame_Minigame' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_UpdateGameMode, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000018, "Member 'MinigameSettingsMachine_C_UpdateGameMode::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function MinigameSettingsMachine.MinigameSettingsMachine_C.UpdateTimeLimit
// 0x0020 (0x0020 - 0x0000)
struct MinigameSettingsMachine_C_UpdateTimeLimit final
{
public:
	class AFortMinigame*                          CurrentMinigame;                                   // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortMinigame*                          CallFunc_GetCurrentMinigame_Minigame;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MinigameSettingsMachine_C_UpdateTimeLimit) == 0x000008, "Wrong alignment on MinigameSettingsMachine_C_UpdateTimeLimit");
static_assert(sizeof(MinigameSettingsMachine_C_UpdateTimeLimit) == 0x000020, "Wrong size on MinigameSettingsMachine_C_UpdateTimeLimit");
static_assert(offsetof(MinigameSettingsMachine_C_UpdateTimeLimit, CurrentMinigame) == 0x000000, "Member 'MinigameSettingsMachine_C_UpdateTimeLimit::CurrentMinigame' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_UpdateTimeLimit, CallFunc_HasAuthority_ReturnValue) == 0x000008, "Member 'MinigameSettingsMachine_C_UpdateTimeLimit::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_UpdateTimeLimit, CallFunc_GetCurrentMinigame_Minigame) == 0x000010, "Member 'MinigameSettingsMachine_C_UpdateTimeLimit::CallFunc_GetCurrentMinigame_Minigame' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_UpdateTimeLimit, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'MinigameSettingsMachine_C_UpdateTimeLimit::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function MinigameSettingsMachine.MinigameSettingsMachine_C.GetCurrentMinigame
// 0x0048 (0x0048 - 0x0000)
struct MinigameSettingsMachine_C_GetCurrentMinigame final
{
public:
	class AFortMinigame*                          Minigame;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortMinigameVolumeComponent*           LinkedVolumeComp;                                  // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortVolume*                            LinkedVolume;                                      // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortMinigame*                          CurrentMinigame;                                   // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortMinigameVolumeComponent*           CallFunc_GetComponentByClass_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortVolume*                            CallFunc_GetLinkedVolume_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MinigameSettingsMachine_C_GetCurrentMinigame) == 0x000008, "Wrong alignment on MinigameSettingsMachine_C_GetCurrentMinigame");
static_assert(sizeof(MinigameSettingsMachine_C_GetCurrentMinigame) == 0x000048, "Wrong size on MinigameSettingsMachine_C_GetCurrentMinigame");
static_assert(offsetof(MinigameSettingsMachine_C_GetCurrentMinigame, Minigame) == 0x000000, "Member 'MinigameSettingsMachine_C_GetCurrentMinigame::Minigame' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_GetCurrentMinigame, LinkedVolumeComp) == 0x000008, "Member 'MinigameSettingsMachine_C_GetCurrentMinigame::LinkedVolumeComp' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_GetCurrentMinigame, LinkedVolume) == 0x000010, "Member 'MinigameSettingsMachine_C_GetCurrentMinigame::LinkedVolume' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_GetCurrentMinigame, CurrentMinigame) == 0x000018, "Member 'MinigameSettingsMachine_C_GetCurrentMinigame::CurrentMinigame' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_GetCurrentMinigame, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'MinigameSettingsMachine_C_GetCurrentMinigame::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_GetCurrentMinigame, CallFunc_GetComponentByClass_ReturnValue) == 0x000028, "Member 'MinigameSettingsMachine_C_GetCurrentMinigame::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_GetCurrentMinigame, CallFunc_IsValid_ReturnValue1) == 0x000030, "Member 'MinigameSettingsMachine_C_GetCurrentMinigame::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_GetCurrentMinigame, CallFunc_GetLinkedVolume_ReturnValue) == 0x000038, "Member 'MinigameSettingsMachine_C_GetCurrentMinigame::CallFunc_GetLinkedVolume_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_GetCurrentMinigame, CallFunc_IsValid_ReturnValue2) == 0x000040, "Member 'MinigameSettingsMachine_C_GetCurrentMinigame::CallFunc_IsValid_ReturnValue2' has a wrong offset!");

// Function MinigameSettingsMachine.MinigameSettingsMachine_C.UpdateSpawnLocationSetting
// 0x0020 (0x0020 - 0x0000)
struct MinigameSettingsMachine_C_UpdateSpawnLocationSetting final
{
public:
	class AFortMinigame*                          CurrentMinigame;                                   // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortMinigame*                          CallFunc_GetCurrentMinigame_Minigame;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MinigameSettingsMachine_C_UpdateSpawnLocationSetting) == 0x000008, "Wrong alignment on MinigameSettingsMachine_C_UpdateSpawnLocationSetting");
static_assert(sizeof(MinigameSettingsMachine_C_UpdateSpawnLocationSetting) == 0x000020, "Wrong size on MinigameSettingsMachine_C_UpdateSpawnLocationSetting");
static_assert(offsetof(MinigameSettingsMachine_C_UpdateSpawnLocationSetting, CurrentMinigame) == 0x000000, "Member 'MinigameSettingsMachine_C_UpdateSpawnLocationSetting::CurrentMinigame' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_UpdateSpawnLocationSetting, CallFunc_HasAuthority_ReturnValue) == 0x000008, "Member 'MinigameSettingsMachine_C_UpdateSpawnLocationSetting::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_UpdateSpawnLocationSetting, CallFunc_GetCurrentMinigame_Minigame) == 0x000010, "Member 'MinigameSettingsMachine_C_UpdateSpawnLocationSetting::CallFunc_GetCurrentMinigame_Minigame' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_UpdateSpawnLocationSetting, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'MinigameSettingsMachine_C_UpdateSpawnLocationSetting::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function MinigameSettingsMachine.MinigameSettingsMachine_C.UpdateTeamSetting
// 0x0020 (0x0020 - 0x0000)
struct MinigameSettingsMachine_C_UpdateTeamSetting final
{
public:
	class AFortMinigame*                          CurrentMinigame;                                   // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortMinigame*                          CallFunc_GetCurrentMinigame_Minigame;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MinigameSettingsMachine_C_UpdateTeamSetting) == 0x000008, "Wrong alignment on MinigameSettingsMachine_C_UpdateTeamSetting");
static_assert(sizeof(MinigameSettingsMachine_C_UpdateTeamSetting) == 0x000020, "Wrong size on MinigameSettingsMachine_C_UpdateTeamSetting");
static_assert(offsetof(MinigameSettingsMachine_C_UpdateTeamSetting, CurrentMinigame) == 0x000000, "Member 'MinigameSettingsMachine_C_UpdateTeamSetting::CurrentMinigame' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_UpdateTeamSetting, CallFunc_HasAuthority_ReturnValue) == 0x000008, "Member 'MinigameSettingsMachine_C_UpdateTeamSetting::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_UpdateTeamSetting, CallFunc_GetCurrentMinigame_Minigame) == 0x000010, "Member 'MinigameSettingsMachine_C_UpdateTeamSetting::CallFunc_GetCurrentMinigame_Minigame' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_UpdateTeamSetting, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'MinigameSettingsMachine_C_UpdateTeamSetting::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function MinigameSettingsMachine.MinigameSettingsMachine_C.UpdatePostGameSpawnLocationSetting
// 0x0020 (0x0020 - 0x0000)
struct MinigameSettingsMachine_C_UpdatePostGameSpawnLocationSetting final
{
public:
	class AFortMinigame*                          CurrentMinigame;                                   // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortMinigame*                          CallFunc_GetCurrentMinigame_Minigame;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MinigameSettingsMachine_C_UpdatePostGameSpawnLocationSetting) == 0x000008, "Wrong alignment on MinigameSettingsMachine_C_UpdatePostGameSpawnLocationSetting");
static_assert(sizeof(MinigameSettingsMachine_C_UpdatePostGameSpawnLocationSetting) == 0x000020, "Wrong size on MinigameSettingsMachine_C_UpdatePostGameSpawnLocationSetting");
static_assert(offsetof(MinigameSettingsMachine_C_UpdatePostGameSpawnLocationSetting, CurrentMinigame) == 0x000000, "Member 'MinigameSettingsMachine_C_UpdatePostGameSpawnLocationSetting::CurrentMinigame' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_UpdatePostGameSpawnLocationSetting, CallFunc_HasAuthority_ReturnValue) == 0x000008, "Member 'MinigameSettingsMachine_C_UpdatePostGameSpawnLocationSetting::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_UpdatePostGameSpawnLocationSetting, CallFunc_GetCurrentMinigame_Minigame) == 0x000010, "Member 'MinigameSettingsMachine_C_UpdatePostGameSpawnLocationSetting::CallFunc_GetCurrentMinigame_Minigame' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_UpdatePostGameSpawnLocationSetting, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'MinigameSettingsMachine_C_UpdatePostGameSpawnLocationSetting::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function MinigameSettingsMachine.MinigameSettingsMachine_C.UpdatePlayerLives
// 0x0020 (0x0020 - 0x0000)
struct MinigameSettingsMachine_C_UpdatePlayerLives final
{
public:
	class AFortMinigame*                          NewLocalVar_0;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortMinigame*                          CallFunc_GetCurrentMinigame_Minigame;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MinigameSettingsMachine_C_UpdatePlayerLives) == 0x000008, "Wrong alignment on MinigameSettingsMachine_C_UpdatePlayerLives");
static_assert(sizeof(MinigameSettingsMachine_C_UpdatePlayerLives) == 0x000020, "Wrong size on MinigameSettingsMachine_C_UpdatePlayerLives");
static_assert(offsetof(MinigameSettingsMachine_C_UpdatePlayerLives, NewLocalVar_0) == 0x000000, "Member 'MinigameSettingsMachine_C_UpdatePlayerLives::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_UpdatePlayerLives, CallFunc_HasAuthority_ReturnValue) == 0x000008, "Member 'MinigameSettingsMachine_C_UpdatePlayerLives::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_UpdatePlayerLives, CallFunc_GetCurrentMinigame_Minigame) == 0x000010, "Member 'MinigameSettingsMachine_C_UpdatePlayerLives::CallFunc_GetCurrentMinigame_Minigame' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_UpdatePlayerLives, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'MinigameSettingsMachine_C_UpdatePlayerLives::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function MinigameSettingsMachine.MinigameSettingsMachine_C.UpdateAutoEndTeamThreshold
// 0x0020 (0x0020 - 0x0000)
struct MinigameSettingsMachine_C_UpdateAutoEndTeamThreshold final
{
public:
	class AFortMinigame*                          Minigame;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortMinigame*                          CallFunc_GetCurrentMinigame_Minigame;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MinigameSettingsMachine_C_UpdateAutoEndTeamThreshold) == 0x000008, "Wrong alignment on MinigameSettingsMachine_C_UpdateAutoEndTeamThreshold");
static_assert(sizeof(MinigameSettingsMachine_C_UpdateAutoEndTeamThreshold) == 0x000020, "Wrong size on MinigameSettingsMachine_C_UpdateAutoEndTeamThreshold");
static_assert(offsetof(MinigameSettingsMachine_C_UpdateAutoEndTeamThreshold, Minigame) == 0x000000, "Member 'MinigameSettingsMachine_C_UpdateAutoEndTeamThreshold::Minigame' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_UpdateAutoEndTeamThreshold, CallFunc_HasAuthority_ReturnValue) == 0x000008, "Member 'MinigameSettingsMachine_C_UpdateAutoEndTeamThreshold::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_UpdateAutoEndTeamThreshold, CallFunc_GetCurrentMinigame_Minigame) == 0x000010, "Member 'MinigameSettingsMachine_C_UpdateAutoEndTeamThreshold::CallFunc_GetCurrentMinigame_Minigame' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_UpdateAutoEndTeamThreshold, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'MinigameSettingsMachine_C_UpdateAutoEndTeamThreshold::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function MinigameSettingsMachine.MinigameSettingsMachine_C.UpdateTeamToMoveToWhenOutOfSpawns
// 0x0028 (0x0028 - 0x0000)
struct MinigameSettingsMachine_C_UpdateTeamToMoveToWhenOutOfSpawns final
{
public:
	class AFortMinigame*                          Minigame;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Subtract_ByteByte_ReturnValue;            // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortMinigame*                          CallFunc_GetCurrentMinigame_Minigame;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Add_ByteByte_ReturnValue;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MinigameSettingsMachine_C_UpdateTeamToMoveToWhenOutOfSpawns) == 0x000008, "Wrong alignment on MinigameSettingsMachine_C_UpdateTeamToMoveToWhenOutOfSpawns");
static_assert(sizeof(MinigameSettingsMachine_C_UpdateTeamToMoveToWhenOutOfSpawns) == 0x000028, "Wrong size on MinigameSettingsMachine_C_UpdateTeamToMoveToWhenOutOfSpawns");
static_assert(offsetof(MinigameSettingsMachine_C_UpdateTeamToMoveToWhenOutOfSpawns, Minigame) == 0x000000, "Member 'MinigameSettingsMachine_C_UpdateTeamToMoveToWhenOutOfSpawns::Minigame' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_UpdateTeamToMoveToWhenOutOfSpawns, CallFunc_HasAuthority_ReturnValue) == 0x000008, "Member 'MinigameSettingsMachine_C_UpdateTeamToMoveToWhenOutOfSpawns::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_UpdateTeamToMoveToWhenOutOfSpawns, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'MinigameSettingsMachine_C_UpdateTeamToMoveToWhenOutOfSpawns::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_UpdateTeamToMoveToWhenOutOfSpawns, CallFunc_Clamp_ReturnValue) == 0x00000C, "Member 'MinigameSettingsMachine_C_UpdateTeamToMoveToWhenOutOfSpawns::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_UpdateTeamToMoveToWhenOutOfSpawns, K2Node_SwitchInteger_CmpSuccess) == 0x000010, "Member 'MinigameSettingsMachine_C_UpdateTeamToMoveToWhenOutOfSpawns::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_UpdateTeamToMoveToWhenOutOfSpawns, CallFunc_Conv_IntToByte_ReturnValue) == 0x000011, "Member 'MinigameSettingsMachine_C_UpdateTeamToMoveToWhenOutOfSpawns::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_UpdateTeamToMoveToWhenOutOfSpawns, CallFunc_MakeLiteralByte_ReturnValue) == 0x000012, "Member 'MinigameSettingsMachine_C_UpdateTeamToMoveToWhenOutOfSpawns::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_UpdateTeamToMoveToWhenOutOfSpawns, CallFunc_Subtract_ByteByte_ReturnValue) == 0x000013, "Member 'MinigameSettingsMachine_C_UpdateTeamToMoveToWhenOutOfSpawns::CallFunc_Subtract_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_UpdateTeamToMoveToWhenOutOfSpawns, CallFunc_GetCurrentMinigame_Minigame) == 0x000018, "Member 'MinigameSettingsMachine_C_UpdateTeamToMoveToWhenOutOfSpawns::CallFunc_GetCurrentMinigame_Minigame' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_UpdateTeamToMoveToWhenOutOfSpawns, CallFunc_Add_ByteByte_ReturnValue) == 0x000020, "Member 'MinigameSettingsMachine_C_UpdateTeamToMoveToWhenOutOfSpawns::CallFunc_Add_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_UpdateTeamToMoveToWhenOutOfSpawns, CallFunc_GetValidValue_ReturnValue) == 0x000021, "Member 'MinigameSettingsMachine_C_UpdateTeamToMoveToWhenOutOfSpawns::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");

// Function MinigameSettingsMachine.MinigameSettingsMachine_C.UpdateEndConditions
// 0x0030 (0x0030 - 0x0000)
struct MinigameSettingsMachine_C_UpdateEndConditions final
{
public:
	TArray<struct FFortMinigameStatQuery>         EndConditions;                                     // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	class AFortMinigame*                          Minigame;                                          // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryAddEndCondition_CollectItems_bResult;  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryAddEndCondition_Kills_bResult;         // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortMinigame*                          CallFunc_GetCurrentMinigame_Minigame;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MinigameSettingsMachine_C_UpdateEndConditions) == 0x000008, "Wrong alignment on MinigameSettingsMachine_C_UpdateEndConditions");
static_assert(sizeof(MinigameSettingsMachine_C_UpdateEndConditions) == 0x000030, "Wrong size on MinigameSettingsMachine_C_UpdateEndConditions");
static_assert(offsetof(MinigameSettingsMachine_C_UpdateEndConditions, EndConditions) == 0x000000, "Member 'MinigameSettingsMachine_C_UpdateEndConditions::EndConditions' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_UpdateEndConditions, Minigame) == 0x000010, "Member 'MinigameSettingsMachine_C_UpdateEndConditions::Minigame' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_UpdateEndConditions, CallFunc_TryAddEndCondition_CollectItems_bResult) == 0x000018, "Member 'MinigameSettingsMachine_C_UpdateEndConditions::CallFunc_TryAddEndCondition_CollectItems_bResult' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_UpdateEndConditions, CallFunc_TryAddEndCondition_Kills_bResult) == 0x000019, "Member 'MinigameSettingsMachine_C_UpdateEndConditions::CallFunc_TryAddEndCondition_Kills_bResult' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_UpdateEndConditions, CallFunc_HasAuthority_ReturnValue) == 0x00001A, "Member 'MinigameSettingsMachine_C_UpdateEndConditions::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_UpdateEndConditions, CallFunc_GetCurrentMinigame_Minigame) == 0x000020, "Member 'MinigameSettingsMachine_C_UpdateEndConditions::CallFunc_GetCurrentMinigame_Minigame' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_UpdateEndConditions, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'MinigameSettingsMachine_C_UpdateEndConditions::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function MinigameSettingsMachine.MinigameSettingsMachine_C.UpdateAutoStart
// 0x0020 (0x0020 - 0x0000)
struct MinigameSettingsMachine_C_UpdateAutoStart final
{
public:
	class AFortMinigame*                          CurrentMinigame;                                   // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortMinigame*                          CallFunc_GetCurrentMinigame_Minigame;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MinigameSettingsMachine_C_UpdateAutoStart) == 0x000008, "Wrong alignment on MinigameSettingsMachine_C_UpdateAutoStart");
static_assert(sizeof(MinigameSettingsMachine_C_UpdateAutoStart) == 0x000020, "Wrong size on MinigameSettingsMachine_C_UpdateAutoStart");
static_assert(offsetof(MinigameSettingsMachine_C_UpdateAutoStart, CurrentMinigame) == 0x000000, "Member 'MinigameSettingsMachine_C_UpdateAutoStart::CurrentMinigame' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_UpdateAutoStart, CallFunc_HasAuthority_ReturnValue) == 0x000008, "Member 'MinigameSettingsMachine_C_UpdateAutoStart::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_UpdateAutoStart, CallFunc_GetCurrentMinigame_Minigame) == 0x000010, "Member 'MinigameSettingsMachine_C_UpdateAutoStart::CallFunc_GetCurrentMinigame_Minigame' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_UpdateAutoStart, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'MinigameSettingsMachine_C_UpdateAutoStart::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function MinigameSettingsMachine.MinigameSettingsMachine_C.TryAddEndCondition_Kills
// 0x0038 (0x0038 - 0x0000)
struct MinigameSettingsMachine_C_TryAddEndCondition_Kills final
{
public:
	TArray<struct FFortMinigameStatQuery>         EndConditions;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                          bResult;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bAdded;                                            // 0x0011(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortMinigameStatQuery                 K2Node_MakeStruct_FortMinigameStatQuery;           // 0x0018(0x0018)(NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MinigameSettingsMachine_C_TryAddEndCondition_Kills) == 0x000008, "Wrong alignment on MinigameSettingsMachine_C_TryAddEndCondition_Kills");
static_assert(sizeof(MinigameSettingsMachine_C_TryAddEndCondition_Kills) == 0x000038, "Wrong size on MinigameSettingsMachine_C_TryAddEndCondition_Kills");
static_assert(offsetof(MinigameSettingsMachine_C_TryAddEndCondition_Kills, EndConditions) == 0x000000, "Member 'MinigameSettingsMachine_C_TryAddEndCondition_Kills::EndConditions' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_TryAddEndCondition_Kills, bResult) == 0x000010, "Member 'MinigameSettingsMachine_C_TryAddEndCondition_Kills::bResult' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_TryAddEndCondition_Kills, bAdded) == 0x000011, "Member 'MinigameSettingsMachine_C_TryAddEndCondition_Kills::bAdded' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_TryAddEndCondition_Kills, K2Node_MakeStruct_FortMinigameStatQuery) == 0x000018, "Member 'MinigameSettingsMachine_C_TryAddEndCondition_Kills::K2Node_MakeStruct_FortMinigameStatQuery' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_TryAddEndCondition_Kills, CallFunc_Array_Add_ReturnValue) == 0x000030, "Member 'MinigameSettingsMachine_C_TryAddEndCondition_Kills::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_TryAddEndCondition_Kills, CallFunc_Greater_IntInt_ReturnValue) == 0x000034, "Member 'MinigameSettingsMachine_C_TryAddEndCondition_Kills::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function MinigameSettingsMachine.MinigameSettingsMachine_C.TryAddEndCondition_CollectItems
// 0x0038 (0x0038 - 0x0000)
struct MinigameSettingsMachine_C_TryAddEndCondition_CollectItems final
{
public:
	TArray<struct FFortMinigameStatQuery>         EndConditions;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                          bResult;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bAdded;                                            // 0x0011(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortMinigameStatQuery                 K2Node_MakeStruct_FortMinigameStatQuery;           // 0x0018(0x0018)(NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MinigameSettingsMachine_C_TryAddEndCondition_CollectItems) == 0x000008, "Wrong alignment on MinigameSettingsMachine_C_TryAddEndCondition_CollectItems");
static_assert(sizeof(MinigameSettingsMachine_C_TryAddEndCondition_CollectItems) == 0x000038, "Wrong size on MinigameSettingsMachine_C_TryAddEndCondition_CollectItems");
static_assert(offsetof(MinigameSettingsMachine_C_TryAddEndCondition_CollectItems, EndConditions) == 0x000000, "Member 'MinigameSettingsMachine_C_TryAddEndCondition_CollectItems::EndConditions' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_TryAddEndCondition_CollectItems, bResult) == 0x000010, "Member 'MinigameSettingsMachine_C_TryAddEndCondition_CollectItems::bResult' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_TryAddEndCondition_CollectItems, bAdded) == 0x000011, "Member 'MinigameSettingsMachine_C_TryAddEndCondition_CollectItems::bAdded' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_TryAddEndCondition_CollectItems, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000012, "Member 'MinigameSettingsMachine_C_TryAddEndCondition_CollectItems::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_TryAddEndCondition_CollectItems, CallFunc_Greater_IntInt_ReturnValue) == 0x000013, "Member 'MinigameSettingsMachine_C_TryAddEndCondition_CollectItems::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_TryAddEndCondition_CollectItems, K2Node_MakeStruct_FortMinigameStatQuery) == 0x000018, "Member 'MinigameSettingsMachine_C_TryAddEndCondition_CollectItems::K2Node_MakeStruct_FortMinigameStatQuery' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_TryAddEndCondition_CollectItems, CallFunc_Array_Add_ReturnValue) == 0x000030, "Member 'MinigameSettingsMachine_C_TryAddEndCondition_CollectItems::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function MinigameSettingsMachine.MinigameSettingsMachine_C.UpdateJoinInProgress
// 0x0020 (0x0020 - 0x0000)
struct MinigameSettingsMachine_C_UpdateJoinInProgress final
{
public:
	class AFortMinigame*                          NewLocalVar_1;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortMinigame*                          CallFunc_GetCurrentMinigame_Minigame;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MinigameSettingsMachine_C_UpdateJoinInProgress) == 0x000008, "Wrong alignment on MinigameSettingsMachine_C_UpdateJoinInProgress");
static_assert(sizeof(MinigameSettingsMachine_C_UpdateJoinInProgress) == 0x000020, "Wrong size on MinigameSettingsMachine_C_UpdateJoinInProgress");
static_assert(offsetof(MinigameSettingsMachine_C_UpdateJoinInProgress, NewLocalVar_1) == 0x000000, "Member 'MinigameSettingsMachine_C_UpdateJoinInProgress::NewLocalVar_1' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_UpdateJoinInProgress, CallFunc_HasAuthority_ReturnValue) == 0x000008, "Member 'MinigameSettingsMachine_C_UpdateJoinInProgress::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_UpdateJoinInProgress, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000009, "Member 'MinigameSettingsMachine_C_UpdateJoinInProgress::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_UpdateJoinInProgress, CallFunc_GetCurrentMinigame_Minigame) == 0x000010, "Member 'MinigameSettingsMachine_C_UpdateJoinInProgress::CallFunc_GetCurrentMinigame_Minigame' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_UpdateJoinInProgress, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'MinigameSettingsMachine_C_UpdateJoinInProgress::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function MinigameSettingsMachine.MinigameSettingsMachine_C.BlueprintCanInteract
// 0x0038 (0x0038 - 0x0000)
struct MinigameSettingsMachine_C_BlueprintCanInteract final
{
public:
	const class AFortPawn*                        InteractingPawn;                                   // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CanInteract;                                       // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerControllerAthena*            K2Node_DynamicCast_AsFort_Player_Controller_Athena; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortVolume*                            CallFunc_CanPlayerCreateInCurrentVolume_OutCurrentVolume; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanPlayerCreateInCurrentVolume_ReturnValue; // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MinigameSettingsMachine_C_BlueprintCanInteract) == 0x000008, "Wrong alignment on MinigameSettingsMachine_C_BlueprintCanInteract");
static_assert(sizeof(MinigameSettingsMachine_C_BlueprintCanInteract) == 0x000038, "Wrong size on MinigameSettingsMachine_C_BlueprintCanInteract");
static_assert(offsetof(MinigameSettingsMachine_C_BlueprintCanInteract, InteractingPawn) == 0x000000, "Member 'MinigameSettingsMachine_C_BlueprintCanInteract::InteractingPawn' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_BlueprintCanInteract, ReturnValue) == 0x000008, "Member 'MinigameSettingsMachine_C_BlueprintCanInteract::ReturnValue' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_BlueprintCanInteract, CanInteract) == 0x000009, "Member 'MinigameSettingsMachine_C_BlueprintCanInteract::CanInteract' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_BlueprintCanInteract, CallFunc_IsValid_ReturnValue) == 0x00000A, "Member 'MinigameSettingsMachine_C_BlueprintCanInteract::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_BlueprintCanInteract, CallFunc_GetController_ReturnValue) == 0x000010, "Member 'MinigameSettingsMachine_C_BlueprintCanInteract::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_BlueprintCanInteract, K2Node_DynamicCast_AsFort_Player_Controller_Athena) == 0x000018, "Member 'MinigameSettingsMachine_C_BlueprintCanInteract::K2Node_DynamicCast_AsFort_Player_Controller_Athena' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_BlueprintCanInteract, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'MinigameSettingsMachine_C_BlueprintCanInteract::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_BlueprintCanInteract, CallFunc_IsValid_ReturnValue1) == 0x000021, "Member 'MinigameSettingsMachine_C_BlueprintCanInteract::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_BlueprintCanInteract, CallFunc_CanPlayerCreateInCurrentVolume_OutCurrentVolume) == 0x000028, "Member 'MinigameSettingsMachine_C_BlueprintCanInteract::CallFunc_CanPlayerCreateInCurrentVolume_OutCurrentVolume' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_BlueprintCanInteract, CallFunc_CanPlayerCreateInCurrentVolume_ReturnValue) == 0x000030, "Member 'MinigameSettingsMachine_C_BlueprintCanInteract::CallFunc_CanPlayerCreateInCurrentVolume_ReturnValue' has a wrong offset!");

// Function MinigameSettingsMachine.MinigameSettingsMachine_C.BlueprintGetInteractionString
// 0x0020 (0x0020 - 0x0000)
struct MinigameSettingsMachine_C_BlueprintGetInteractionString final
{
public:
	const class AFortPawn*                        InteractingPawn;                                   // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(MinigameSettingsMachine_C_BlueprintGetInteractionString) == 0x000008, "Wrong alignment on MinigameSettingsMachine_C_BlueprintGetInteractionString");
static_assert(sizeof(MinigameSettingsMachine_C_BlueprintGetInteractionString) == 0x000020, "Wrong size on MinigameSettingsMachine_C_BlueprintGetInteractionString");
static_assert(offsetof(MinigameSettingsMachine_C_BlueprintGetInteractionString, InteractingPawn) == 0x000000, "Member 'MinigameSettingsMachine_C_BlueprintGetInteractionString::InteractingPawn' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_BlueprintGetInteractionString, ReturnValue) == 0x000008, "Member 'MinigameSettingsMachine_C_BlueprintGetInteractionString::ReturnValue' has a wrong offset!");

// Function MinigameSettingsMachine.MinigameSettingsMachine_C.BlueprintGetFailedInteractionString
// 0x0020 (0x0020 - 0x0000)
struct MinigameSettingsMachine_C_BlueprintGetFailedInteractionString final
{
public:
	const class AFortPawn*                        InteractingPawn;                                   // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(MinigameSettingsMachine_C_BlueprintGetFailedInteractionString) == 0x000008, "Wrong alignment on MinigameSettingsMachine_C_BlueprintGetFailedInteractionString");
static_assert(sizeof(MinigameSettingsMachine_C_BlueprintGetFailedInteractionString) == 0x000020, "Wrong size on MinigameSettingsMachine_C_BlueprintGetFailedInteractionString");
static_assert(offsetof(MinigameSettingsMachine_C_BlueprintGetFailedInteractionString, InteractingPawn) == 0x000000, "Member 'MinigameSettingsMachine_C_BlueprintGetFailedInteractionString::InteractingPawn' has a wrong offset!");
static_assert(offsetof(MinigameSettingsMachine_C_BlueprintGetFailedInteractionString, ReturnValue) == 0x000008, "Member 'MinigameSettingsMachine_C_BlueprintGetFailedInteractionString::ReturnValue' has a wrong offset!");

}

