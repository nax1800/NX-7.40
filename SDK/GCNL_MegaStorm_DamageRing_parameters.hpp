#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GCNL_MegaStorm_DamageRing

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GCNL_MegaStorm_DamageRing.GCNL_MegaStorm_DamageRing_C.ExecuteUbergraph_GCNL_MegaStorm_DamageRing
// 0x0238 (0x0238 - 0x0000)
struct GCNL_MegaStorm_DamageRing_C_ExecuteUbergraph_GCNL_MegaStorm_DamageRing final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_MyTarget1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 K2Node_Event_Parameters1;                          // 0x0018(0x00B8)(ConstParm, ContainsInstancedReference)
	TArray<class UParticleSystemComponent*>       K2Node_Event_ParticleComponents1;                  // 0x00D0(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	TArray<class UAudioComponent*>                K2Node_Event_AudioComponents1;                     // 0x00E0(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASafeZoneIndicator_C*                   K2Node_DynamicCast_AsSafe_Zone_Indicator;          // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue;           // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_MyTarget;                             // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 K2Node_Event_Parameters;                           // 0x0130(0x00B8)(ConstParm, ContainsInstancedReference)
	TArray<class UParticleSystemComponent*>       K2Node_Event_ParticleComponents;                   // 0x01E8(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	TArray<class UAudioComponent*>                K2Node_Event_AudioComponents;                      // 0x01F8(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	class UCameraShake*                           K2Node_Event_BurstCameraShakeInstance;             // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADecalActor*                            K2Node_Event_BurstDecalInstance;                   // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0218(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_224[0x4];                                      // 0x0224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASafeZoneIndicator_C*                   K2Node_DynamicCast_AsSafe_Zone_Indicator1;         // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GCNL_MegaStorm_DamageRing_C_ExecuteUbergraph_GCNL_MegaStorm_DamageRing) == 0x000008, "Wrong alignment on GCNL_MegaStorm_DamageRing_C_ExecuteUbergraph_GCNL_MegaStorm_DamageRing");
static_assert(sizeof(GCNL_MegaStorm_DamageRing_C_ExecuteUbergraph_GCNL_MegaStorm_DamageRing) == 0x000238, "Wrong size on GCNL_MegaStorm_DamageRing_C_ExecuteUbergraph_GCNL_MegaStorm_DamageRing");
static_assert(offsetof(GCNL_MegaStorm_DamageRing_C_ExecuteUbergraph_GCNL_MegaStorm_DamageRing, EntryPoint) == 0x000000, "Member 'GCNL_MegaStorm_DamageRing_C_ExecuteUbergraph_GCNL_MegaStorm_DamageRing::EntryPoint' has a wrong offset!");
static_assert(offsetof(GCNL_MegaStorm_DamageRing_C_ExecuteUbergraph_GCNL_MegaStorm_DamageRing, Temp_bool_Has_Been_Initd_Variable) == 0x000004, "Member 'GCNL_MegaStorm_DamageRing_C_ExecuteUbergraph_GCNL_MegaStorm_DamageRing::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(GCNL_MegaStorm_DamageRing_C_ExecuteUbergraph_GCNL_MegaStorm_DamageRing, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000008, "Member 'GCNL_MegaStorm_DamageRing_C_ExecuteUbergraph_GCNL_MegaStorm_DamageRing::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_MegaStorm_DamageRing_C_ExecuteUbergraph_GCNL_MegaStorm_DamageRing, K2Node_Event_MyTarget1) == 0x000010, "Member 'GCNL_MegaStorm_DamageRing_C_ExecuteUbergraph_GCNL_MegaStorm_DamageRing::K2Node_Event_MyTarget1' has a wrong offset!");
static_assert(offsetof(GCNL_MegaStorm_DamageRing_C_ExecuteUbergraph_GCNL_MegaStorm_DamageRing, K2Node_Event_Parameters1) == 0x000018, "Member 'GCNL_MegaStorm_DamageRing_C_ExecuteUbergraph_GCNL_MegaStorm_DamageRing::K2Node_Event_Parameters1' has a wrong offset!");
static_assert(offsetof(GCNL_MegaStorm_DamageRing_C_ExecuteUbergraph_GCNL_MegaStorm_DamageRing, K2Node_Event_ParticleComponents1) == 0x0000D0, "Member 'GCNL_MegaStorm_DamageRing_C_ExecuteUbergraph_GCNL_MegaStorm_DamageRing::K2Node_Event_ParticleComponents1' has a wrong offset!");
static_assert(offsetof(GCNL_MegaStorm_DamageRing_C_ExecuteUbergraph_GCNL_MegaStorm_DamageRing, K2Node_Event_AudioComponents1) == 0x0000E0, "Member 'GCNL_MegaStorm_DamageRing_C_ExecuteUbergraph_GCNL_MegaStorm_DamageRing::K2Node_Event_AudioComponents1' has a wrong offset!");
static_assert(offsetof(GCNL_MegaStorm_DamageRing_C_ExecuteUbergraph_GCNL_MegaStorm_DamageRing, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000F0, "Member 'GCNL_MegaStorm_DamageRing_C_ExecuteUbergraph_GCNL_MegaStorm_DamageRing::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_MegaStorm_DamageRing_C_ExecuteUbergraph_GCNL_MegaStorm_DamageRing, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x0000F8, "Member 'GCNL_MegaStorm_DamageRing_C_ExecuteUbergraph_GCNL_MegaStorm_DamageRing::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_MegaStorm_DamageRing_C_ExecuteUbergraph_GCNL_MegaStorm_DamageRing, K2Node_DynamicCast_AsSafe_Zone_Indicator) == 0x000100, "Member 'GCNL_MegaStorm_DamageRing_C_ExecuteUbergraph_GCNL_MegaStorm_DamageRing::K2Node_DynamicCast_AsSafe_Zone_Indicator' has a wrong offset!");
static_assert(offsetof(GCNL_MegaStorm_DamageRing_C_ExecuteUbergraph_GCNL_MegaStorm_DamageRing, K2Node_DynamicCast_bSuccess) == 0x000108, "Member 'GCNL_MegaStorm_DamageRing_C_ExecuteUbergraph_GCNL_MegaStorm_DamageRing::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GCNL_MegaStorm_DamageRing_C_ExecuteUbergraph_GCNL_MegaStorm_DamageRing, CallFunc_Conv_FloatToVector_ReturnValue) == 0x00010C, "Member 'GCNL_MegaStorm_DamageRing_C_ExecuteUbergraph_GCNL_MegaStorm_DamageRing::CallFunc_Conv_FloatToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_MegaStorm_DamageRing_C_ExecuteUbergraph_GCNL_MegaStorm_DamageRing, CallFunc_BreakVector_X) == 0x000118, "Member 'GCNL_MegaStorm_DamageRing_C_ExecuteUbergraph_GCNL_MegaStorm_DamageRing::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(GCNL_MegaStorm_DamageRing_C_ExecuteUbergraph_GCNL_MegaStorm_DamageRing, CallFunc_BreakVector_Y) == 0x00011C, "Member 'GCNL_MegaStorm_DamageRing_C_ExecuteUbergraph_GCNL_MegaStorm_DamageRing::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(GCNL_MegaStorm_DamageRing_C_ExecuteUbergraph_GCNL_MegaStorm_DamageRing, CallFunc_BreakVector_Z) == 0x000120, "Member 'GCNL_MegaStorm_DamageRing_C_ExecuteUbergraph_GCNL_MegaStorm_DamageRing::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(GCNL_MegaStorm_DamageRing_C_ExecuteUbergraph_GCNL_MegaStorm_DamageRing, K2Node_Event_MyTarget) == 0x000128, "Member 'GCNL_MegaStorm_DamageRing_C_ExecuteUbergraph_GCNL_MegaStorm_DamageRing::K2Node_Event_MyTarget' has a wrong offset!");
static_assert(offsetof(GCNL_MegaStorm_DamageRing_C_ExecuteUbergraph_GCNL_MegaStorm_DamageRing, K2Node_Event_Parameters) == 0x000130, "Member 'GCNL_MegaStorm_DamageRing_C_ExecuteUbergraph_GCNL_MegaStorm_DamageRing::K2Node_Event_Parameters' has a wrong offset!");
static_assert(offsetof(GCNL_MegaStorm_DamageRing_C_ExecuteUbergraph_GCNL_MegaStorm_DamageRing, K2Node_Event_ParticleComponents) == 0x0001E8, "Member 'GCNL_MegaStorm_DamageRing_C_ExecuteUbergraph_GCNL_MegaStorm_DamageRing::K2Node_Event_ParticleComponents' has a wrong offset!");
static_assert(offsetof(GCNL_MegaStorm_DamageRing_C_ExecuteUbergraph_GCNL_MegaStorm_DamageRing, K2Node_Event_AudioComponents) == 0x0001F8, "Member 'GCNL_MegaStorm_DamageRing_C_ExecuteUbergraph_GCNL_MegaStorm_DamageRing::K2Node_Event_AudioComponents' has a wrong offset!");
static_assert(offsetof(GCNL_MegaStorm_DamageRing_C_ExecuteUbergraph_GCNL_MegaStorm_DamageRing, K2Node_Event_BurstCameraShakeInstance) == 0x000208, "Member 'GCNL_MegaStorm_DamageRing_C_ExecuteUbergraph_GCNL_MegaStorm_DamageRing::K2Node_Event_BurstCameraShakeInstance' has a wrong offset!");
static_assert(offsetof(GCNL_MegaStorm_DamageRing_C_ExecuteUbergraph_GCNL_MegaStorm_DamageRing, K2Node_Event_BurstDecalInstance) == 0x000210, "Member 'GCNL_MegaStorm_DamageRing_C_ExecuteUbergraph_GCNL_MegaStorm_DamageRing::K2Node_Event_BurstDecalInstance' has a wrong offset!");
static_assert(offsetof(GCNL_MegaStorm_DamageRing_C_ExecuteUbergraph_GCNL_MegaStorm_DamageRing, CallFunc_MakeVector_ReturnValue) == 0x000218, "Member 'GCNL_MegaStorm_DamageRing_C_ExecuteUbergraph_GCNL_MegaStorm_DamageRing::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_MegaStorm_DamageRing_C_ExecuteUbergraph_GCNL_MegaStorm_DamageRing, K2Node_DynamicCast_AsSafe_Zone_Indicator1) == 0x000228, "Member 'GCNL_MegaStorm_DamageRing_C_ExecuteUbergraph_GCNL_MegaStorm_DamageRing::K2Node_DynamicCast_AsSafe_Zone_Indicator1' has a wrong offset!");
static_assert(offsetof(GCNL_MegaStorm_DamageRing_C_ExecuteUbergraph_GCNL_MegaStorm_DamageRing, K2Node_DynamicCast_bSuccess1) == 0x000230, "Member 'GCNL_MegaStorm_DamageRing_C_ExecuteUbergraph_GCNL_MegaStorm_DamageRing::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(GCNL_MegaStorm_DamageRing_C_ExecuteUbergraph_GCNL_MegaStorm_DamageRing, Temp_bool_IsClosed_Variable) == 0x000231, "Member 'GCNL_MegaStorm_DamageRing_C_ExecuteUbergraph_GCNL_MegaStorm_DamageRing::Temp_bool_IsClosed_Variable' has a wrong offset!");

// Function GCNL_MegaStorm_DamageRing.GCNL_MegaStorm_DamageRing_C.OnRemoval
// 0x00F0 (0x00F0 - 0x0000)
struct GCNL_MegaStorm_DamageRing_C_OnRemoval final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00B8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UParticleSystemComponent*>       ParticleComponents;                                // 0x00C0(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<class UAudioComponent*>                AudioComponents;                                   // 0x00D0(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	class UCameraShake*                           BurstCameraShakeInstance;                          // 0x00E0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADecalActor*                            BurstDecalInstance;                                // 0x00E8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCNL_MegaStorm_DamageRing_C_OnRemoval) == 0x000008, "Wrong alignment on GCNL_MegaStorm_DamageRing_C_OnRemoval");
static_assert(sizeof(GCNL_MegaStorm_DamageRing_C_OnRemoval) == 0x0000F0, "Wrong size on GCNL_MegaStorm_DamageRing_C_OnRemoval");
static_assert(offsetof(GCNL_MegaStorm_DamageRing_C_OnRemoval, MyTarget) == 0x000000, "Member 'GCNL_MegaStorm_DamageRing_C_OnRemoval::MyTarget' has a wrong offset!");
static_assert(offsetof(GCNL_MegaStorm_DamageRing_C_OnRemoval, Parameters) == 0x000008, "Member 'GCNL_MegaStorm_DamageRing_C_OnRemoval::Parameters' has a wrong offset!");
static_assert(offsetof(GCNL_MegaStorm_DamageRing_C_OnRemoval, ParticleComponents) == 0x0000C0, "Member 'GCNL_MegaStorm_DamageRing_C_OnRemoval::ParticleComponents' has a wrong offset!");
static_assert(offsetof(GCNL_MegaStorm_DamageRing_C_OnRemoval, AudioComponents) == 0x0000D0, "Member 'GCNL_MegaStorm_DamageRing_C_OnRemoval::AudioComponents' has a wrong offset!");
static_assert(offsetof(GCNL_MegaStorm_DamageRing_C_OnRemoval, BurstCameraShakeInstance) == 0x0000E0, "Member 'GCNL_MegaStorm_DamageRing_C_OnRemoval::BurstCameraShakeInstance' has a wrong offset!");
static_assert(offsetof(GCNL_MegaStorm_DamageRing_C_OnRemoval, BurstDecalInstance) == 0x0000E8, "Member 'GCNL_MegaStorm_DamageRing_C_OnRemoval::BurstDecalInstance' has a wrong offset!");

// Function GCNL_MegaStorm_DamageRing.GCNL_MegaStorm_DamageRing_C.OnLoopingStart
// 0x00E0 (0x00E0 - 0x0000)
struct GCNL_MegaStorm_DamageRing_C_OnLoopingStart final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00B8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UParticleSystemComponent*>       ParticleComponents;                                // 0x00C0(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<class UAudioComponent*>                AudioComponents;                                   // 0x00D0(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
};
static_assert(alignof(GCNL_MegaStorm_DamageRing_C_OnLoopingStart) == 0x000008, "Wrong alignment on GCNL_MegaStorm_DamageRing_C_OnLoopingStart");
static_assert(sizeof(GCNL_MegaStorm_DamageRing_C_OnLoopingStart) == 0x0000E0, "Wrong size on GCNL_MegaStorm_DamageRing_C_OnLoopingStart");
static_assert(offsetof(GCNL_MegaStorm_DamageRing_C_OnLoopingStart, MyTarget) == 0x000000, "Member 'GCNL_MegaStorm_DamageRing_C_OnLoopingStart::MyTarget' has a wrong offset!");
static_assert(offsetof(GCNL_MegaStorm_DamageRing_C_OnLoopingStart, Parameters) == 0x000008, "Member 'GCNL_MegaStorm_DamageRing_C_OnLoopingStart::Parameters' has a wrong offset!");
static_assert(offsetof(GCNL_MegaStorm_DamageRing_C_OnLoopingStart, ParticleComponents) == 0x0000C0, "Member 'GCNL_MegaStorm_DamageRing_C_OnLoopingStart::ParticleComponents' has a wrong offset!");
static_assert(offsetof(GCNL_MegaStorm_DamageRing_C_OnLoopingStart, AudioComponents) == 0x0000D0, "Member 'GCNL_MegaStorm_DamageRing_C_OnLoopingStart::AudioComponents' has a wrong offset!");

}

