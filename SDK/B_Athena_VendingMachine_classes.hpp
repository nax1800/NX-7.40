#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Athena_VendingMachine

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_Athena_VendingMachine.B_Athena_VendingMachine_C
// 0x0140 (0x09F0 - 0x08B0)
class AB_Athena_VendingMachine_C final : public ABuildingItemCollectorActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x08B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USpotLightComponent*                    SpotLight;                                         // 0x08B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UForceFeedbackComponent*                ForceFeedbackFail;                                 // 0x08C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UForceFeedbackComponent*                ForceFeedbackSuccess;                              // 0x08C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        VendingMachine_Ambient;                            // 0x08D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_Loot_Effect_Vending;                             // 0x08D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_VendingMachineQuest;                            // 0x08E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x08E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         VendWobble_Flash_70FB301E43A001CE1340FE8051EE86B5; // 0x08F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         VendWobble_WobbleTime_70FB301E43A001CE1340FE8051EE86B5; // 0x08F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            VendWobble__Direction_70FB301E43A001CE1340FE8051EE86B5; // 0x08F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8F9[0x7];                                      // 0x08F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     VendWobble;                                        // 0x0900(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SwitchHitch_Slide_A93D31CA462BFD95FDDD9E8A0BE99DA5; // 0x0908(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SwitchHitch_Flash_A93D31CA462BFD95FDDD9E8A0BE99DA5; // 0x090C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SwitchHitch_Wobble_A93D31CA462BFD95FDDD9E8A0BE99DA5; // 0x0910(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            SwitchHitch__Direction_A93D31CA462BFD95FDDD9E8A0BE99DA5; // 0x0914(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_915[0x3];                                      // 0x0915(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     SwitchHitch;                                       // 0x0918(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               MontiorMat;                                        // 0x0920(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               MetalMat;                                          // 0x0928(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentCaptureCount;                               // 0x0930(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_934[0x4];                                      // 0x0934(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Vend_String;                                       // 0x0938(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class USoundBase*                             SearchSound;                                       // 0x0950(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             VendFailedSound;                                   // 0x0958(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             CycleSound;                                        // 0x0960(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CostAmount;                                        // 0x0968(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_96C[0x4];                                      // 0x096C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               MaterialType;                                      // 0x0970(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Vend_Succeeded_Sound;                              // 0x0978(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          VendSuccess;                                       // 0x0980(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          WasHit;                                            // 0x0981(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_982[0x2];                                      // 0x0982(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CycleSoundVolume;                                  // 0x0984(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCurveTableRowHandle                   TossOnGroundSetting;                               // 0x0988(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FText                                   Wood_String;                                       // 0x0998(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   Stone_String;                                      // 0x09B0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   Metal_String;                                      // 0x09C8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	EFortRarity                                   OverrideVendingMachineRarity;                      // 0x09E0(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9E1[0x7];                                      // 0x09E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Ambient_SoundCue;                                  // 0x09E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_B_Athena_VendingMachine(int32 EntryPoint);
	void ReceiveBeginPlay();
	void OnForcedCycle();
	void PlayVendFailFX();
	void UpdateCollectorsActiveItem(int32 StartingSeedValue, class UFortWorldItemDefinition* InputItem, class UTexture* InputTexture, int32 CurrentGoal, int32 CurrentCollectedAmount, int32 Param_CurrentCaptureCount, class UTexture* OutputTexture);
	void PlayVendFX();
	void BlueprintOnBeginInteract();
	void BlueprintOnInteract(const class AFortPawn* InteractingPawn);
	void VendWobble__Start_FF_Time__EventFunc();
	void VendWobble__UpdateFunc();
	void VendWobble__FinishedFunc();
	void SwitchHitch__UpdateFunc();
	void SwitchHitch__FinishedFunc();
	void UserConstructionScript();
	void SetRarityColors(const struct FLinearColor& Color);

	class FText BlueprintGetInteractionString(const class AFortPawn* InteractingPawn) const;
	bool GetOverrideRarity(EFortRarity* Rarity) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_Athena_VendingMachine_C">();
	}
	static class AB_Athena_VendingMachine_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_Athena_VendingMachine_C>();
	}
};
static_assert(alignof(AB_Athena_VendingMachine_C) == 0x000008, "Wrong alignment on AB_Athena_VendingMachine_C");
static_assert(sizeof(AB_Athena_VendingMachine_C) == 0x0009F0, "Wrong size on AB_Athena_VendingMachine_C");
static_assert(offsetof(AB_Athena_VendingMachine_C, UberGraphFrame) == 0x0008B0, "Member 'AB_Athena_VendingMachine_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AB_Athena_VendingMachine_C, SpotLight) == 0x0008B8, "Member 'AB_Athena_VendingMachine_C::SpotLight' has a wrong offset!");
static_assert(offsetof(AB_Athena_VendingMachine_C, ForceFeedbackFail) == 0x0008C0, "Member 'AB_Athena_VendingMachine_C::ForceFeedbackFail' has a wrong offset!");
static_assert(offsetof(AB_Athena_VendingMachine_C, ForceFeedbackSuccess) == 0x0008C8, "Member 'AB_Athena_VendingMachine_C::ForceFeedbackSuccess' has a wrong offset!");
static_assert(offsetof(AB_Athena_VendingMachine_C, VendingMachine_Ambient) == 0x0008D0, "Member 'AB_Athena_VendingMachine_C::VendingMachine_Ambient' has a wrong offset!");
static_assert(offsetof(AB_Athena_VendingMachine_C, P_Loot_Effect_Vending) == 0x0008D8, "Member 'AB_Athena_VendingMachine_C::P_Loot_Effect_Vending' has a wrong offset!");
static_assert(offsetof(AB_Athena_VendingMachine_C, SM_VendingMachineQuest) == 0x0008E0, "Member 'AB_Athena_VendingMachine_C::SM_VendingMachineQuest' has a wrong offset!");
static_assert(offsetof(AB_Athena_VendingMachine_C, DefaultSceneRoot) == 0x0008E8, "Member 'AB_Athena_VendingMachine_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AB_Athena_VendingMachine_C, VendWobble_Flash_70FB301E43A001CE1340FE8051EE86B5) == 0x0008F0, "Member 'AB_Athena_VendingMachine_C::VendWobble_Flash_70FB301E43A001CE1340FE8051EE86B5' has a wrong offset!");
static_assert(offsetof(AB_Athena_VendingMachine_C, VendWobble_WobbleTime_70FB301E43A001CE1340FE8051EE86B5) == 0x0008F4, "Member 'AB_Athena_VendingMachine_C::VendWobble_WobbleTime_70FB301E43A001CE1340FE8051EE86B5' has a wrong offset!");
static_assert(offsetof(AB_Athena_VendingMachine_C, VendWobble__Direction_70FB301E43A001CE1340FE8051EE86B5) == 0x0008F8, "Member 'AB_Athena_VendingMachine_C::VendWobble__Direction_70FB301E43A001CE1340FE8051EE86B5' has a wrong offset!");
static_assert(offsetof(AB_Athena_VendingMachine_C, VendWobble) == 0x000900, "Member 'AB_Athena_VendingMachine_C::VendWobble' has a wrong offset!");
static_assert(offsetof(AB_Athena_VendingMachine_C, SwitchHitch_Slide_A93D31CA462BFD95FDDD9E8A0BE99DA5) == 0x000908, "Member 'AB_Athena_VendingMachine_C::SwitchHitch_Slide_A93D31CA462BFD95FDDD9E8A0BE99DA5' has a wrong offset!");
static_assert(offsetof(AB_Athena_VendingMachine_C, SwitchHitch_Flash_A93D31CA462BFD95FDDD9E8A0BE99DA5) == 0x00090C, "Member 'AB_Athena_VendingMachine_C::SwitchHitch_Flash_A93D31CA462BFD95FDDD9E8A0BE99DA5' has a wrong offset!");
static_assert(offsetof(AB_Athena_VendingMachine_C, SwitchHitch_Wobble_A93D31CA462BFD95FDDD9E8A0BE99DA5) == 0x000910, "Member 'AB_Athena_VendingMachine_C::SwitchHitch_Wobble_A93D31CA462BFD95FDDD9E8A0BE99DA5' has a wrong offset!");
static_assert(offsetof(AB_Athena_VendingMachine_C, SwitchHitch__Direction_A93D31CA462BFD95FDDD9E8A0BE99DA5) == 0x000914, "Member 'AB_Athena_VendingMachine_C::SwitchHitch__Direction_A93D31CA462BFD95FDDD9E8A0BE99DA5' has a wrong offset!");
static_assert(offsetof(AB_Athena_VendingMachine_C, SwitchHitch) == 0x000918, "Member 'AB_Athena_VendingMachine_C::SwitchHitch' has a wrong offset!");
static_assert(offsetof(AB_Athena_VendingMachine_C, MontiorMat) == 0x000920, "Member 'AB_Athena_VendingMachine_C::MontiorMat' has a wrong offset!");
static_assert(offsetof(AB_Athena_VendingMachine_C, MetalMat) == 0x000928, "Member 'AB_Athena_VendingMachine_C::MetalMat' has a wrong offset!");
static_assert(offsetof(AB_Athena_VendingMachine_C, CurrentCaptureCount) == 0x000930, "Member 'AB_Athena_VendingMachine_C::CurrentCaptureCount' has a wrong offset!");
static_assert(offsetof(AB_Athena_VendingMachine_C, Vend_String) == 0x000938, "Member 'AB_Athena_VendingMachine_C::Vend_String' has a wrong offset!");
static_assert(offsetof(AB_Athena_VendingMachine_C, SearchSound) == 0x000950, "Member 'AB_Athena_VendingMachine_C::SearchSound' has a wrong offset!");
static_assert(offsetof(AB_Athena_VendingMachine_C, VendFailedSound) == 0x000958, "Member 'AB_Athena_VendingMachine_C::VendFailedSound' has a wrong offset!");
static_assert(offsetof(AB_Athena_VendingMachine_C, CycleSound) == 0x000960, "Member 'AB_Athena_VendingMachine_C::CycleSound' has a wrong offset!");
static_assert(offsetof(AB_Athena_VendingMachine_C, CostAmount) == 0x000968, "Member 'AB_Athena_VendingMachine_C::CostAmount' has a wrong offset!");
static_assert(offsetof(AB_Athena_VendingMachine_C, MaterialType) == 0x000970, "Member 'AB_Athena_VendingMachine_C::MaterialType' has a wrong offset!");
static_assert(offsetof(AB_Athena_VendingMachine_C, Vend_Succeeded_Sound) == 0x000978, "Member 'AB_Athena_VendingMachine_C::Vend_Succeeded_Sound' has a wrong offset!");
static_assert(offsetof(AB_Athena_VendingMachine_C, VendSuccess) == 0x000980, "Member 'AB_Athena_VendingMachine_C::VendSuccess' has a wrong offset!");
static_assert(offsetof(AB_Athena_VendingMachine_C, WasHit) == 0x000981, "Member 'AB_Athena_VendingMachine_C::WasHit' has a wrong offset!");
static_assert(offsetof(AB_Athena_VendingMachine_C, CycleSoundVolume) == 0x000984, "Member 'AB_Athena_VendingMachine_C::CycleSoundVolume' has a wrong offset!");
static_assert(offsetof(AB_Athena_VendingMachine_C, TossOnGroundSetting) == 0x000988, "Member 'AB_Athena_VendingMachine_C::TossOnGroundSetting' has a wrong offset!");
static_assert(offsetof(AB_Athena_VendingMachine_C, Wood_String) == 0x000998, "Member 'AB_Athena_VendingMachine_C::Wood_String' has a wrong offset!");
static_assert(offsetof(AB_Athena_VendingMachine_C, Stone_String) == 0x0009B0, "Member 'AB_Athena_VendingMachine_C::Stone_String' has a wrong offset!");
static_assert(offsetof(AB_Athena_VendingMachine_C, Metal_String) == 0x0009C8, "Member 'AB_Athena_VendingMachine_C::Metal_String' has a wrong offset!");
static_assert(offsetof(AB_Athena_VendingMachine_C, OverrideVendingMachineRarity) == 0x0009E0, "Member 'AB_Athena_VendingMachine_C::OverrideVendingMachineRarity' has a wrong offset!");
static_assert(offsetof(AB_Athena_VendingMachine_C, Ambient_SoundCue) == 0x0009E8, "Member 'AB_Athena_VendingMachine_C::Ambient_SoundCue' has a wrong offset!");

}

