#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: QuestMapLayoutNode

#include "Basic.hpp"


namespace SDK::Params
{

// Function QuestMapLayoutNode.QuestMapLayoutNode_C.ExecuteUbergraph_QuestMapLayoutNode
// 0x0008 (0x0008 - 0x0000)
struct QuestMapLayoutNode_C_ExecuteUbergraph_QuestMapLayoutNode final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(QuestMapLayoutNode_C_ExecuteUbergraph_QuestMapLayoutNode) == 0x000004, "Wrong alignment on QuestMapLayoutNode_C_ExecuteUbergraph_QuestMapLayoutNode");
static_assert(sizeof(QuestMapLayoutNode_C_ExecuteUbergraph_QuestMapLayoutNode) == 0x000008, "Wrong size on QuestMapLayoutNode_C_ExecuteUbergraph_QuestMapLayoutNode");
static_assert(offsetof(QuestMapLayoutNode_C_ExecuteUbergraph_QuestMapLayoutNode, EntryPoint) == 0x000000, "Member 'QuestMapLayoutNode_C_ExecuteUbergraph_QuestMapLayoutNode::EntryPoint' has a wrong offset!");
static_assert(offsetof(QuestMapLayoutNode_C_ExecuteUbergraph_QuestMapLayoutNode, K2Node_Event_IsDesignTime) == 0x000004, "Member 'QuestMapLayoutNode_C_ExecuteUbergraph_QuestMapLayoutNode::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function QuestMapLayoutNode.QuestMapLayoutNode_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct QuestMapLayoutNode_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(QuestMapLayoutNode_C_PreConstruct) == 0x000001, "Wrong alignment on QuestMapLayoutNode_C_PreConstruct");
static_assert(sizeof(QuestMapLayoutNode_C_PreConstruct) == 0x000001, "Wrong size on QuestMapLayoutNode_C_PreConstruct");
static_assert(offsetof(QuestMapLayoutNode_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'QuestMapLayoutNode_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function QuestMapLayoutNode.QuestMapLayoutNode_C.SetQuestTileProps
// 0x0010 (0x0010 - 0x0000)
struct QuestMapLayoutNode_C_SetQuestTileProps final
{
public:
	class UQuestMiniTile2_C*                      K2Node_DynamicCast_AsQuest_Mini_Tile_2;            // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(QuestMapLayoutNode_C_SetQuestTileProps) == 0x000008, "Wrong alignment on QuestMapLayoutNode_C_SetQuestTileProps");
static_assert(sizeof(QuestMapLayoutNode_C_SetQuestTileProps) == 0x000010, "Wrong size on QuestMapLayoutNode_C_SetQuestTileProps");
static_assert(offsetof(QuestMapLayoutNode_C_SetQuestTileProps, K2Node_DynamicCast_AsQuest_Mini_Tile_2) == 0x000000, "Member 'QuestMapLayoutNode_C_SetQuestTileProps::K2Node_DynamicCast_AsQuest_Mini_Tile_2' has a wrong offset!");
static_assert(offsetof(QuestMapLayoutNode_C_SetQuestTileProps, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'QuestMapLayoutNode_C_SetQuestTileProps::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

