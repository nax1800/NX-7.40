#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DailyRewardsCurrent

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK::Params
{

// Function DailyRewardsCurrent.DailyRewardsCurrent_C.ExecuteUbergraph_DailyRewardsCurrent
// 0x0004 (0x0004 - 0x0000)
struct DailyRewardsCurrent_C_ExecuteUbergraph_DailyRewardsCurrent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DailyRewardsCurrent_C_ExecuteUbergraph_DailyRewardsCurrent) == 0x000004, "Wrong alignment on DailyRewardsCurrent_C_ExecuteUbergraph_DailyRewardsCurrent");
static_assert(sizeof(DailyRewardsCurrent_C_ExecuteUbergraph_DailyRewardsCurrent) == 0x000004, "Wrong size on DailyRewardsCurrent_C_ExecuteUbergraph_DailyRewardsCurrent");
static_assert(offsetof(DailyRewardsCurrent_C_ExecuteUbergraph_DailyRewardsCurrent, EntryPoint) == 0x000000, "Member 'DailyRewardsCurrent_C_ExecuteUbergraph_DailyRewardsCurrent::EntryPoint' has a wrong offset!");

// Function DailyRewardsCurrent.DailyRewardsCurrent_C.Set Item
// 0x0038 (0x0038 - 0x0000)
struct DailyRewardsCurrent_C_Set_Item final
{
public:
	class UFortItem*                              Item_To_Represent;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Quantity;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItemDefinition*                    CallFunc_GetItemDefinitionBP_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortItem*                              CallFunc_CreateTemporaryInstanceFromExistingItemBP_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetDisplayName_ReturnValue;               // 0x0020(0x0018)()
};
static_assert(alignof(DailyRewardsCurrent_C_Set_Item) == 0x000008, "Wrong alignment on DailyRewardsCurrent_C_Set_Item");
static_assert(sizeof(DailyRewardsCurrent_C_Set_Item) == 0x000038, "Wrong size on DailyRewardsCurrent_C_Set_Item");
static_assert(offsetof(DailyRewardsCurrent_C_Set_Item, Item_To_Represent) == 0x000000, "Member 'DailyRewardsCurrent_C_Set_Item::Item_To_Represent' has a wrong offset!");
static_assert(offsetof(DailyRewardsCurrent_C_Set_Item, Quantity) == 0x000008, "Member 'DailyRewardsCurrent_C_Set_Item::Quantity' has a wrong offset!");
static_assert(offsetof(DailyRewardsCurrent_C_Set_Item, CallFunc_GetItemDefinitionBP_ReturnValue) == 0x000010, "Member 'DailyRewardsCurrent_C_Set_Item::CallFunc_GetItemDefinitionBP_ReturnValue' has a wrong offset!");
static_assert(offsetof(DailyRewardsCurrent_C_Set_Item, CallFunc_CreateTemporaryInstanceFromExistingItemBP_ReturnValue) == 0x000018, "Member 'DailyRewardsCurrent_C_Set_Item::CallFunc_CreateTemporaryInstanceFromExistingItemBP_ReturnValue' has a wrong offset!");
static_assert(offsetof(DailyRewardsCurrent_C_Set_Item, CallFunc_GetDisplayName_ReturnValue) == 0x000020, "Member 'DailyRewardsCurrent_C_Set_Item::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");

// Function DailyRewardsCurrent.DailyRewardsCurrent_C.Set Item Flare
// 0x00F0 (0x00F0 - 0x0000)
struct DailyRewardsCurrent_C_Set_Item_Flare final
{
public:
	struct FVector2D                              Temp_struct_Variable;                              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable1;                              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable1;                               // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable2;                              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable3;                              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable2;                               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable4;                              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable5;                              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable1;                             // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable3;                               // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable2;                             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default;                             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select1_Default;                            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select2_Default;                            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select3_Default;                            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable3;                             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable4;                               // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select4_Default;                            // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortRarity                                   CallFunc_GetRarity_ReturnValue;                    // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortRarityItemData                    CallFunc_BPGetRarityData_ReturnValue;              // 0x0070(0x0080)()
};
static_assert(alignof(DailyRewardsCurrent_C_Set_Item_Flare) == 0x000008, "Wrong alignment on DailyRewardsCurrent_C_Set_Item_Flare");
static_assert(sizeof(DailyRewardsCurrent_C_Set_Item_Flare) == 0x0000F0, "Wrong size on DailyRewardsCurrent_C_Set_Item_Flare");
static_assert(offsetof(DailyRewardsCurrent_C_Set_Item_Flare, Temp_struct_Variable) == 0x000000, "Member 'DailyRewardsCurrent_C_Set_Item_Flare::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(DailyRewardsCurrent_C_Set_Item_Flare, Temp_bool_Variable) == 0x000008, "Member 'DailyRewardsCurrent_C_Set_Item_Flare::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(DailyRewardsCurrent_C_Set_Item_Flare, Temp_float_Variable) == 0x00000C, "Member 'DailyRewardsCurrent_C_Set_Item_Flare::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(DailyRewardsCurrent_C_Set_Item_Flare, Temp_float_Variable1) == 0x000010, "Member 'DailyRewardsCurrent_C_Set_Item_Flare::Temp_float_Variable1' has a wrong offset!");
static_assert(offsetof(DailyRewardsCurrent_C_Set_Item_Flare, Temp_bool_Variable1) == 0x000014, "Member 'DailyRewardsCurrent_C_Set_Item_Flare::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(DailyRewardsCurrent_C_Set_Item_Flare, Temp_float_Variable2) == 0x000018, "Member 'DailyRewardsCurrent_C_Set_Item_Flare::Temp_float_Variable2' has a wrong offset!");
static_assert(offsetof(DailyRewardsCurrent_C_Set_Item_Flare, Temp_float_Variable3) == 0x00001C, "Member 'DailyRewardsCurrent_C_Set_Item_Flare::Temp_float_Variable3' has a wrong offset!");
static_assert(offsetof(DailyRewardsCurrent_C_Set_Item_Flare, Temp_bool_Variable2) == 0x000020, "Member 'DailyRewardsCurrent_C_Set_Item_Flare::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(DailyRewardsCurrent_C_Set_Item_Flare, Temp_float_Variable4) == 0x000024, "Member 'DailyRewardsCurrent_C_Set_Item_Flare::Temp_float_Variable4' has a wrong offset!");
static_assert(offsetof(DailyRewardsCurrent_C_Set_Item_Flare, Temp_float_Variable5) == 0x000028, "Member 'DailyRewardsCurrent_C_Set_Item_Flare::Temp_float_Variable5' has a wrong offset!");
static_assert(offsetof(DailyRewardsCurrent_C_Set_Item_Flare, Temp_struct_Variable1) == 0x00002C, "Member 'DailyRewardsCurrent_C_Set_Item_Flare::Temp_struct_Variable1' has a wrong offset!");
static_assert(offsetof(DailyRewardsCurrent_C_Set_Item_Flare, Temp_bool_Variable3) == 0x000034, "Member 'DailyRewardsCurrent_C_Set_Item_Flare::Temp_bool_Variable3' has a wrong offset!");
static_assert(offsetof(DailyRewardsCurrent_C_Set_Item_Flare, Temp_struct_Variable2) == 0x000038, "Member 'DailyRewardsCurrent_C_Set_Item_Flare::Temp_struct_Variable2' has a wrong offset!");
static_assert(offsetof(DailyRewardsCurrent_C_Set_Item_Flare, K2Node_Select_Default) == 0x000040, "Member 'DailyRewardsCurrent_C_Set_Item_Flare::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(DailyRewardsCurrent_C_Set_Item_Flare, K2Node_Select1_Default) == 0x000048, "Member 'DailyRewardsCurrent_C_Set_Item_Flare::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(DailyRewardsCurrent_C_Set_Item_Flare, K2Node_Select2_Default) == 0x00004C, "Member 'DailyRewardsCurrent_C_Set_Item_Flare::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(DailyRewardsCurrent_C_Set_Item_Flare, K2Node_Select3_Default) == 0x000050, "Member 'DailyRewardsCurrent_C_Set_Item_Flare::K2Node_Select3_Default' has a wrong offset!");
static_assert(offsetof(DailyRewardsCurrent_C_Set_Item_Flare, CallFunc_RandomFloatInRange_ReturnValue) == 0x000054, "Member 'DailyRewardsCurrent_C_Set_Item_Flare::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(DailyRewardsCurrent_C_Set_Item_Flare, Temp_struct_Variable3) == 0x000058, "Member 'DailyRewardsCurrent_C_Set_Item_Flare::Temp_struct_Variable3' has a wrong offset!");
static_assert(offsetof(DailyRewardsCurrent_C_Set_Item_Flare, Temp_bool_Variable4) == 0x000060, "Member 'DailyRewardsCurrent_C_Set_Item_Flare::Temp_bool_Variable4' has a wrong offset!");
static_assert(offsetof(DailyRewardsCurrent_C_Set_Item_Flare, K2Node_Select4_Default) == 0x000064, "Member 'DailyRewardsCurrent_C_Set_Item_Flare::K2Node_Select4_Default' has a wrong offset!");
static_assert(offsetof(DailyRewardsCurrent_C_Set_Item_Flare, CallFunc_GetRarity_ReturnValue) == 0x00006C, "Member 'DailyRewardsCurrent_C_Set_Item_Flare::CallFunc_GetRarity_ReturnValue' has a wrong offset!");
static_assert(offsetof(DailyRewardsCurrent_C_Set_Item_Flare, CallFunc_BPGetRarityData_ReturnValue) == 0x000070, "Member 'DailyRewardsCurrent_C_Set_Item_Flare::CallFunc_BPGetRarityData_ReturnValue' has a wrong offset!");

// Function DailyRewardsCurrent.DailyRewardsCurrent_C.InitializeRewardView
// 0x0058 (0x0058 - 0x0000)
struct DailyRewardsCurrent_C_InitializeRewardView final
{
public:
	class UFortItem*                              RewardItem;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable;                              // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable1;                             // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable1;                               // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable1;                               // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F[0x1];                                       // 0x001F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetDisplayName_ReturnValue;               // 0x0020(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default;                             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select1_Default;                            // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DailyRewardsCurrent_C_InitializeRewardView) == 0x000008, "Wrong alignment on DailyRewardsCurrent_C_InitializeRewardView");
static_assert(sizeof(DailyRewardsCurrent_C_InitializeRewardView) == 0x000058, "Wrong size on DailyRewardsCurrent_C_InitializeRewardView");
static_assert(offsetof(DailyRewardsCurrent_C_InitializeRewardView, RewardItem) == 0x000000, "Member 'DailyRewardsCurrent_C_InitializeRewardView::RewardItem' has a wrong offset!");
static_assert(offsetof(DailyRewardsCurrent_C_InitializeRewardView, Temp_bool_Variable) == 0x000008, "Member 'DailyRewardsCurrent_C_InitializeRewardView::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(DailyRewardsCurrent_C_InitializeRewardView, Temp_struct_Variable) == 0x00000C, "Member 'DailyRewardsCurrent_C_InitializeRewardView::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(DailyRewardsCurrent_C_InitializeRewardView, Temp_struct_Variable1) == 0x000014, "Member 'DailyRewardsCurrent_C_InitializeRewardView::Temp_struct_Variable1' has a wrong offset!");
static_assert(offsetof(DailyRewardsCurrent_C_InitializeRewardView, Temp_bool_Variable1) == 0x00001C, "Member 'DailyRewardsCurrent_C_InitializeRewardView::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(DailyRewardsCurrent_C_InitializeRewardView, Temp_byte_Variable) == 0x00001D, "Member 'DailyRewardsCurrent_C_InitializeRewardView::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(DailyRewardsCurrent_C_InitializeRewardView, Temp_byte_Variable1) == 0x00001E, "Member 'DailyRewardsCurrent_C_InitializeRewardView::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(DailyRewardsCurrent_C_InitializeRewardView, CallFunc_GetDisplayName_ReturnValue) == 0x000020, "Member 'DailyRewardsCurrent_C_InitializeRewardView::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(DailyRewardsCurrent_C_InitializeRewardView, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'DailyRewardsCurrent_C_InitializeRewardView::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(DailyRewardsCurrent_C_InitializeRewardView, CallFunc_IsValid_ReturnValue1) == 0x000039, "Member 'DailyRewardsCurrent_C_InitializeRewardView::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(DailyRewardsCurrent_C_InitializeRewardView, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000040, "Member 'DailyRewardsCurrent_C_InitializeRewardView::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(DailyRewardsCurrent_C_InitializeRewardView, K2Node_Select_Default) == 0x000048, "Member 'DailyRewardsCurrent_C_InitializeRewardView::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(DailyRewardsCurrent_C_InitializeRewardView, K2Node_Select1_Default) == 0x000050, "Member 'DailyRewardsCurrent_C_InitializeRewardView::K2Node_Select1_Default' has a wrong offset!");

}

