#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GCN_ButterflySoul

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GCN_ButterflySoul.GCN_ButterflySoul_C.ExecuteUbergraph_GCN_ButterflySoul
// 0x0100 (0x0100 - 0x0000)
struct GCN_ButterflySoul_C_ExecuteUbergraph_GCN_ButterflySoul final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_MyTarget;                             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 K2Node_Event_Parameters;                           // 0x0010(0x00B8)(ConstParm, ContainsInstancedReference)
	TArray<class UParticleSystemComponent*>       K2Node_Event_ParticleComponents;                   // 0x00C8(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	TArray<class UAudioComponent*>                K2Node_Event_AudioComponents;                      // 0x00D8(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	class AFortPlayerPawnAthena*                  K2Node_DynamicCast_AsFort_Player_Pawn_Athena;      // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCN_ButterflySoul_C_ExecuteUbergraph_GCN_ButterflySoul) == 0x000008, "Wrong alignment on GCN_ButterflySoul_C_ExecuteUbergraph_GCN_ButterflySoul");
static_assert(sizeof(GCN_ButterflySoul_C_ExecuteUbergraph_GCN_ButterflySoul) == 0x000100, "Wrong size on GCN_ButterflySoul_C_ExecuteUbergraph_GCN_ButterflySoul");
static_assert(offsetof(GCN_ButterflySoul_C_ExecuteUbergraph_GCN_ButterflySoul, EntryPoint) == 0x000000, "Member 'GCN_ButterflySoul_C_ExecuteUbergraph_GCN_ButterflySoul::EntryPoint' has a wrong offset!");
static_assert(offsetof(GCN_ButterflySoul_C_ExecuteUbergraph_GCN_ButterflySoul, K2Node_Event_MyTarget) == 0x000008, "Member 'GCN_ButterflySoul_C_ExecuteUbergraph_GCN_ButterflySoul::K2Node_Event_MyTarget' has a wrong offset!");
static_assert(offsetof(GCN_ButterflySoul_C_ExecuteUbergraph_GCN_ButterflySoul, K2Node_Event_Parameters) == 0x000010, "Member 'GCN_ButterflySoul_C_ExecuteUbergraph_GCN_ButterflySoul::K2Node_Event_Parameters' has a wrong offset!");
static_assert(offsetof(GCN_ButterflySoul_C_ExecuteUbergraph_GCN_ButterflySoul, K2Node_Event_ParticleComponents) == 0x0000C8, "Member 'GCN_ButterflySoul_C_ExecuteUbergraph_GCN_ButterflySoul::K2Node_Event_ParticleComponents' has a wrong offset!");
static_assert(offsetof(GCN_ButterflySoul_C_ExecuteUbergraph_GCN_ButterflySoul, K2Node_Event_AudioComponents) == 0x0000D8, "Member 'GCN_ButterflySoul_C_ExecuteUbergraph_GCN_ButterflySoul::K2Node_Event_AudioComponents' has a wrong offset!");
static_assert(offsetof(GCN_ButterflySoul_C_ExecuteUbergraph_GCN_ButterflySoul, K2Node_DynamicCast_AsFort_Player_Pawn_Athena) == 0x0000E8, "Member 'GCN_ButterflySoul_C_ExecuteUbergraph_GCN_ButterflySoul::K2Node_DynamicCast_AsFort_Player_Pawn_Athena' has a wrong offset!");
static_assert(offsetof(GCN_ButterflySoul_C_ExecuteUbergraph_GCN_ButterflySoul, K2Node_DynamicCast_bSuccess) == 0x0000F0, "Member 'GCN_ButterflySoul_C_ExecuteUbergraph_GCN_ButterflySoul::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GCN_ButterflySoul_C_ExecuteUbergraph_GCN_ButterflySoul, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x0000F8, "Member 'GCN_ButterflySoul_C_ExecuteUbergraph_GCN_ButterflySoul::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");

// Function GCN_ButterflySoul.GCN_ButterflySoul_C.OnLoopingStart
// 0x00E0 (0x00E0 - 0x0000)
struct GCN_ButterflySoul_C_OnLoopingStart final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00B8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UParticleSystemComponent*>       ParticleComponents;                                // 0x00C0(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<class UAudioComponent*>                AudioComponents;                                   // 0x00D0(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
};
static_assert(alignof(GCN_ButterflySoul_C_OnLoopingStart) == 0x000008, "Wrong alignment on GCN_ButterflySoul_C_OnLoopingStart");
static_assert(sizeof(GCN_ButterflySoul_C_OnLoopingStart) == 0x0000E0, "Wrong size on GCN_ButterflySoul_C_OnLoopingStart");
static_assert(offsetof(GCN_ButterflySoul_C_OnLoopingStart, MyTarget) == 0x000000, "Member 'GCN_ButterflySoul_C_OnLoopingStart::MyTarget' has a wrong offset!");
static_assert(offsetof(GCN_ButterflySoul_C_OnLoopingStart, Parameters) == 0x000008, "Member 'GCN_ButterflySoul_C_OnLoopingStart::Parameters' has a wrong offset!");
static_assert(offsetof(GCN_ButterflySoul_C_OnLoopingStart, ParticleComponents) == 0x0000C0, "Member 'GCN_ButterflySoul_C_OnLoopingStart::ParticleComponents' has a wrong offset!");
static_assert(offsetof(GCN_ButterflySoul_C_OnLoopingStart, AudioComponents) == 0x0000D0, "Member 'GCN_ButterflySoul_C_OnLoopingStart::AudioComponents' has a wrong offset!");

// Function GCN_ButterflySoul.GCN_ButterflySoul_C.OnRemove
// 0x00C8 (0x00C8 - 0x0000)
struct GCN_ButterflySoul_C_OnRemove final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00B8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x00C0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GCN_ButterflySoul_C_OnRemove) == 0x000008, "Wrong alignment on GCN_ButterflySoul_C_OnRemove");
static_assert(sizeof(GCN_ButterflySoul_C_OnRemove) == 0x0000C8, "Wrong size on GCN_ButterflySoul_C_OnRemove");
static_assert(offsetof(GCN_ButterflySoul_C_OnRemove, MyTarget) == 0x000000, "Member 'GCN_ButterflySoul_C_OnRemove::MyTarget' has a wrong offset!");
static_assert(offsetof(GCN_ButterflySoul_C_OnRemove, Parameters) == 0x000008, "Member 'GCN_ButterflySoul_C_OnRemove::Parameters' has a wrong offset!");
static_assert(offsetof(GCN_ButterflySoul_C_OnRemove, ReturnValue) == 0x0000C0, "Member 'GCN_ButterflySoul_C_OnRemove::ReturnValue' has a wrong offset!");
static_assert(offsetof(GCN_ButterflySoul_C_OnRemove, CallFunc_IsValid_ReturnValue) == 0x0000C1, "Member 'GCN_ButterflySoul_C_OnRemove::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

