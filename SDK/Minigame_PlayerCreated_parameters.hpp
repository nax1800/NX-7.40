#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Minigame_PlayerCreated

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function Minigame_PlayerCreated.Minigame_PlayerCreated_C.ExecuteUbergraph_Minigame_PlayerCreated
// 0x00D0 (0x00D0 - 0x0000)
struct Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonActivatablePanel*                K2Node_DynamicCast_AsCommon_Activatable_Panel;     // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldShowScoreboard_bResult;             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UUserWidget* UserWidget)> K2Node_CreateDelegate_OutputDelegate;              // 0x0034(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue1;           // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UScoreboardPanel_C*                     K2Node_DynamicCast_AsScoreboard_Panel;             // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActivated_ReturnValue;                  // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53[0x5];                                       // 0x0053(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortUIManagerWidget_NUI*               CallFunc_GetUIManagerWidget_ReturnValue;           // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            K2Node_CustomEvent_UserWidget;                     // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue2;           // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue3;           // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortHUDContext*                        CallFunc_GetContext_ReturnValue;                   // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortMinigameState                            K2Node_CustomEvent_MinigameState;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A[0x2];                                       // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EFortMinigameState MinigameState)> K2Node_CreateDelegate_OutputDelegate1;             // 0x007C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAsyncAction_CreateWidgetAsync*     CallFunc_CreateWidgetAsync_ReturnValue;            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A[0x6];                                       // 0x009A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           K2Node_CustomEvent_PlayerState1;                   // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortVolume*                            K2Node_CustomEvent_Volume1;                        // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVolumeEventRelevant_bResult;            // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           K2Node_CustomEvent_PlayerState;                    // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortVolume*                            K2Node_CustomEvent_Volume;                         // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVolumeEventRelevant_bResult1;           // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated) == 0x000008, "Wrong alignment on Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated");
static_assert(sizeof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated) == 0x0000D0, "Wrong size on Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, EntryPoint) == 0x000000, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::EntryPoint' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, Temp_object_Variable) == 0x000008, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, CallFunc_IsDedicatedServer_ReturnValue) == 0x000010, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, K2Node_DynamicCast_AsCommon_Activatable_Panel) == 0x000018, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::K2Node_DynamicCast_AsCommon_Activatable_Panel' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, CallFunc_GetOwningPlayer_ReturnValue) == 0x000028, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, CallFunc_ShouldShowScoreboard_bResult) == 0x000030, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::CallFunc_ShouldShowScoreboard_bResult' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, K2Node_CreateDelegate_OutputDelegate) == 0x000034, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, CallFunc_IsDedicatedServer_ReturnValue1) == 0x000044, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::CallFunc_IsDedicatedServer_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, K2Node_DynamicCast_AsScoreboard_Panel) == 0x000048, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::K2Node_DynamicCast_AsScoreboard_Panel' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, K2Node_DynamicCast_bSuccess1) == 0x000050, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, CallFunc_IsValid_ReturnValue) == 0x000051, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, CallFunc_IsActivated_ReturnValue) == 0x000052, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::CallFunc_IsActivated_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, CallFunc_GetUIManagerWidget_ReturnValue) == 0x000058, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::CallFunc_GetUIManagerWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, K2Node_CustomEvent_UserWidget) == 0x000060, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::K2Node_CustomEvent_UserWidget' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, CallFunc_IsDedicatedServer_ReturnValue2) == 0x000068, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::CallFunc_IsDedicatedServer_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, CallFunc_IsDedicatedServer_ReturnValue3) == 0x000069, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::CallFunc_IsDedicatedServer_ReturnValue3' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, CallFunc_GetContext_ReturnValue) == 0x000070, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, K2Node_CustomEvent_MinigameState) == 0x000078, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::K2Node_CustomEvent_MinigameState' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, K2Node_SwitchEnum_CmpSuccess) == 0x000079, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, K2Node_CreateDelegate_OutputDelegate1) == 0x00007C, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, CallFunc_CreateWidgetAsync_ReturnValue) == 0x000090, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::CallFunc_CreateWidgetAsync_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, CallFunc_IsValid_ReturnValue1) == 0x000098, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, CallFunc_HasAuthority_ReturnValue) == 0x000099, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, K2Node_CustomEvent_PlayerState1) == 0x0000A0, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::K2Node_CustomEvent_PlayerState1' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, K2Node_CustomEvent_Volume1) == 0x0000A8, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::K2Node_CustomEvent_Volume1' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, CallFunc_IsVolumeEventRelevant_bResult) == 0x0000B0, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::CallFunc_IsVolumeEventRelevant_bResult' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, K2Node_CustomEvent_PlayerState) == 0x0000B8, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::K2Node_CustomEvent_PlayerState' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, K2Node_CustomEvent_Volume) == 0x0000C0, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::K2Node_CustomEvent_Volume' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, CallFunc_IsVolumeEventRelevant_bResult1) == 0x0000C8, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::CallFunc_IsVolumeEventRelevant_bResult1' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated, K2Node_Event_EndPlayReason) == 0x0000C9, "Member 'Minigame_PlayerCreated_C_ExecuteUbergraph_Minigame_PlayerCreated::K2Node_Event_EndPlayReason' has a wrong offset!");

// Function Minigame_PlayerCreated.Minigame_PlayerCreated_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct Minigame_PlayerCreated_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Minigame_PlayerCreated_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on Minigame_PlayerCreated_C_ReceiveEndPlay");
static_assert(sizeof(Minigame_PlayerCreated_C_ReceiveEndPlay) == 0x000001, "Wrong size on Minigame_PlayerCreated_C_ReceiveEndPlay");
static_assert(offsetof(Minigame_PlayerCreated_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'Minigame_PlayerCreated_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function Minigame_PlayerCreated.Minigame_PlayerCreated_C.OnClientExitVolume
// 0x0010 (0x0010 - 0x0000)
struct Minigame_PlayerCreated_C_OnClientExitVolume final
{
public:
	class APlayerState*                           PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortVolume*                            Param_Volume;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Minigame_PlayerCreated_C_OnClientExitVolume) == 0x000008, "Wrong alignment on Minigame_PlayerCreated_C_OnClientExitVolume");
static_assert(sizeof(Minigame_PlayerCreated_C_OnClientExitVolume) == 0x000010, "Wrong size on Minigame_PlayerCreated_C_OnClientExitVolume");
static_assert(offsetof(Minigame_PlayerCreated_C_OnClientExitVolume, PlayerState) == 0x000000, "Member 'Minigame_PlayerCreated_C_OnClientExitVolume::PlayerState' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_OnClientExitVolume, Param_Volume) == 0x000008, "Member 'Minigame_PlayerCreated_C_OnClientExitVolume::Param_Volume' has a wrong offset!");

// Function Minigame_PlayerCreated.Minigame_PlayerCreated_C.OnClientEnterVolume
// 0x0010 (0x0010 - 0x0000)
struct Minigame_PlayerCreated_C_OnClientEnterVolume final
{
public:
	class APlayerState*                           PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortVolume*                            Param_Volume;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Minigame_PlayerCreated_C_OnClientEnterVolume) == 0x000008, "Wrong alignment on Minigame_PlayerCreated_C_OnClientEnterVolume");
static_assert(sizeof(Minigame_PlayerCreated_C_OnClientEnterVolume) == 0x000010, "Wrong size on Minigame_PlayerCreated_C_OnClientEnterVolume");
static_assert(offsetof(Minigame_PlayerCreated_C_OnClientEnterVolume, PlayerState) == 0x000000, "Member 'Minigame_PlayerCreated_C_OnClientEnterVolume::PlayerState' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_OnClientEnterVolume, Param_Volume) == 0x000008, "Member 'Minigame_PlayerCreated_C_OnClientEnterVolume::Param_Volume' has a wrong offset!");

// Function Minigame_PlayerCreated.Minigame_PlayerCreated_C.HandleStateChanged
// 0x0001 (0x0001 - 0x0000)
struct Minigame_PlayerCreated_C_HandleStateChanged final
{
public:
	EFortMinigameState                            MinigameState;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Minigame_PlayerCreated_C_HandleStateChanged) == 0x000001, "Wrong alignment on Minigame_PlayerCreated_C_HandleStateChanged");
static_assert(sizeof(Minigame_PlayerCreated_C_HandleStateChanged) == 0x000001, "Wrong size on Minigame_PlayerCreated_C_HandleStateChanged");
static_assert(offsetof(Minigame_PlayerCreated_C_HandleStateChanged, MinigameState) == 0x000000, "Member 'Minigame_PlayerCreated_C_HandleStateChanged::MinigameState' has a wrong offset!");

// Function Minigame_PlayerCreated.Minigame_PlayerCreated_C.OnComplete_D9496DB6400ADA561B9C749CD6D8B5BC
// 0x0008 (0x0008 - 0x0000)
struct Minigame_PlayerCreated_C_OnComplete_D9496DB6400ADA561B9C749CD6D8B5BC final
{
public:
	class UUserWidget*                            UserWidget;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Minigame_PlayerCreated_C_OnComplete_D9496DB6400ADA561B9C749CD6D8B5BC) == 0x000008, "Wrong alignment on Minigame_PlayerCreated_C_OnComplete_D9496DB6400ADA561B9C749CD6D8B5BC");
static_assert(sizeof(Minigame_PlayerCreated_C_OnComplete_D9496DB6400ADA561B9C749CD6D8B5BC) == 0x000008, "Wrong size on Minigame_PlayerCreated_C_OnComplete_D9496DB6400ADA561B9C749CD6D8B5BC");
static_assert(offsetof(Minigame_PlayerCreated_C_OnComplete_D9496DB6400ADA561B9C749CD6D8B5BC, UserWidget) == 0x000000, "Member 'Minigame_PlayerCreated_C_OnComplete_D9496DB6400ADA561B9C749CD6D8B5BC::UserWidget' has a wrong offset!");

// Function Minigame_PlayerCreated.Minigame_PlayerCreated_C.AssignTeams
// 0x00E8 (0x00E8 - 0x0000)
struct Minigame_PlayerCreated_C_AssignTeams final
{
public:
	TArray<class AFortPlayerState*>               RandomlyOrderedPlayers;                            // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate)
	TArray<int32>                                 TeamSizes;                                         // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	int32                                         CurrentTeam;                                       // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable1;                                // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable2;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable2;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerState*                       CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AFortPlayerState*>               CallFunc_GetRandomlyOrderedParticipatingPlayers_RandomizedPlayers; // 0x0078(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<class AFortPlayerState*>               CallFunc_GetParticipatingPlayers_OutPlayers;       // 0x0088(0x0010)(ZeroConstructor, ReferenceParm)
	class AFortPlayerState*                       CallFunc_Array_Get_Item1;                          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetActorTeam_ReturnValue;                 // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Subtract_ByteByte_ReturnValue;            // 0x00A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A7[0x1];                                       // 0x00A7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item2;                          // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue3;                  // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue1;              // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue2;                 // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable2;                                // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x00C8(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue4;                  // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue5;                  // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Minigame_PlayerCreated_C_AssignTeams) == 0x000008, "Wrong alignment on Minigame_PlayerCreated_C_AssignTeams");
static_assert(sizeof(Minigame_PlayerCreated_C_AssignTeams) == 0x0000E8, "Wrong size on Minigame_PlayerCreated_C_AssignTeams");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, RandomlyOrderedPlayers) == 0x000000, "Member 'Minigame_PlayerCreated_C_AssignTeams::RandomlyOrderedPlayers' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, TeamSizes) == 0x000010, "Member 'Minigame_PlayerCreated_C_AssignTeams::TeamSizes' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CurrentTeam) == 0x000020, "Member 'Minigame_PlayerCreated_C_AssignTeams::CurrentTeam' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, Temp_bool_True_if_break_was_hit_Variable) == 0x000024, "Member 'Minigame_PlayerCreated_C_AssignTeams::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, Temp_int_Array_Index_Variable) == 0x000028, "Member 'Minigame_PlayerCreated_C_AssignTeams::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_Not_PreBool_ReturnValue) == 0x00002C, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'Minigame_PlayerCreated_C_AssignTeams::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, Temp_int_Variable) == 0x000038, "Member 'Minigame_PlayerCreated_C_AssignTeams::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_MakeLiteralByte_ReturnValue) == 0x00003C, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_HasAuthority_ReturnValue) == 0x00003D, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, Temp_int_Loop_Counter_Variable1) == 0x000040, "Member 'Minigame_PlayerCreated_C_AssignTeams::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_Add_IntInt_ReturnValue1) == 0x000048, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, Temp_int_Variable1) == 0x00004C, "Member 'Minigame_PlayerCreated_C_AssignTeams::Temp_int_Variable1' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, Temp_int_Loop_Counter_Variable2) == 0x000050, "Member 'Minigame_PlayerCreated_C_AssignTeams::Temp_int_Loop_Counter_Variable2' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_Add_IntInt_ReturnValue2) == 0x000058, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, Temp_int_Array_Index_Variable1) == 0x00005C, "Member 'Minigame_PlayerCreated_C_AssignTeams::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, Temp_int_Array_Index_Variable2) == 0x000060, "Member 'Minigame_PlayerCreated_C_AssignTeams::Temp_int_Array_Index_Variable2' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_Array_Get_Item) == 0x000068, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_Greater_IntInt_ReturnValue) == 0x000070, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000071, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_GetRandomlyOrderedParticipatingPlayers_RandomizedPlayers) == 0x000078, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_GetRandomlyOrderedParticipatingPlayers_RandomizedPlayers' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_GetParticipatingPlayers_OutPlayers) == 0x000088, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_GetParticipatingPlayers_OutPlayers' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_Array_Get_Item1) == 0x000098, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_Array_Length_ReturnValue1) == 0x0000A0, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_GetActorTeam_ReturnValue) == 0x0000A4, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_GetActorTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_Less_IntInt_ReturnValue1) == 0x0000A5, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_Subtract_ByteByte_ReturnValue) == 0x0000A6, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_Subtract_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_Conv_ByteToInt_ReturnValue) == 0x0000A8, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_Array_Get_Item2) == 0x0000AC, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_Add_IntInt_ReturnValue3) == 0x0000B0, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_Add_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_Greater_IntInt_ReturnValue1) == 0x0000B4, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_Greater_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_Array_Length_ReturnValue2) == 0x0000B8, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_Less_IntInt_ReturnValue2) == 0x0000BC, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_Less_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, Temp_int_Variable2) == 0x0000C0, "Member 'Minigame_PlayerCreated_C_AssignTeams::Temp_int_Variable2' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_BooleanAND_ReturnValue) == 0x0000C4, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, K2Node_MakeArray_Array) == 0x0000C8, "Member 'Minigame_PlayerCreated_C_AssignTeams::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000D8, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_Add_IntInt_ReturnValue4) == 0x0000DC, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_Add_IntInt_ReturnValue4' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_AssignTeams, CallFunc_Add_IntInt_ReturnValue5) == 0x0000E0, "Member 'Minigame_PlayerCreated_C_AssignTeams::CallFunc_Add_IntInt_ReturnValue5' has a wrong offset!");

// Function Minigame_PlayerCreated.Minigame_PlayerCreated_C.ShouldShowScoreboard
// 0x0030 (0x0030 - 0x0000)
struct Minigame_PlayerCreated_C_ShouldShowScoreboard final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bResult;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bShouldShow;                                       // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerControllerAthena*            K2Node_DynamicCast_AsFort_Player_Controller_Athena; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerState*                       K2Node_DynamicCast_AsFort_Player_State;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerInMinigame_ReturnValue;           // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Minigame_PlayerCreated_C_ShouldShowScoreboard) == 0x000008, "Wrong alignment on Minigame_PlayerCreated_C_ShouldShowScoreboard");
static_assert(sizeof(Minigame_PlayerCreated_C_ShouldShowScoreboard) == 0x000030, "Wrong size on Minigame_PlayerCreated_C_ShouldShowScoreboard");
static_assert(offsetof(Minigame_PlayerCreated_C_ShouldShowScoreboard, PlayerController) == 0x000000, "Member 'Minigame_PlayerCreated_C_ShouldShowScoreboard::PlayerController' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ShouldShowScoreboard, bResult) == 0x000008, "Member 'Minigame_PlayerCreated_C_ShouldShowScoreboard::bResult' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ShouldShowScoreboard, bShouldShow) == 0x000009, "Member 'Minigame_PlayerCreated_C_ShouldShowScoreboard::bShouldShow' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ShouldShowScoreboard, K2Node_DynamicCast_AsFort_Player_Controller_Athena) == 0x000010, "Member 'Minigame_PlayerCreated_C_ShouldShowScoreboard::K2Node_DynamicCast_AsFort_Player_Controller_Athena' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ShouldShowScoreboard, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Minigame_PlayerCreated_C_ShouldShowScoreboard::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ShouldShowScoreboard, K2Node_SwitchEnum_CmpSuccess) == 0x000019, "Member 'Minigame_PlayerCreated_C_ShouldShowScoreboard::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ShouldShowScoreboard, K2Node_DynamicCast_AsFort_Player_State) == 0x000020, "Member 'Minigame_PlayerCreated_C_ShouldShowScoreboard::K2Node_DynamicCast_AsFort_Player_State' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ShouldShowScoreboard, K2Node_DynamicCast_bSuccess1) == 0x000028, "Member 'Minigame_PlayerCreated_C_ShouldShowScoreboard::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_ShouldShowScoreboard, CallFunc_IsPlayerInMinigame_ReturnValue) == 0x000029, "Member 'Minigame_PlayerCreated_C_ShouldShowScoreboard::CallFunc_IsPlayerInMinigame_ReturnValue' has a wrong offset!");

// Function Minigame_PlayerCreated.Minigame_PlayerCreated_C.BindVolumeDelegates
// 0x0030 (0x0030 - 0x0000)
struct Minigame_PlayerCreated_C_BindVolumeDelegates final
{
public:
	TDelegate<void(class APlayerState* Client, class AFortVolume* Volume)> K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class APlayerState* Client, class AFortVolume* Volume)> K2Node_CreateDelegate_OutputDelegate1;             // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	class AFortVolumeManager*                     CallFunc_GetVolumeManager_OutVolumeManager;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVolumeValidityResult                         CallFunc_GetVolumeManager_OutIsValid;              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Minigame_PlayerCreated_C_BindVolumeDelegates) == 0x000008, "Wrong alignment on Minigame_PlayerCreated_C_BindVolumeDelegates");
static_assert(sizeof(Minigame_PlayerCreated_C_BindVolumeDelegates) == 0x000030, "Wrong size on Minigame_PlayerCreated_C_BindVolumeDelegates");
static_assert(offsetof(Minigame_PlayerCreated_C_BindVolumeDelegates, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'Minigame_PlayerCreated_C_BindVolumeDelegates::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_BindVolumeDelegates, K2Node_CreateDelegate_OutputDelegate1) == 0x000010, "Member 'Minigame_PlayerCreated_C_BindVolumeDelegates::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_BindVolumeDelegates, CallFunc_GetVolumeManager_OutVolumeManager) == 0x000020, "Member 'Minigame_PlayerCreated_C_BindVolumeDelegates::CallFunc_GetVolumeManager_OutVolumeManager' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_BindVolumeDelegates, CallFunc_GetVolumeManager_OutIsValid) == 0x000028, "Member 'Minigame_PlayerCreated_C_BindVolumeDelegates::CallFunc_GetVolumeManager_OutIsValid' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_BindVolumeDelegates, K2Node_SwitchEnum_CmpSuccess) == 0x000029, "Member 'Minigame_PlayerCreated_C_BindVolumeDelegates::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function Minigame_PlayerCreated.Minigame_PlayerCreated_C.UnbindVolumeDelegates
// 0x0030 (0x0030 - 0x0000)
struct Minigame_PlayerCreated_C_UnbindVolumeDelegates final
{
public:
	TDelegate<void(class APlayerState* Client, class AFortVolume* Volume)> K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class APlayerState* Client, class AFortVolume* Volume)> K2Node_CreateDelegate_OutputDelegate1;             // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	class AFortVolumeManager*                     CallFunc_GetVolumeManager_OutVolumeManager;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVolumeValidityResult                         CallFunc_GetVolumeManager_OutIsValid;              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Minigame_PlayerCreated_C_UnbindVolumeDelegates) == 0x000008, "Wrong alignment on Minigame_PlayerCreated_C_UnbindVolumeDelegates");
static_assert(sizeof(Minigame_PlayerCreated_C_UnbindVolumeDelegates) == 0x000030, "Wrong size on Minigame_PlayerCreated_C_UnbindVolumeDelegates");
static_assert(offsetof(Minigame_PlayerCreated_C_UnbindVolumeDelegates, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'Minigame_PlayerCreated_C_UnbindVolumeDelegates::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_UnbindVolumeDelegates, K2Node_CreateDelegate_OutputDelegate1) == 0x000010, "Member 'Minigame_PlayerCreated_C_UnbindVolumeDelegates::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_UnbindVolumeDelegates, CallFunc_GetVolumeManager_OutVolumeManager) == 0x000020, "Member 'Minigame_PlayerCreated_C_UnbindVolumeDelegates::CallFunc_GetVolumeManager_OutVolumeManager' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_UnbindVolumeDelegates, CallFunc_GetVolumeManager_OutIsValid) == 0x000028, "Member 'Minigame_PlayerCreated_C_UnbindVolumeDelegates::CallFunc_GetVolumeManager_OutIsValid' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_UnbindVolumeDelegates, K2Node_SwitchEnum_CmpSuccess) == 0x000029, "Member 'Minigame_PlayerCreated_C_UnbindVolumeDelegates::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function Minigame_PlayerCreated.Minigame_PlayerCreated_C.IsVolumeEventRelevant
// 0x0038 (0x0038 - 0x0000)
struct Minigame_PlayerCreated_C_IsVolumeEventRelevant final
{
public:
	class APlayerState*                           PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortVolume*                            EventVolume;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bResult;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsRelevant;                                       // 0x0011(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortMinigame*                          CallFunc_GetMinigameForVolume_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerController*                  CallFunc_GetFortPlayerControllerFromActor_ReturnValue; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Minigame_PlayerCreated_C_IsVolumeEventRelevant) == 0x000008, "Wrong alignment on Minigame_PlayerCreated_C_IsVolumeEventRelevant");
static_assert(sizeof(Minigame_PlayerCreated_C_IsVolumeEventRelevant) == 0x000038, "Wrong size on Minigame_PlayerCreated_C_IsVolumeEventRelevant");
static_assert(offsetof(Minigame_PlayerCreated_C_IsVolumeEventRelevant, PlayerState) == 0x000000, "Member 'Minigame_PlayerCreated_C_IsVolumeEventRelevant::PlayerState' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_IsVolumeEventRelevant, EventVolume) == 0x000008, "Member 'Minigame_PlayerCreated_C_IsVolumeEventRelevant::EventVolume' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_IsVolumeEventRelevant, bResult) == 0x000010, "Member 'Minigame_PlayerCreated_C_IsVolumeEventRelevant::bResult' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_IsVolumeEventRelevant, bIsRelevant) == 0x000011, "Member 'Minigame_PlayerCreated_C_IsVolumeEventRelevant::bIsRelevant' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_IsVolumeEventRelevant, CallFunc_GetMinigameForVolume_ReturnValue) == 0x000018, "Member 'Minigame_PlayerCreated_C_IsVolumeEventRelevant::CallFunc_GetMinigameForVolume_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_IsVolumeEventRelevant, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'Minigame_PlayerCreated_C_IsVolumeEventRelevant::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_IsVolumeEventRelevant, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000021, "Member 'Minigame_PlayerCreated_C_IsVolumeEventRelevant::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_IsVolumeEventRelevant, CallFunc_GetFortPlayerControllerFromActor_ReturnValue) == 0x000028, "Member 'Minigame_PlayerCreated_C_IsVolumeEventRelevant::CallFunc_GetFortPlayerControllerFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_IsVolumeEventRelevant, CallFunc_IsValid_ReturnValue1) == 0x000030, "Member 'Minigame_PlayerCreated_C_IsVolumeEventRelevant::CallFunc_IsValid_ReturnValue1' has a wrong offset!");

// Function Minigame_PlayerCreated.Minigame_PlayerCreated_C.GetRandomlyOrderedParticipatingPlayers
// 0x0068 (0x0068 - 0x0000)
struct Minigame_PlayerCreated_C_GetRandomlyOrderedParticipatingPlayers final
{
public:
	TArray<class AFortPlayerState*>               RandomizedPlayers;                                 // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor)
	int32                                         RandomPlayerIndex;                                 // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AFortPlayerState*>               RandomizedParticipatingPlayers;                    // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate)
	TArray<class AFortPlayerState*>               ParticipatingPlayersCopy;                          // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerState*                       CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AFortPlayerState*>               CallFunc_GetParticipatingPlayers_OutPlayers;       // 0x0058(0x0010)(ZeroConstructor, ReferenceParm)
};
static_assert(alignof(Minigame_PlayerCreated_C_GetRandomlyOrderedParticipatingPlayers) == 0x000008, "Wrong alignment on Minigame_PlayerCreated_C_GetRandomlyOrderedParticipatingPlayers");
static_assert(sizeof(Minigame_PlayerCreated_C_GetRandomlyOrderedParticipatingPlayers) == 0x000068, "Wrong size on Minigame_PlayerCreated_C_GetRandomlyOrderedParticipatingPlayers");
static_assert(offsetof(Minigame_PlayerCreated_C_GetRandomlyOrderedParticipatingPlayers, RandomizedPlayers) == 0x000000, "Member 'Minigame_PlayerCreated_C_GetRandomlyOrderedParticipatingPlayers::RandomizedPlayers' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_GetRandomlyOrderedParticipatingPlayers, RandomPlayerIndex) == 0x000010, "Member 'Minigame_PlayerCreated_C_GetRandomlyOrderedParticipatingPlayers::RandomPlayerIndex' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_GetRandomlyOrderedParticipatingPlayers, RandomizedParticipatingPlayers) == 0x000018, "Member 'Minigame_PlayerCreated_C_GetRandomlyOrderedParticipatingPlayers::RandomizedParticipatingPlayers' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_GetRandomlyOrderedParticipatingPlayers, ParticipatingPlayersCopy) == 0x000028, "Member 'Minigame_PlayerCreated_C_GetRandomlyOrderedParticipatingPlayers::ParticipatingPlayersCopy' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_GetRandomlyOrderedParticipatingPlayers, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'Minigame_PlayerCreated_C_GetRandomlyOrderedParticipatingPlayers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_GetRandomlyOrderedParticipatingPlayers, CallFunc_Greater_IntInt_ReturnValue) == 0x00003C, "Member 'Minigame_PlayerCreated_C_GetRandomlyOrderedParticipatingPlayers::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_GetRandomlyOrderedParticipatingPlayers, CallFunc_Subtract_IntInt_ReturnValue) == 0x000040, "Member 'Minigame_PlayerCreated_C_GetRandomlyOrderedParticipatingPlayers::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_GetRandomlyOrderedParticipatingPlayers, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000044, "Member 'Minigame_PlayerCreated_C_GetRandomlyOrderedParticipatingPlayers::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_GetRandomlyOrderedParticipatingPlayers, CallFunc_Array_Get_Item) == 0x000048, "Member 'Minigame_PlayerCreated_C_GetRandomlyOrderedParticipatingPlayers::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_GetRandomlyOrderedParticipatingPlayers, CallFunc_Array_Add_ReturnValue) == 0x000050, "Member 'Minigame_PlayerCreated_C_GetRandomlyOrderedParticipatingPlayers::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Minigame_PlayerCreated_C_GetRandomlyOrderedParticipatingPlayers, CallFunc_GetParticipatingPlayers_OutPlayers) == 0x000058, "Member 'Minigame_PlayerCreated_C_GetRandomlyOrderedParticipatingPlayers::CallFunc_GetParticipatingPlayers_OutPlayers' has a wrong offset!");

}

