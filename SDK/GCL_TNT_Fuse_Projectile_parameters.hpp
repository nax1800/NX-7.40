#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GCL_TNT_Fuse_Projectile

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function GCL_TNT_Fuse_Projectile.GCL_TNT_Fuse_Projectile_C.ExecuteUbergraph_GCL_TNT_Fuse_Projectile
// 0x0338 (0x0338 - 0x0000)
struct GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_MyTarget;                             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 K2Node_Event_Parameters;                           // 0x0010(0x00B8)(ConstParm, ContainsInstancedReference)
	TArray<class UParticleSystemComponent*>       K2Node_Event_ParticleComponents;                   // 0x00C8(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	TArray<class UAudioComponent*>                K2Node_Event_AudioComponents;                      // 0x00D8(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	class UCameraShake*                           K2Node_Event_BurstCameraShakeInstance;             // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADecalActor*                            K2Node_Event_BurstDecalInstance;                   // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue1;           // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEvaluateCurveTableResult                     CallFunc_EvaluateCurveTableRow_OutResult;          // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_EvaluateCurveTableRow_OutXY;              // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_MyTarget1;                            // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 K2Node_Event_Parameters1;                          // 0x0120(0x00B8)(ConstParm, ContainsInstancedReference)
	TArray<class UParticleSystemComponent*>       K2Node_Event_ParticleComponents1;                  // 0x01D8(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	TArray<class UAudioComponent*>                K2Node_Event_AudioComponents1;                     // 0x01E8(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	class UAudioComponent*                        CallFunc_Array_Get_Item;                           // 0x01F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_Array_Get_Item1;                          // 0x0200(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AB_Prj_Athena_TNT_C*                    K2Node_DynamicCast_AsB_Prj_Athena_TNT;             // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_211[0x3];                                      // 0x0211(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0214(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x029C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29D[0x3];                                      // 0x029D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Warning_System_Setup_Opacity;             // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Warning_System_Setup_Color;               // 0x02A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Warning_System_Setup_Size;                // 0x02B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Warning_System_Setup_Opacity1;            // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Warning_System_Setup_Color1;              // 0x02C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Warning_System_Setup_Size1;               // 0x02CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Spline_Setup_Spline_Location;             // 0x02D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x02E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E5[0x3];                                      // 0x02E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x02E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F1[0x3];                                      // 0x02F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEvaluateCurveTableResult                     CallFunc_EvaluateCurveTableRow_OutResult1;         // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F9[0x3];                                      // 0x02F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_EvaluateCurveTableRow_OutXY1;             // 0x02FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum1_CmpSuccess;                     // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_301[0x3];                                      // 0x0301(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0304(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue2;           // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue1;         // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue3;           // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x031C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x031D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31E[0x2];                                      // 0x031E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue2;         // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue4;           // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue3;         // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x032C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue5;           // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile) == 0x000008, "Wrong alignment on GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile");
static_assert(sizeof(GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile) == 0x000338, "Wrong size on GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile, EntryPoint) == 0x000000, "Member 'GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile::EntryPoint' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000004, "Member 'GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile, K2Node_Event_MyTarget) == 0x000008, "Member 'GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile::K2Node_Event_MyTarget' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile, K2Node_Event_Parameters) == 0x000010, "Member 'GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile::K2Node_Event_Parameters' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile, K2Node_Event_ParticleComponents) == 0x0000C8, "Member 'GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile::K2Node_Event_ParticleComponents' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile, K2Node_Event_AudioComponents) == 0x0000D8, "Member 'GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile::K2Node_Event_AudioComponents' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile, K2Node_Event_BurstCameraShakeInstance) == 0x0000E8, "Member 'GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile::K2Node_Event_BurstCameraShakeInstance' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile, K2Node_Event_BurstDecalInstance) == 0x0000F0, "Member 'GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile::K2Node_Event_BurstDecalInstance' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile, CallFunc_IsValid_ReturnValue) == 0x0000F8, "Member 'GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile, CallFunc_Divide_FloatFloat_ReturnValue1) == 0x0000FC, "Member 'GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile::CallFunc_Divide_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x000100, "Member 'GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile, CallFunc_EvaluateCurveTableRow_OutResult) == 0x000108, "Member 'GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile::CallFunc_EvaluateCurveTableRow_OutResult' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile, CallFunc_EvaluateCurveTableRow_OutXY) == 0x00010C, "Member 'GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile::CallFunc_EvaluateCurveTableRow_OutXY' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile, K2Node_SwitchEnum_CmpSuccess) == 0x000110, "Member 'GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile, K2Node_Event_MyTarget1) == 0x000118, "Member 'GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile::K2Node_Event_MyTarget1' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile, K2Node_Event_Parameters1) == 0x000120, "Member 'GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile::K2Node_Event_Parameters1' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile, K2Node_Event_ParticleComponents1) == 0x0001D8, "Member 'GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile::K2Node_Event_ParticleComponents1' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile, K2Node_Event_AudioComponents1) == 0x0001E8, "Member 'GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile::K2Node_Event_AudioComponents1' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile, CallFunc_Array_Get_Item) == 0x0001F8, "Member 'GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile, CallFunc_Array_Get_Item1) == 0x000200, "Member 'GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile, K2Node_DynamicCast_AsB_Prj_Athena_TNT) == 0x000208, "Member 'GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile::K2Node_DynamicCast_AsB_Prj_Athena_TNT' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile, K2Node_DynamicCast_bSuccess) == 0x000210, "Member 'GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000214, "Member 'GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile, CallFunc_IsValid_ReturnValue1) == 0x00029C, "Member 'GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile, CallFunc_Warning_System_Setup_Opacity) == 0x0002A0, "Member 'GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile::CallFunc_Warning_System_Setup_Opacity' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile, CallFunc_Warning_System_Setup_Color) == 0x0002A4, "Member 'GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile::CallFunc_Warning_System_Setup_Color' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile, CallFunc_Warning_System_Setup_Size) == 0x0002B0, "Member 'GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile::CallFunc_Warning_System_Setup_Size' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile, CallFunc_Warning_System_Setup_Opacity1) == 0x0002BC, "Member 'GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile::CallFunc_Warning_System_Setup_Opacity1' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile, CallFunc_Warning_System_Setup_Color1) == 0x0002C0, "Member 'GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile::CallFunc_Warning_System_Setup_Color1' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile, CallFunc_Warning_System_Setup_Size1) == 0x0002CC, "Member 'GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile::CallFunc_Warning_System_Setup_Size1' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile, CallFunc_Spline_Setup_Spline_Location) == 0x0002D8, "Member 'GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile::CallFunc_Spline_Setup_Spline_Location' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile, CallFunc_IsValid_ReturnValue2) == 0x0002E4, "Member 'GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile, CallFunc_SpawnSoundAttached_ReturnValue) == 0x0002E8, "Member 'GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile, CallFunc_IsValid_ReturnValue3) == 0x0002F0, "Member 'GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0002F4, "Member 'GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile, CallFunc_EvaluateCurveTableRow_OutResult1) == 0x0002F8, "Member 'GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile::CallFunc_EvaluateCurveTableRow_OutResult1' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile, CallFunc_EvaluateCurveTableRow_OutXY1) == 0x0002FC, "Member 'GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile::CallFunc_EvaluateCurveTableRow_OutXY1' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile, K2Node_SwitchEnum1_CmpSuccess) == 0x000300, "Member 'GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile::K2Node_SwitchEnum1_CmpSuccess' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile, CallFunc_VLerp_ReturnValue) == 0x000304, "Member 'GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile, CallFunc_Divide_FloatFloat_ReturnValue2) == 0x000310, "Member 'GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile::CallFunc_Divide_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile, CallFunc_Subtract_FloatFloat_ReturnValue1) == 0x000314, "Member 'GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile::CallFunc_Subtract_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile, CallFunc_Divide_FloatFloat_ReturnValue3) == 0x000318, "Member 'GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile::CallFunc_Divide_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00031C, "Member 'GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile, CallFunc_Not_PreBool_ReturnValue) == 0x00031D, "Member 'GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile, CallFunc_Subtract_FloatFloat_ReturnValue2) == 0x000320, "Member 'GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile::CallFunc_Subtract_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile, CallFunc_Divide_FloatFloat_ReturnValue4) == 0x000324, "Member 'GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile::CallFunc_Divide_FloatFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile, CallFunc_Subtract_FloatFloat_ReturnValue3) == 0x000328, "Member 'GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile::CallFunc_Subtract_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile, CallFunc_Add_FloatFloat_ReturnValue) == 0x00032C, "Member 'GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile, CallFunc_Divide_FloatFloat_ReturnValue5) == 0x000330, "Member 'GCL_TNT_Fuse_Projectile_C_ExecuteUbergraph_GCL_TNT_Fuse_Projectile::CallFunc_Divide_FloatFloat_ReturnValue5' has a wrong offset!");

// Function GCL_TNT_Fuse_Projectile.GCL_TNT_Fuse_Projectile_C.OnRemoval
// 0x00F0 (0x00F0 - 0x0000)
struct GCL_TNT_Fuse_Projectile_C_OnRemoval final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00B8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UParticleSystemComponent*>       ParticleComponents;                                // 0x00C0(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<class UAudioComponent*>                AudioComponents;                                   // 0x00D0(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	class UCameraShake*                           BurstCameraShakeInstance;                          // 0x00E0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADecalActor*                            BurstDecalInstance;                                // 0x00E8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCL_TNT_Fuse_Projectile_C_OnRemoval) == 0x000008, "Wrong alignment on GCL_TNT_Fuse_Projectile_C_OnRemoval");
static_assert(sizeof(GCL_TNT_Fuse_Projectile_C_OnRemoval) == 0x0000F0, "Wrong size on GCL_TNT_Fuse_Projectile_C_OnRemoval");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_OnRemoval, MyTarget) == 0x000000, "Member 'GCL_TNT_Fuse_Projectile_C_OnRemoval::MyTarget' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_OnRemoval, Parameters) == 0x000008, "Member 'GCL_TNT_Fuse_Projectile_C_OnRemoval::Parameters' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_OnRemoval, ParticleComponents) == 0x0000C0, "Member 'GCL_TNT_Fuse_Projectile_C_OnRemoval::ParticleComponents' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_OnRemoval, AudioComponents) == 0x0000D0, "Member 'GCL_TNT_Fuse_Projectile_C_OnRemoval::AudioComponents' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_OnRemoval, BurstCameraShakeInstance) == 0x0000E0, "Member 'GCL_TNT_Fuse_Projectile_C_OnRemoval::BurstCameraShakeInstance' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_OnRemoval, BurstDecalInstance) == 0x0000E8, "Member 'GCL_TNT_Fuse_Projectile_C_OnRemoval::BurstDecalInstance' has a wrong offset!");

// Function GCL_TNT_Fuse_Projectile.GCL_TNT_Fuse_Projectile_C.OnLoopingStart
// 0x00E0 (0x00E0 - 0x0000)
struct GCL_TNT_Fuse_Projectile_C_OnLoopingStart final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00B8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UParticleSystemComponent*>       ParticleComponents;                                // 0x00C0(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<class UAudioComponent*>                AudioComponents;                                   // 0x00D0(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
};
static_assert(alignof(GCL_TNT_Fuse_Projectile_C_OnLoopingStart) == 0x000008, "Wrong alignment on GCL_TNT_Fuse_Projectile_C_OnLoopingStart");
static_assert(sizeof(GCL_TNT_Fuse_Projectile_C_OnLoopingStart) == 0x0000E0, "Wrong size on GCL_TNT_Fuse_Projectile_C_OnLoopingStart");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_OnLoopingStart, MyTarget) == 0x000000, "Member 'GCL_TNT_Fuse_Projectile_C_OnLoopingStart::MyTarget' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_OnLoopingStart, Parameters) == 0x000008, "Member 'GCL_TNT_Fuse_Projectile_C_OnLoopingStart::Parameters' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_OnLoopingStart, ParticleComponents) == 0x0000C0, "Member 'GCL_TNT_Fuse_Projectile_C_OnLoopingStart::ParticleComponents' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_OnLoopingStart, AudioComponents) == 0x0000D0, "Member 'GCL_TNT_Fuse_Projectile_C_OnLoopingStart::AudioComponents' has a wrong offset!");

// Function GCL_TNT_Fuse_Projectile.GCL_TNT_Fuse_Projectile_C.Spline Setup
// 0x0068 (0x0068 - 0x0000)
struct GCL_TNT_Fuse_Projectile_C_Spline_Setup final
{
public:
	float                                         Alpha;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Spline_Location;                                   // 0x0004(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSplineLength_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue1;           // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue; // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue2;           // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue3;           // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        K2Node_MakeArray_Array;                            // 0x0058(0x0010)(ZeroConstructor, ReferenceParm)
};
static_assert(alignof(GCL_TNT_Fuse_Projectile_C_Spline_Setup) == 0x000008, "Wrong alignment on GCL_TNT_Fuse_Projectile_C_Spline_Setup");
static_assert(sizeof(GCL_TNT_Fuse_Projectile_C_Spline_Setup) == 0x000068, "Wrong size on GCL_TNT_Fuse_Projectile_C_Spline_Setup");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_Spline_Setup, Alpha) == 0x000000, "Member 'GCL_TNT_Fuse_Projectile_C_Spline_Setup::Alpha' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_Spline_Setup, Spline_Location) == 0x000004, "Member 'GCL_TNT_Fuse_Projectile_C_Spline_Setup::Spline_Location' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_Spline_Setup, CallFunc_GetSplineLength_ReturnValue) == 0x000010, "Member 'GCL_TNT_Fuse_Projectile_C_Spline_Setup::CallFunc_GetSplineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_Spline_Setup, CallFunc_GetSocketLocation_ReturnValue) == 0x000014, "Member 'GCL_TNT_Fuse_Projectile_C_Spline_Setup::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_Spline_Setup, CallFunc_Lerp_ReturnValue) == 0x000020, "Member 'GCL_TNT_Fuse_Projectile_C_Spline_Setup::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_Spline_Setup, CallFunc_GetSocketLocation_ReturnValue1) == 0x000024, "Member 'GCL_TNT_Fuse_Projectile_C_Spline_Setup::CallFunc_GetSocketLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_Spline_Setup, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue) == 0x000030, "Member 'GCL_TNT_Fuse_Projectile_C_Spline_Setup::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_Spline_Setup, CallFunc_GetSocketLocation_ReturnValue2) == 0x00003C, "Member 'GCL_TNT_Fuse_Projectile_C_Spline_Setup::CallFunc_GetSocketLocation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_Spline_Setup, CallFunc_GetSocketLocation_ReturnValue3) == 0x000048, "Member 'GCL_TNT_Fuse_Projectile_C_Spline_Setup::CallFunc_GetSocketLocation_ReturnValue3' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_Spline_Setup, K2Node_MakeArray_Array) == 0x000058, "Member 'GCL_TNT_Fuse_Projectile_C_Spline_Setup::K2Node_MakeArray_Array' has a wrong offset!");

// Function GCL_TNT_Fuse_Projectile.GCL_TNT_Fuse_Projectile_C.Warning System Setup
// 0x0058 (0x0058 - 0x0000)
struct GCL_TNT_Fuse_Projectile_C_Warning_System_Setup final
{
public:
	float                                         Warning;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Opacity;                                           // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Color;                                             // 0x0008(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Size;                                              // 0x0014(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Max_Possible_Size;                                 // 0x0020(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Final_Color;                                       // 0x002C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Max_Possible_Opacity;                              // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue1;                       // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCL_TNT_Fuse_Projectile_C_Warning_System_Setup) == 0x000004, "Wrong alignment on GCL_TNT_Fuse_Projectile_C_Warning_System_Setup");
static_assert(sizeof(GCL_TNT_Fuse_Projectile_C_Warning_System_Setup) == 0x000058, "Wrong size on GCL_TNT_Fuse_Projectile_C_Warning_System_Setup");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_Warning_System_Setup, Warning) == 0x000000, "Member 'GCL_TNT_Fuse_Projectile_C_Warning_System_Setup::Warning' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_Warning_System_Setup, Opacity) == 0x000004, "Member 'GCL_TNT_Fuse_Projectile_C_Warning_System_Setup::Opacity' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_Warning_System_Setup, Color) == 0x000008, "Member 'GCL_TNT_Fuse_Projectile_C_Warning_System_Setup::Color' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_Warning_System_Setup, Size) == 0x000014, "Member 'GCL_TNT_Fuse_Projectile_C_Warning_System_Setup::Size' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_Warning_System_Setup, Max_Possible_Size) == 0x000020, "Member 'GCL_TNT_Fuse_Projectile_C_Warning_System_Setup::Max_Possible_Size' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_Warning_System_Setup, Final_Color) == 0x00002C, "Member 'GCL_TNT_Fuse_Projectile_C_Warning_System_Setup::Final_Color' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_Warning_System_Setup, Max_Possible_Opacity) == 0x000038, "Member 'GCL_TNT_Fuse_Projectile_C_Warning_System_Setup::Max_Possible_Opacity' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_Warning_System_Setup, CallFunc_VLerp_ReturnValue) == 0x00003C, "Member 'GCL_TNT_Fuse_Projectile_C_Warning_System_Setup::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_Warning_System_Setup, CallFunc_VLerp_ReturnValue1) == 0x000048, "Member 'GCL_TNT_Fuse_Projectile_C_Warning_System_Setup::CallFunc_VLerp_ReturnValue1' has a wrong offset!");
static_assert(offsetof(GCL_TNT_Fuse_Projectile_C_Warning_System_Setup, CallFunc_Lerp_ReturnValue) == 0x000054, "Member 'GCL_TNT_Fuse_Projectile_C_Warning_System_Setup::CallFunc_Lerp_ReturnValue' has a wrong offset!");

}

