#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FortExpeditionMasterWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK::Params
{

// Function BP_FortExpeditionMasterWidget.BP_FortExpeditionMasterWidget_C.ExecuteUbergraph_BP_FortExpeditionMasterWidget
// 0x00D0 (0x00D0 - 0x0000)
struct BP_FortExpeditionMasterWidget_C_ExecuteUbergraph_BP_FortExpeditionMasterWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFrontendStorageEnabled_ReturnValue;     // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortDialogResult                             K2Node_CustomEvent_Result2;                        // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_ResultName2;                    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EFortDialogResult Result, class FName ResultName)> K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable;                                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortDialogResult                             Temp_byte_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAsyncAction_ShowConfirmation_NUI*  CallFunc_ShowSimpleConfirmationDialog_NUI_ReturnValue; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EFortDialogResult Result, class FName ResultName)> K2Node_CreateDelegate_OutputDelegate1;             // 0x0038(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortDialogResult                             K2Node_CustomEvent_Result1;                        // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_ResultName1;                    // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable1;                               // 0x0054(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortDialogResult                             Temp_byte_Variable1;                               // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAsyncAction_ShowConfirmation_NUI*  CallFunc_ShowSimpleConfirmationDialog_NUI_ReturnValue1; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EFortDialogResult Result, class FName ResultName)> K2Node_CreateDelegate_OutputDelegate2;             // 0x0068(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortDialogResult                             K2Node_CustomEvent_Result;                         // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A[0x2];                                       // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_ResultName;                     // 0x007C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable2;                               // 0x0084(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortDialogResult                             Temp_byte_Variable2;                               // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAsyncAction_ShowConfirmation_NUI*  CallFunc_ShowSimpleConfirmationDialog_NUI_ReturnValue2; // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortFrontEndContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate3;             // 0x00A4(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x00B8(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UFortUINavigationManager*               CallFunc_GetUINavigationManager_ReturnValue;       // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWIFEEnabled_ReturnValue;                // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FortExpeditionMasterWidget_C_ExecuteUbergraph_BP_FortExpeditionMasterWidget) == 0x000008, "Wrong alignment on BP_FortExpeditionMasterWidget_C_ExecuteUbergraph_BP_FortExpeditionMasterWidget");
static_assert(sizeof(BP_FortExpeditionMasterWidget_C_ExecuteUbergraph_BP_FortExpeditionMasterWidget) == 0x0000D0, "Wrong size on BP_FortExpeditionMasterWidget_C_ExecuteUbergraph_BP_FortExpeditionMasterWidget");
static_assert(offsetof(BP_FortExpeditionMasterWidget_C_ExecuteUbergraph_BP_FortExpeditionMasterWidget, EntryPoint) == 0x000000, "Member 'BP_FortExpeditionMasterWidget_C_ExecuteUbergraph_BP_FortExpeditionMasterWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionMasterWidget_C_ExecuteUbergraph_BP_FortExpeditionMasterWidget, CallFunc_IsFrontendStorageEnabled_ReturnValue) == 0x000004, "Member 'BP_FortExpeditionMasterWidget_C_ExecuteUbergraph_BP_FortExpeditionMasterWidget::CallFunc_IsFrontendStorageEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionMasterWidget_C_ExecuteUbergraph_BP_FortExpeditionMasterWidget, K2Node_CustomEvent_Result2) == 0x000005, "Member 'BP_FortExpeditionMasterWidget_C_ExecuteUbergraph_BP_FortExpeditionMasterWidget::K2Node_CustomEvent_Result2' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionMasterWidget_C_ExecuteUbergraph_BP_FortExpeditionMasterWidget, K2Node_CustomEvent_ResultName2) == 0x000008, "Member 'BP_FortExpeditionMasterWidget_C_ExecuteUbergraph_BP_FortExpeditionMasterWidget::K2Node_CustomEvent_ResultName2' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionMasterWidget_C_ExecuteUbergraph_BP_FortExpeditionMasterWidget, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'BP_FortExpeditionMasterWidget_C_ExecuteUbergraph_BP_FortExpeditionMasterWidget::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionMasterWidget_C_ExecuteUbergraph_BP_FortExpeditionMasterWidget, Temp_name_Variable) == 0x000020, "Member 'BP_FortExpeditionMasterWidget_C_ExecuteUbergraph_BP_FortExpeditionMasterWidget::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionMasterWidget_C_ExecuteUbergraph_BP_FortExpeditionMasterWidget, Temp_byte_Variable) == 0x000028, "Member 'BP_FortExpeditionMasterWidget_C_ExecuteUbergraph_BP_FortExpeditionMasterWidget::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionMasterWidget_C_ExecuteUbergraph_BP_FortExpeditionMasterWidget, K2Node_SwitchEnum_CmpSuccess) == 0x000029, "Member 'BP_FortExpeditionMasterWidget_C_ExecuteUbergraph_BP_FortExpeditionMasterWidget::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionMasterWidget_C_ExecuteUbergraph_BP_FortExpeditionMasterWidget, CallFunc_ShowSimpleConfirmationDialog_NUI_ReturnValue) == 0x000030, "Member 'BP_FortExpeditionMasterWidget_C_ExecuteUbergraph_BP_FortExpeditionMasterWidget::CallFunc_ShowSimpleConfirmationDialog_NUI_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionMasterWidget_C_ExecuteUbergraph_BP_FortExpeditionMasterWidget, K2Node_CreateDelegate_OutputDelegate1) == 0x000038, "Member 'BP_FortExpeditionMasterWidget_C_ExecuteUbergraph_BP_FortExpeditionMasterWidget::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionMasterWidget_C_ExecuteUbergraph_BP_FortExpeditionMasterWidget, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BP_FortExpeditionMasterWidget_C_ExecuteUbergraph_BP_FortExpeditionMasterWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionMasterWidget_C_ExecuteUbergraph_BP_FortExpeditionMasterWidget, K2Node_CustomEvent_Result1) == 0x000049, "Member 'BP_FortExpeditionMasterWidget_C_ExecuteUbergraph_BP_FortExpeditionMasterWidget::K2Node_CustomEvent_Result1' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionMasterWidget_C_ExecuteUbergraph_BP_FortExpeditionMasterWidget, K2Node_CustomEvent_ResultName1) == 0x00004C, "Member 'BP_FortExpeditionMasterWidget_C_ExecuteUbergraph_BP_FortExpeditionMasterWidget::K2Node_CustomEvent_ResultName1' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionMasterWidget_C_ExecuteUbergraph_BP_FortExpeditionMasterWidget, Temp_name_Variable1) == 0x000054, "Member 'BP_FortExpeditionMasterWidget_C_ExecuteUbergraph_BP_FortExpeditionMasterWidget::Temp_name_Variable1' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionMasterWidget_C_ExecuteUbergraph_BP_FortExpeditionMasterWidget, Temp_byte_Variable1) == 0x00005C, "Member 'BP_FortExpeditionMasterWidget_C_ExecuteUbergraph_BP_FortExpeditionMasterWidget::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionMasterWidget_C_ExecuteUbergraph_BP_FortExpeditionMasterWidget, CallFunc_ShowSimpleConfirmationDialog_NUI_ReturnValue1) == 0x000060, "Member 'BP_FortExpeditionMasterWidget_C_ExecuteUbergraph_BP_FortExpeditionMasterWidget::CallFunc_ShowSimpleConfirmationDialog_NUI_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionMasterWidget_C_ExecuteUbergraph_BP_FortExpeditionMasterWidget, K2Node_CreateDelegate_OutputDelegate2) == 0x000068, "Member 'BP_FortExpeditionMasterWidget_C_ExecuteUbergraph_BP_FortExpeditionMasterWidget::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionMasterWidget_C_ExecuteUbergraph_BP_FortExpeditionMasterWidget, CallFunc_IsValid_ReturnValue1) == 0x000078, "Member 'BP_FortExpeditionMasterWidget_C_ExecuteUbergraph_BP_FortExpeditionMasterWidget::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionMasterWidget_C_ExecuteUbergraph_BP_FortExpeditionMasterWidget, K2Node_CustomEvent_Result) == 0x000079, "Member 'BP_FortExpeditionMasterWidget_C_ExecuteUbergraph_BP_FortExpeditionMasterWidget::K2Node_CustomEvent_Result' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionMasterWidget_C_ExecuteUbergraph_BP_FortExpeditionMasterWidget, K2Node_CustomEvent_ResultName) == 0x00007C, "Member 'BP_FortExpeditionMasterWidget_C_ExecuteUbergraph_BP_FortExpeditionMasterWidget::K2Node_CustomEvent_ResultName' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionMasterWidget_C_ExecuteUbergraph_BP_FortExpeditionMasterWidget, Temp_name_Variable2) == 0x000084, "Member 'BP_FortExpeditionMasterWidget_C_ExecuteUbergraph_BP_FortExpeditionMasterWidget::Temp_name_Variable2' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionMasterWidget_C_ExecuteUbergraph_BP_FortExpeditionMasterWidget, Temp_byte_Variable2) == 0x00008C, "Member 'BP_FortExpeditionMasterWidget_C_ExecuteUbergraph_BP_FortExpeditionMasterWidget::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionMasterWidget_C_ExecuteUbergraph_BP_FortExpeditionMasterWidget, CallFunc_ShowSimpleConfirmationDialog_NUI_ReturnValue2) == 0x000090, "Member 'BP_FortExpeditionMasterWidget_C_ExecuteUbergraph_BP_FortExpeditionMasterWidget::CallFunc_ShowSimpleConfirmationDialog_NUI_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionMasterWidget_C_ExecuteUbergraph_BP_FortExpeditionMasterWidget, CallFunc_GetContext_ReturnValue) == 0x000098, "Member 'BP_FortExpeditionMasterWidget_C_ExecuteUbergraph_BP_FortExpeditionMasterWidget::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionMasterWidget_C_ExecuteUbergraph_BP_FortExpeditionMasterWidget, CallFunc_IsValid_ReturnValue2) == 0x0000A0, "Member 'BP_FortExpeditionMasterWidget_C_ExecuteUbergraph_BP_FortExpeditionMasterWidget::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionMasterWidget_C_ExecuteUbergraph_BP_FortExpeditionMasterWidget, K2Node_CreateDelegate_OutputDelegate3) == 0x0000A4, "Member 'BP_FortExpeditionMasterWidget_C_ExecuteUbergraph_BP_FortExpeditionMasterWidget::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionMasterWidget_C_ExecuteUbergraph_BP_FortExpeditionMasterWidget, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0000B8, "Member 'BP_FortExpeditionMasterWidget_C_ExecuteUbergraph_BP_FortExpeditionMasterWidget::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionMasterWidget_C_ExecuteUbergraph_BP_FortExpeditionMasterWidget, CallFunc_GetUINavigationManager_ReturnValue) == 0x0000C0, "Member 'BP_FortExpeditionMasterWidget_C_ExecuteUbergraph_BP_FortExpeditionMasterWidget::CallFunc_GetUINavigationManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionMasterWidget_C_ExecuteUbergraph_BP_FortExpeditionMasterWidget, CallFunc_IsWIFEEnabled_ReturnValue) == 0x0000C8, "Member 'BP_FortExpeditionMasterWidget_C_ExecuteUbergraph_BP_FortExpeditionMasterWidget::CallFunc_IsWIFEEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionMasterWidget_C_ExecuteUbergraph_BP_FortExpeditionMasterWidget, CallFunc_BooleanAND_ReturnValue) == 0x0000C9, "Member 'BP_FortExpeditionMasterWidget_C_ExecuteUbergraph_BP_FortExpeditionMasterWidget::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_FortExpeditionMasterWidget.BP_FortExpeditionMasterWidget_C.DialogResult_39A80A89449E8489E8E81EAECC14DE95
// 0x000C (0x000C - 0x0000)
struct BP_FortExpeditionMasterWidget_C_DialogResult_39A80A89449E8489E8E81EAECC14DE95 final
{
public:
	EFortDialogResult                             Result;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ResultName;                                        // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FortExpeditionMasterWidget_C_DialogResult_39A80A89449E8489E8E81EAECC14DE95) == 0x000004, "Wrong alignment on BP_FortExpeditionMasterWidget_C_DialogResult_39A80A89449E8489E8E81EAECC14DE95");
static_assert(sizeof(BP_FortExpeditionMasterWidget_C_DialogResult_39A80A89449E8489E8E81EAECC14DE95) == 0x00000C, "Wrong size on BP_FortExpeditionMasterWidget_C_DialogResult_39A80A89449E8489E8E81EAECC14DE95");
static_assert(offsetof(BP_FortExpeditionMasterWidget_C_DialogResult_39A80A89449E8489E8E81EAECC14DE95, Result) == 0x000000, "Member 'BP_FortExpeditionMasterWidget_C_DialogResult_39A80A89449E8489E8E81EAECC14DE95::Result' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionMasterWidget_C_DialogResult_39A80A89449E8489E8E81EAECC14DE95, ResultName) == 0x000004, "Member 'BP_FortExpeditionMasterWidget_C_DialogResult_39A80A89449E8489E8E81EAECC14DE95::ResultName' has a wrong offset!");

// Function BP_FortExpeditionMasterWidget.BP_FortExpeditionMasterWidget_C.DialogResult_67CD2E3A4E1A6780703420B1064D5BD1
// 0x000C (0x000C - 0x0000)
struct BP_FortExpeditionMasterWidget_C_DialogResult_67CD2E3A4E1A6780703420B1064D5BD1 final
{
public:
	EFortDialogResult                             Result;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ResultName;                                        // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FortExpeditionMasterWidget_C_DialogResult_67CD2E3A4E1A6780703420B1064D5BD1) == 0x000004, "Wrong alignment on BP_FortExpeditionMasterWidget_C_DialogResult_67CD2E3A4E1A6780703420B1064D5BD1");
static_assert(sizeof(BP_FortExpeditionMasterWidget_C_DialogResult_67CD2E3A4E1A6780703420B1064D5BD1) == 0x00000C, "Wrong size on BP_FortExpeditionMasterWidget_C_DialogResult_67CD2E3A4E1A6780703420B1064D5BD1");
static_assert(offsetof(BP_FortExpeditionMasterWidget_C_DialogResult_67CD2E3A4E1A6780703420B1064D5BD1, Result) == 0x000000, "Member 'BP_FortExpeditionMasterWidget_C_DialogResult_67CD2E3A4E1A6780703420B1064D5BD1::Result' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionMasterWidget_C_DialogResult_67CD2E3A4E1A6780703420B1064D5BD1, ResultName) == 0x000004, "Member 'BP_FortExpeditionMasterWidget_C_DialogResult_67CD2E3A4E1A6780703420B1064D5BD1::ResultName' has a wrong offset!");

// Function BP_FortExpeditionMasterWidget.BP_FortExpeditionMasterWidget_C.DialogResult_99152A754621D0E9A8C9C889926A827D
// 0x000C (0x000C - 0x0000)
struct BP_FortExpeditionMasterWidget_C_DialogResult_99152A754621D0E9A8C9C889926A827D final
{
public:
	EFortDialogResult                             Result;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ResultName;                                        // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FortExpeditionMasterWidget_C_DialogResult_99152A754621D0E9A8C9C889926A827D) == 0x000004, "Wrong alignment on BP_FortExpeditionMasterWidget_C_DialogResult_99152A754621D0E9A8C9C889926A827D");
static_assert(sizeof(BP_FortExpeditionMasterWidget_C_DialogResult_99152A754621D0E9A8C9C889926A827D) == 0x00000C, "Wrong size on BP_FortExpeditionMasterWidget_C_DialogResult_99152A754621D0E9A8C9C889926A827D");
static_assert(offsetof(BP_FortExpeditionMasterWidget_C_DialogResult_99152A754621D0E9A8C9C889926A827D, Result) == 0x000000, "Member 'BP_FortExpeditionMasterWidget_C_DialogResult_99152A754621D0E9A8C9C889926A827D::Result' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionMasterWidget_C_DialogResult_99152A754621D0E9A8C9C889926A827D, ResultName) == 0x000004, "Member 'BP_FortExpeditionMasterWidget_C_DialogResult_99152A754621D0E9A8C9C889926A827D::ResultName' has a wrong offset!");

// Function BP_FortExpeditionMasterWidget.BP_FortExpeditionMasterWidget_C.Handle Back
// 0x0010 (0x0010 - 0x0000)
struct BP_FortExpeditionMasterWidget_C_Handle_Back final
{
public:
	bool                                          PassThrough;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortUIManagerWidget_NUI*               CallFunc_GetUIManagerWidget_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FortExpeditionMasterWidget_C_Handle_Back) == 0x000008, "Wrong alignment on BP_FortExpeditionMasterWidget_C_Handle_Back");
static_assert(sizeof(BP_FortExpeditionMasterWidget_C_Handle_Back) == 0x000010, "Wrong size on BP_FortExpeditionMasterWidget_C_Handle_Back");
static_assert(offsetof(BP_FortExpeditionMasterWidget_C_Handle_Back, PassThrough) == 0x000000, "Member 'BP_FortExpeditionMasterWidget_C_Handle_Back::PassThrough' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionMasterWidget_C_Handle_Back, CallFunc_GetUIManagerWidget_ReturnValue) == 0x000008, "Member 'BP_FortExpeditionMasterWidget_C_Handle_Back::CallFunc_GetUIManagerWidget_ReturnValue' has a wrong offset!");

// Function BP_FortExpeditionMasterWidget.BP_FortExpeditionMasterWidget_C.Setup Input Action Handlers
// 0x0050 (0x0050 - 0x0000)
struct BP_FortExpeditionMasterWidget_C_Setup_Input_Action_Handlers final
{
public:
	TDelegate<void(bool* bPassThrough)>           K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(bool* bPassThrough)>           K2Node_CreateDelegate_OutputDelegate1;             // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(bool* bPassThrough)>           K2Node_CreateDelegate_OutputDelegate2;             // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(bool* bPassThrough)>           K2Node_CreateDelegate_OutputDelegate3;             // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(bool* bPassThrough)>           K2Node_CreateDelegate_OutputDelegate4;             // 0x0040(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(BP_FortExpeditionMasterWidget_C_Setup_Input_Action_Handlers) == 0x000004, "Wrong alignment on BP_FortExpeditionMasterWidget_C_Setup_Input_Action_Handlers");
static_assert(sizeof(BP_FortExpeditionMasterWidget_C_Setup_Input_Action_Handlers) == 0x000050, "Wrong size on BP_FortExpeditionMasterWidget_C_Setup_Input_Action_Handlers");
static_assert(offsetof(BP_FortExpeditionMasterWidget_C_Setup_Input_Action_Handlers, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BP_FortExpeditionMasterWidget_C_Setup_Input_Action_Handlers::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionMasterWidget_C_Setup_Input_Action_Handlers, K2Node_CreateDelegate_OutputDelegate1) == 0x000010, "Member 'BP_FortExpeditionMasterWidget_C_Setup_Input_Action_Handlers::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionMasterWidget_C_Setup_Input_Action_Handlers, K2Node_CreateDelegate_OutputDelegate2) == 0x000020, "Member 'BP_FortExpeditionMasterWidget_C_Setup_Input_Action_Handlers::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionMasterWidget_C_Setup_Input_Action_Handlers, K2Node_CreateDelegate_OutputDelegate3) == 0x000030, "Member 'BP_FortExpeditionMasterWidget_C_Setup_Input_Action_Handlers::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionMasterWidget_C_Setup_Input_Action_Handlers, K2Node_CreateDelegate_OutputDelegate4) == 0x000040, "Member 'BP_FortExpeditionMasterWidget_C_Setup_Input_Action_Handlers::K2Node_CreateDelegate_OutputDelegate4' has a wrong offset!");

// Function BP_FortExpeditionMasterWidget.BP_FortExpeditionMasterWidget_C.Setup Bindings
// 0x0010 (0x0010 - 0x0000)
struct BP_FortExpeditionMasterWidget_C_Setup_Bindings final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(BP_FortExpeditionMasterWidget_C_Setup_Bindings) == 0x000004, "Wrong alignment on BP_FortExpeditionMasterWidget_C_Setup_Bindings");
static_assert(sizeof(BP_FortExpeditionMasterWidget_C_Setup_Bindings) == 0x000010, "Wrong size on BP_FortExpeditionMasterWidget_C_Setup_Bindings");
static_assert(offsetof(BP_FortExpeditionMasterWidget_C_Setup_Bindings, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BP_FortExpeditionMasterWidget_C_Setup_Bindings::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function BP_FortExpeditionMasterWidget.BP_FortExpeditionMasterWidget_C.Update Master Widget
// 0x0020 (0x0020 - 0x0000)
struct BP_FortExpeditionMasterWidget_C_Update_Master_Widget final
{
public:
	class UFortInventoryContext*                  CallFunc_GetContext_ReturnValue;                   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetStorageCapacity_ReturnValue;           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetStorageNumItems_ReturnValue;           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortFrontEndContext*                   CallFunc_GetContext_ReturnValue1;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AreProfilesAvailableToWIFE_ReturnValue;   // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AreAnyExpeditionsComplete_ReturnValue;    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FortExpeditionMasterWidget_C_Update_Master_Widget) == 0x000008, "Wrong alignment on BP_FortExpeditionMasterWidget_C_Update_Master_Widget");
static_assert(sizeof(BP_FortExpeditionMasterWidget_C_Update_Master_Widget) == 0x000020, "Wrong size on BP_FortExpeditionMasterWidget_C_Update_Master_Widget");
static_assert(offsetof(BP_FortExpeditionMasterWidget_C_Update_Master_Widget, CallFunc_GetContext_ReturnValue) == 0x000000, "Member 'BP_FortExpeditionMasterWidget_C_Update_Master_Widget::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionMasterWidget_C_Update_Master_Widget, CallFunc_GetStorageCapacity_ReturnValue) == 0x000008, "Member 'BP_FortExpeditionMasterWidget_C_Update_Master_Widget::CallFunc_GetStorageCapacity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionMasterWidget_C_Update_Master_Widget, CallFunc_GetStorageNumItems_ReturnValue) == 0x00000C, "Member 'BP_FortExpeditionMasterWidget_C_Update_Master_Widget::CallFunc_GetStorageNumItems_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionMasterWidget_C_Update_Master_Widget, CallFunc_GetContext_ReturnValue1) == 0x000010, "Member 'BP_FortExpeditionMasterWidget_C_Update_Master_Widget::CallFunc_GetContext_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionMasterWidget_C_Update_Master_Widget, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000018, "Member 'BP_FortExpeditionMasterWidget_C_Update_Master_Widget::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionMasterWidget_C_Update_Master_Widget, CallFunc_AreProfilesAvailableToWIFE_ReturnValue) == 0x000019, "Member 'BP_FortExpeditionMasterWidget_C_Update_Master_Widget::CallFunc_AreProfilesAvailableToWIFE_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionMasterWidget_C_Update_Master_Widget, CallFunc_AreAnyExpeditionsComplete_ReturnValue) == 0x00001A, "Member 'BP_FortExpeditionMasterWidget_C_Update_Master_Widget::CallFunc_AreAnyExpeditionsComplete_ReturnValue' has a wrong offset!");

// Function BP_FortExpeditionMasterWidget.BP_FortExpeditionMasterWidget_C.Hide Input Action
// 0x0010 (0x0010 - 0x0000)
struct BP_FortExpeditionMasterWidget_C_Hide_Input_Action final
{
public:
	struct FDataTableRowHandle                    InputActionRow;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(BP_FortExpeditionMasterWidget_C_Hide_Input_Action) == 0x000008, "Wrong alignment on BP_FortExpeditionMasterWidget_C_Hide_Input_Action");
static_assert(sizeof(BP_FortExpeditionMasterWidget_C_Hide_Input_Action) == 0x000010, "Wrong size on BP_FortExpeditionMasterWidget_C_Hide_Input_Action");
static_assert(offsetof(BP_FortExpeditionMasterWidget_C_Hide_Input_Action, InputActionRow) == 0x000000, "Member 'BP_FortExpeditionMasterWidget_C_Hide_Input_Action::InputActionRow' has a wrong offset!");

// Function BP_FortExpeditionMasterWidget.BP_FortExpeditionMasterWidget_C.Show Input Action
// 0x0010 (0x0010 - 0x0000)
struct BP_FortExpeditionMasterWidget_C_Show_Input_Action final
{
public:
	struct FDataTableRowHandle                    InputActionRow;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(BP_FortExpeditionMasterWidget_C_Show_Input_Action) == 0x000008, "Wrong alignment on BP_FortExpeditionMasterWidget_C_Show_Input_Action");
static_assert(sizeof(BP_FortExpeditionMasterWidget_C_Show_Input_Action) == 0x000010, "Wrong size on BP_FortExpeditionMasterWidget_C_Show_Input_Action");
static_assert(offsetof(BP_FortExpeditionMasterWidget_C_Show_Input_Action, InputActionRow) == 0x000000, "Member 'BP_FortExpeditionMasterWidget_C_Show_Input_Action::InputActionRow' has a wrong offset!");

// Function BP_FortExpeditionMasterWidget.BP_FortExpeditionMasterWidget_C.HandleBuildExpeditionAction
// 0x0002 (0x0002 - 0x0000)
struct BP_FortExpeditionMasterWidget_C_HandleBuildExpeditionAction final
{
public:
	bool                                          PassThrough;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HandleBuildExpeditionAction_PassThrough;  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FortExpeditionMasterWidget_C_HandleBuildExpeditionAction) == 0x000001, "Wrong alignment on BP_FortExpeditionMasterWidget_C_HandleBuildExpeditionAction");
static_assert(sizeof(BP_FortExpeditionMasterWidget_C_HandleBuildExpeditionAction) == 0x000002, "Wrong size on BP_FortExpeditionMasterWidget_C_HandleBuildExpeditionAction");
static_assert(offsetof(BP_FortExpeditionMasterWidget_C_HandleBuildExpeditionAction, PassThrough) == 0x000000, "Member 'BP_FortExpeditionMasterWidget_C_HandleBuildExpeditionAction::PassThrough' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionMasterWidget_C_HandleBuildExpeditionAction, CallFunc_HandleBuildExpeditionAction_PassThrough) == 0x000001, "Member 'BP_FortExpeditionMasterWidget_C_HandleBuildExpeditionAction::CallFunc_HandleBuildExpeditionAction_PassThrough' has a wrong offset!");

// Function BP_FortExpeditionMasterWidget.BP_FortExpeditionMasterWidget_C.HandleAbandonExpeditionAction
// 0x0001 (0x0001 - 0x0000)
struct BP_FortExpeditionMasterWidget_C_HandleAbandonExpeditionAction final
{
public:
	bool                                          PassThrough;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FortExpeditionMasterWidget_C_HandleAbandonExpeditionAction) == 0x000001, "Wrong alignment on BP_FortExpeditionMasterWidget_C_HandleAbandonExpeditionAction");
static_assert(sizeof(BP_FortExpeditionMasterWidget_C_HandleAbandonExpeditionAction) == 0x000001, "Wrong size on BP_FortExpeditionMasterWidget_C_HandleAbandonExpeditionAction");
static_assert(offsetof(BP_FortExpeditionMasterWidget_C_HandleAbandonExpeditionAction, PassThrough) == 0x000000, "Member 'BP_FortExpeditionMasterWidget_C_HandleAbandonExpeditionAction::PassThrough' has a wrong offset!");

// Function BP_FortExpeditionMasterWidget.BP_FortExpeditionMasterWidget_C.HandleCollectExpeditionAction
// 0x0001 (0x0001 - 0x0000)
struct BP_FortExpeditionMasterWidget_C_HandleCollectExpeditionAction final
{
public:
	bool                                          PassThrough;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FortExpeditionMasterWidget_C_HandleCollectExpeditionAction) == 0x000001, "Wrong alignment on BP_FortExpeditionMasterWidget_C_HandleCollectExpeditionAction");
static_assert(sizeof(BP_FortExpeditionMasterWidget_C_HandleCollectExpeditionAction) == 0x000001, "Wrong size on BP_FortExpeditionMasterWidget_C_HandleCollectExpeditionAction");
static_assert(offsetof(BP_FortExpeditionMasterWidget_C_HandleCollectExpeditionAction, PassThrough) == 0x000000, "Member 'BP_FortExpeditionMasterWidget_C_HandleCollectExpeditionAction::PassThrough' has a wrong offset!");

// Function BP_FortExpeditionMasterWidget.BP_FortExpeditionMasterWidget_C.Disable Input Action
// 0x0010 (0x0010 - 0x0000)
struct BP_FortExpeditionMasterWidget_C_Disable_Input_Action final
{
public:
	struct FDataTableRowHandle                    InputActionRow;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(BP_FortExpeditionMasterWidget_C_Disable_Input_Action) == 0x000008, "Wrong alignment on BP_FortExpeditionMasterWidget_C_Disable_Input_Action");
static_assert(sizeof(BP_FortExpeditionMasterWidget_C_Disable_Input_Action) == 0x000010, "Wrong size on BP_FortExpeditionMasterWidget_C_Disable_Input_Action");
static_assert(offsetof(BP_FortExpeditionMasterWidget_C_Disable_Input_Action, InputActionRow) == 0x000000, "Member 'BP_FortExpeditionMasterWidget_C_Disable_Input_Action::InputActionRow' has a wrong offset!");

// Function BP_FortExpeditionMasterWidget.BP_FortExpeditionMasterWidget_C.HandleSortExpeditionListAction
// 0x0004 (0x0004 - 0x0000)
struct BP_FortExpeditionMasterWidget_C_HandleSortExpeditionListAction final
{
public:
	bool                                          PassThrough;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Add_ByteByte_ReturnValue;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_ByteByte_ReturnValue;             // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FortExpeditionMasterWidget_C_HandleSortExpeditionListAction) == 0x000001, "Wrong alignment on BP_FortExpeditionMasterWidget_C_HandleSortExpeditionListAction");
static_assert(sizeof(BP_FortExpeditionMasterWidget_C_HandleSortExpeditionListAction) == 0x000004, "Wrong size on BP_FortExpeditionMasterWidget_C_HandleSortExpeditionListAction");
static_assert(offsetof(BP_FortExpeditionMasterWidget_C_HandleSortExpeditionListAction, PassThrough) == 0x000000, "Member 'BP_FortExpeditionMasterWidget_C_HandleSortExpeditionListAction::PassThrough' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionMasterWidget_C_HandleSortExpeditionListAction, CallFunc_Add_ByteByte_ReturnValue) == 0x000001, "Member 'BP_FortExpeditionMasterWidget_C_HandleSortExpeditionListAction::CallFunc_Add_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionMasterWidget_C_HandleSortExpeditionListAction, CallFunc_GetValidValue_ReturnValue) == 0x000002, "Member 'BP_FortExpeditionMasterWidget_C_HandleSortExpeditionListAction::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionMasterWidget_C_HandleSortExpeditionListAction, CallFunc_Greater_ByteByte_ReturnValue) == 0x000003, "Member 'BP_FortExpeditionMasterWidget_C_HandleSortExpeditionListAction::CallFunc_Greater_ByteByte_ReturnValue' has a wrong offset!");

}

