#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MountedTurret_Gunner_AnimBP

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass MountedTurret_Gunner_AnimBP.MountedTurret_Gunner_AnimBP_C
// 0x0830 (0x4BB0 - 0x4380)
class UMountedTurret_Gunner_AnimBP_C final : public UFortPlayerAnimInstance_MountedTurret
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x4380(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_LegIK                        AnimGraphNode_LegIK_EA99B7B8421846838D4B2EA9E3E1CF69; // 0x4388(0x00F8)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_AB5E7EE04FD942996FFE84801A0C0FFF; // 0x4480(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_490B730C4D3612B56BF047918267E18F; // 0x44A0(0x0020)()
	struct FAnimNode_LegIK                        AnimGraphNode_LegIK_48C11BA2470BF641C7E0C8B70AEF7F40; // 0x44C0(0x00F8)()
	struct FAnimNode_Root                         AnimGraphNode_Root_2B80D546472B689BD0B5ABB23390F217; // 0x45B8(0x0020)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_221FD1B34567A8B8784CB4AB81D1E5B5; // 0x45D8(0x0048)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_41B2C0ED4B73B9B6492BEE9541D99135; // 0x4620(0x00B0)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_D906DC2D4CCAB5B10A19AAB7140D34C9; // 0x46D0(0x00C8)()
	struct FAnimNode_RefPose                      AnimGraphNode_IdentityPose_E6B2D7944E459199A162B78A736662D2; // 0x4798(0x0018)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace_B42B4CC64E43087EE5F75AAA3AC31B87; // 0x47B0(0x0188)()
	struct FAnimNode_RefPose                      AnimGraphNode_IdentityPose_E12A1B75416454F164AF9C8FFBC99FCD; // 0x4938(0x0018)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_FFEC5A2C451F8B6DE9C3D0BF63D47EDB; // 0x4950(0x0078)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_307F98F94ACED67B0AC1628B3827E568; // 0x49C8(0x00C8)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_D604CC9941458E8F6D56F5AC018805FB; // 0x4A90(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_202C876C4609006B94125DA140FCE5F2; // 0x4AD8(0x0048)()
	class AFortAthenaVehicle*                     Pawn;                                              // 0x4B20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LocalLeftOffset;                                   // 0x4B28(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                WorldPosLeft;                                      // 0x4B34(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               LocalRotLeftOffset;                                // 0x4B40(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B4C[0x4];                                     // 0x4B4C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortMountedTurret*                     MountedTurret;                                     // 0x4B50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               WorldRotLeft;                                      // 0x4B58(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                LocalRightOffset;                                  // 0x4B64(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               LocalRotRightOffset;                               // 0x4B70(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               WorldRotRight;                                     // 0x4B7C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                WorldPosRight;                                     // 0x4B88(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Speed;                                             // 0x4B94(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTurning;                                         // 0x4B98(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B99[0x3];                                     // 0x4B99(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TurnRate;                                          // 0x4B9C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AimingPitchLastTick;                               // 0x4BA0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PitchRate;                                         // 0x4BA4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PedalScaler;                                       // 0x4BA8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_MountedTurret_Gunner_AnimBP(int32 EntryPoint);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_MountedTurret_Gunner_AnimBP_AnimGraphNode_RotationOffsetBlendSpace_B42B4CC64E43087EE5F75AAA3AC31B87();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MountedTurret_Gunner_AnimBP_C">();
	}
	static class UMountedTurret_Gunner_AnimBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMountedTurret_Gunner_AnimBP_C>();
	}
};
static_assert(alignof(UMountedTurret_Gunner_AnimBP_C) == 0x000010, "Wrong alignment on UMountedTurret_Gunner_AnimBP_C");
static_assert(sizeof(UMountedTurret_Gunner_AnimBP_C) == 0x004BB0, "Wrong size on UMountedTurret_Gunner_AnimBP_C");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, UberGraphFrame) == 0x004380, "Member 'UMountedTurret_Gunner_AnimBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, AnimGraphNode_LegIK_EA99B7B8421846838D4B2EA9E3E1CF69) == 0x004388, "Member 'UMountedTurret_Gunner_AnimBP_C::AnimGraphNode_LegIK_EA99B7B8421846838D4B2EA9E3E1CF69' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, AnimGraphNode_LocalToComponentSpace_AB5E7EE04FD942996FFE84801A0C0FFF) == 0x004480, "Member 'UMountedTurret_Gunner_AnimBP_C::AnimGraphNode_LocalToComponentSpace_AB5E7EE04FD942996FFE84801A0C0FFF' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, AnimGraphNode_ComponentToLocalSpace_490B730C4D3612B56BF047918267E18F) == 0x0044A0, "Member 'UMountedTurret_Gunner_AnimBP_C::AnimGraphNode_ComponentToLocalSpace_490B730C4D3612B56BF047918267E18F' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, AnimGraphNode_LegIK_48C11BA2470BF641C7E0C8B70AEF7F40) == 0x0044C0, "Member 'UMountedTurret_Gunner_AnimBP_C::AnimGraphNode_LegIK_48C11BA2470BF641C7E0C8B70AEF7F40' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, AnimGraphNode_Root_2B80D546472B689BD0B5ABB23390F217) == 0x0045B8, "Member 'UMountedTurret_Gunner_AnimBP_C::AnimGraphNode_Root_2B80D546472B689BD0B5ABB23390F217' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, AnimGraphNode_Slot_221FD1B34567A8B8784CB4AB81D1E5B5) == 0x0045D8, "Member 'UMountedTurret_Gunner_AnimBP_C::AnimGraphNode_Slot_221FD1B34567A8B8784CB4AB81D1E5B5' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, AnimGraphNode_BlendListByEnum_41B2C0ED4B73B9B6492BEE9541D99135) == 0x004620, "Member 'UMountedTurret_Gunner_AnimBP_C::AnimGraphNode_BlendListByEnum_41B2C0ED4B73B9B6492BEE9541D99135' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, AnimGraphNode_ApplyAdditive_D906DC2D4CCAB5B10A19AAB7140D34C9) == 0x0046D0, "Member 'UMountedTurret_Gunner_AnimBP_C::AnimGraphNode_ApplyAdditive_D906DC2D4CCAB5B10A19AAB7140D34C9' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, AnimGraphNode_IdentityPose_E6B2D7944E459199A162B78A736662D2) == 0x004798, "Member 'UMountedTurret_Gunner_AnimBP_C::AnimGraphNode_IdentityPose_E6B2D7944E459199A162B78A736662D2' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, AnimGraphNode_RotationOffsetBlendSpace_B42B4CC64E43087EE5F75AAA3AC31B87) == 0x0047B0, "Member 'UMountedTurret_Gunner_AnimBP_C::AnimGraphNode_RotationOffsetBlendSpace_B42B4CC64E43087EE5F75AAA3AC31B87' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, AnimGraphNode_IdentityPose_E12A1B75416454F164AF9C8FFBC99FCD) == 0x004938, "Member 'UMountedTurret_Gunner_AnimBP_C::AnimGraphNode_IdentityPose_E12A1B75416454F164AF9C8FFBC99FCD' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, AnimGraphNode_SequencePlayer_FFEC5A2C451F8B6DE9C3D0BF63D47EDB) == 0x004950, "Member 'UMountedTurret_Gunner_AnimBP_C::AnimGraphNode_SequencePlayer_FFEC5A2C451F8B6DE9C3D0BF63D47EDB' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, AnimGraphNode_ApplyAdditive_307F98F94ACED67B0AC1628B3827E568) == 0x0049C8, "Member 'UMountedTurret_Gunner_AnimBP_C::AnimGraphNode_ApplyAdditive_307F98F94ACED67B0AC1628B3827E568' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, AnimGraphNode_SequenceEvaluator_D604CC9941458E8F6D56F5AC018805FB) == 0x004A90, "Member 'UMountedTurret_Gunner_AnimBP_C::AnimGraphNode_SequenceEvaluator_D604CC9941458E8F6D56F5AC018805FB' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, AnimGraphNode_Slot_202C876C4609006B94125DA140FCE5F2) == 0x004AD8, "Member 'UMountedTurret_Gunner_AnimBP_C::AnimGraphNode_Slot_202C876C4609006B94125DA140FCE5F2' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, Pawn) == 0x004B20, "Member 'UMountedTurret_Gunner_AnimBP_C::Pawn' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, LocalLeftOffset) == 0x004B28, "Member 'UMountedTurret_Gunner_AnimBP_C::LocalLeftOffset' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, WorldPosLeft) == 0x004B34, "Member 'UMountedTurret_Gunner_AnimBP_C::WorldPosLeft' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, LocalRotLeftOffset) == 0x004B40, "Member 'UMountedTurret_Gunner_AnimBP_C::LocalRotLeftOffset' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, MountedTurret) == 0x004B50, "Member 'UMountedTurret_Gunner_AnimBP_C::MountedTurret' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, WorldRotLeft) == 0x004B58, "Member 'UMountedTurret_Gunner_AnimBP_C::WorldRotLeft' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, LocalRightOffset) == 0x004B64, "Member 'UMountedTurret_Gunner_AnimBP_C::LocalRightOffset' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, LocalRotRightOffset) == 0x004B70, "Member 'UMountedTurret_Gunner_AnimBP_C::LocalRotRightOffset' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, WorldRotRight) == 0x004B7C, "Member 'UMountedTurret_Gunner_AnimBP_C::WorldRotRight' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, WorldPosRight) == 0x004B88, "Member 'UMountedTurret_Gunner_AnimBP_C::WorldPosRight' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, Speed) == 0x004B94, "Member 'UMountedTurret_Gunner_AnimBP_C::Speed' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, IsTurning) == 0x004B98, "Member 'UMountedTurret_Gunner_AnimBP_C::IsTurning' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, TurnRate) == 0x004B9C, "Member 'UMountedTurret_Gunner_AnimBP_C::TurnRate' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, AimingPitchLastTick) == 0x004BA0, "Member 'UMountedTurret_Gunner_AnimBP_C::AimingPitchLastTick' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, PitchRate) == 0x004BA4, "Member 'UMountedTurret_Gunner_AnimBP_C::PitchRate' has a wrong offset!");
static_assert(offsetof(UMountedTurret_Gunner_AnimBP_C, PedalScaler) == 0x004BA8, "Member 'UMountedTurret_Gunner_AnimBP_C::PedalScaler' has a wrong offset!");

}

