#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GC_Perk_FourOnTheFloor_Pulse

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GC_Perk_FourOnTheFloor_Pulse.GC_Perk_FourOnTheFloor_Pulse_C.OnExecute
// 0x01E0 (0x01E0 - 0x0000)
struct GC_Perk_FourOnTheFloor_Pulse_C_OnExecute final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00B8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x00C0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         HueShift;                                          // 0x00C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable;                              // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OnExecute_ReturnValue;                    // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable1;                             // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable2;                             // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable3;                             // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable1;                              // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable2;                              // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomUnitVector_ReturnValue;             // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue;           // 0x0154(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable3;                              // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomUnitVector_ReturnValue1;            // 0x0164(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue1;       // 0x0170(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0180(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue1;               // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default;                             // 0x0190(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable1;                                // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue2;       // 0x01A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue1;            // 0x01AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select1_Default;                            // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x01C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1CC[0x4];                                      // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x01D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        CallFunc_SpawnDecalAtLocation_ReturnValue;         // 0x01D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_Perk_FourOnTheFloor_Pulse_C_OnExecute) == 0x000008, "Wrong alignment on GC_Perk_FourOnTheFloor_Pulse_C_OnExecute");
static_assert(sizeof(GC_Perk_FourOnTheFloor_Pulse_C_OnExecute) == 0x0001E0, "Wrong size on GC_Perk_FourOnTheFloor_Pulse_C_OnExecute");
static_assert(offsetof(GC_Perk_FourOnTheFloor_Pulse_C_OnExecute, MyTarget) == 0x000000, "Member 'GC_Perk_FourOnTheFloor_Pulse_C_OnExecute::MyTarget' has a wrong offset!");
static_assert(offsetof(GC_Perk_FourOnTheFloor_Pulse_C_OnExecute, Parameters) == 0x000008, "Member 'GC_Perk_FourOnTheFloor_Pulse_C_OnExecute::Parameters' has a wrong offset!");
static_assert(offsetof(GC_Perk_FourOnTheFloor_Pulse_C_OnExecute, ReturnValue) == 0x0000C0, "Member 'GC_Perk_FourOnTheFloor_Pulse_C_OnExecute::ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Perk_FourOnTheFloor_Pulse_C_OnExecute, HueShift) == 0x0000C4, "Member 'GC_Perk_FourOnTheFloor_Pulse_C_OnExecute::HueShift' has a wrong offset!");
static_assert(offsetof(GC_Perk_FourOnTheFloor_Pulse_C_OnExecute, Temp_struct_Variable) == 0x0000C8, "Member 'GC_Perk_FourOnTheFloor_Pulse_C_OnExecute::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GC_Perk_FourOnTheFloor_Pulse_C_OnExecute, CallFunc_MakeRotFromX_ReturnValue) == 0x0000D4, "Member 'GC_Perk_FourOnTheFloor_Pulse_C_OnExecute::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Perk_FourOnTheFloor_Pulse_C_OnExecute, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000E0, "Member 'GC_Perk_FourOnTheFloor_Pulse_C_OnExecute::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Perk_FourOnTheFloor_Pulse_C_OnExecute, CallFunc_BreakRotator_Roll) == 0x0000E4, "Member 'GC_Perk_FourOnTheFloor_Pulse_C_OnExecute::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(GC_Perk_FourOnTheFloor_Pulse_C_OnExecute, CallFunc_BreakRotator_Pitch) == 0x0000E8, "Member 'GC_Perk_FourOnTheFloor_Pulse_C_OnExecute::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(GC_Perk_FourOnTheFloor_Pulse_C_OnExecute, CallFunc_BreakRotator_Yaw) == 0x0000EC, "Member 'GC_Perk_FourOnTheFloor_Pulse_C_OnExecute::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(GC_Perk_FourOnTheFloor_Pulse_C_OnExecute, CallFunc_OnExecute_ReturnValue) == 0x0000F0, "Member 'GC_Perk_FourOnTheFloor_Pulse_C_OnExecute::CallFunc_OnExecute_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Perk_FourOnTheFloor_Pulse_C_OnExecute, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000F4, "Member 'GC_Perk_FourOnTheFloor_Pulse_C_OnExecute::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Perk_FourOnTheFloor_Pulse_C_OnExecute, Temp_struct_Variable1) == 0x0000F8, "Member 'GC_Perk_FourOnTheFloor_Pulse_C_OnExecute::Temp_struct_Variable1' has a wrong offset!");
static_assert(offsetof(GC_Perk_FourOnTheFloor_Pulse_C_OnExecute, Temp_struct_Variable2) == 0x000104, "Member 'GC_Perk_FourOnTheFloor_Pulse_C_OnExecute::Temp_struct_Variable2' has a wrong offset!");
static_assert(offsetof(GC_Perk_FourOnTheFloor_Pulse_C_OnExecute, Temp_struct_Variable3) == 0x000110, "Member 'GC_Perk_FourOnTheFloor_Pulse_C_OnExecute::Temp_struct_Variable3' has a wrong offset!");
static_assert(offsetof(GC_Perk_FourOnTheFloor_Pulse_C_OnExecute, Temp_int_Variable) == 0x00011C, "Member 'GC_Perk_FourOnTheFloor_Pulse_C_OnExecute::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(GC_Perk_FourOnTheFloor_Pulse_C_OnExecute, Temp_float_Variable) == 0x000120, "Member 'GC_Perk_FourOnTheFloor_Pulse_C_OnExecute::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(GC_Perk_FourOnTheFloor_Pulse_C_OnExecute, Temp_float_Variable1) == 0x000124, "Member 'GC_Perk_FourOnTheFloor_Pulse_C_OnExecute::Temp_float_Variable1' has a wrong offset!");
static_assert(offsetof(GC_Perk_FourOnTheFloor_Pulse_C_OnExecute, Temp_float_Variable2) == 0x000128, "Member 'GC_Perk_FourOnTheFloor_Pulse_C_OnExecute::Temp_float_Variable2' has a wrong offset!");
static_assert(offsetof(GC_Perk_FourOnTheFloor_Pulse_C_OnExecute, CallFunc_RandomFloatInRange_ReturnValue) == 0x00012C, "Member 'GC_Perk_FourOnTheFloor_Pulse_C_OnExecute::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Perk_FourOnTheFloor_Pulse_C_OnExecute, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000130, "Member 'GC_Perk_FourOnTheFloor_Pulse_C_OnExecute::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Perk_FourOnTheFloor_Pulse_C_OnExecute, CallFunc_RandomUnitVector_ReturnValue) == 0x000138, "Member 'GC_Perk_FourOnTheFloor_Pulse_C_OnExecute::CallFunc_RandomUnitVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Perk_FourOnTheFloor_Pulse_C_OnExecute, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x000144, "Member 'GC_Perk_FourOnTheFloor_Pulse_C_OnExecute::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(GC_Perk_FourOnTheFloor_Pulse_C_OnExecute, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000148, "Member 'GC_Perk_FourOnTheFloor_Pulse_C_OnExecute::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Perk_FourOnTheFloor_Pulse_C_OnExecute, CallFunc_Conv_FloatToVector_ReturnValue) == 0x000154, "Member 'GC_Perk_FourOnTheFloor_Pulse_C_OnExecute::CallFunc_Conv_FloatToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Perk_FourOnTheFloor_Pulse_C_OnExecute, Temp_float_Variable3) == 0x000160, "Member 'GC_Perk_FourOnTheFloor_Pulse_C_OnExecute::Temp_float_Variable3' has a wrong offset!");
static_assert(offsetof(GC_Perk_FourOnTheFloor_Pulse_C_OnExecute, CallFunc_RandomUnitVector_ReturnValue1) == 0x000164, "Member 'GC_Perk_FourOnTheFloor_Pulse_C_OnExecute::CallFunc_RandomUnitVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(GC_Perk_FourOnTheFloor_Pulse_C_OnExecute, CallFunc_Multiply_VectorVector_ReturnValue1) == 0x000170, "Member 'GC_Perk_FourOnTheFloor_Pulse_C_OnExecute::CallFunc_Multiply_VectorVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(GC_Perk_FourOnTheFloor_Pulse_C_OnExecute, CallFunc_RandomInteger_ReturnValue) == 0x00017C, "Member 'GC_Perk_FourOnTheFloor_Pulse_C_OnExecute::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Perk_FourOnTheFloor_Pulse_C_OnExecute, CallFunc_Add_VectorVector_ReturnValue) == 0x000180, "Member 'GC_Perk_FourOnTheFloor_Pulse_C_OnExecute::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Perk_FourOnTheFloor_Pulse_C_OnExecute, CallFunc_RandomInteger_ReturnValue1) == 0x00018C, "Member 'GC_Perk_FourOnTheFloor_Pulse_C_OnExecute::CallFunc_RandomInteger_ReturnValue1' has a wrong offset!");
static_assert(offsetof(GC_Perk_FourOnTheFloor_Pulse_C_OnExecute, K2Node_Select_Default) == 0x000190, "Member 'GC_Perk_FourOnTheFloor_Pulse_C_OnExecute::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GC_Perk_FourOnTheFloor_Pulse_C_OnExecute, Temp_int_Variable1) == 0x00019C, "Member 'GC_Perk_FourOnTheFloor_Pulse_C_OnExecute::Temp_int_Variable1' has a wrong offset!");
static_assert(offsetof(GC_Perk_FourOnTheFloor_Pulse_C_OnExecute, CallFunc_Multiply_VectorVector_ReturnValue2) == 0x0001A0, "Member 'GC_Perk_FourOnTheFloor_Pulse_C_OnExecute::CallFunc_Multiply_VectorVector_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GC_Perk_FourOnTheFloor_Pulse_C_OnExecute, CallFunc_Add_VectorVector_ReturnValue1) == 0x0001AC, "Member 'GC_Perk_FourOnTheFloor_Pulse_C_OnExecute::CallFunc_Add_VectorVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(GC_Perk_FourOnTheFloor_Pulse_C_OnExecute, K2Node_Select1_Default) == 0x0001B8, "Member 'GC_Perk_FourOnTheFloor_Pulse_C_OnExecute::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(GC_Perk_FourOnTheFloor_Pulse_C_OnExecute, CallFunc_Add_FloatFloat_ReturnValue) == 0x0001BC, "Member 'GC_Perk_FourOnTheFloor_Pulse_C_OnExecute::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Perk_FourOnTheFloor_Pulse_C_OnExecute, CallFunc_MakeRotator_ReturnValue) == 0x0001C0, "Member 'GC_Perk_FourOnTheFloor_Pulse_C_OnExecute::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Perk_FourOnTheFloor_Pulse_C_OnExecute, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x0001D0, "Member 'GC_Perk_FourOnTheFloor_Pulse_C_OnExecute::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Perk_FourOnTheFloor_Pulse_C_OnExecute, CallFunc_SpawnDecalAtLocation_ReturnValue) == 0x0001D8, "Member 'GC_Perk_FourOnTheFloor_Pulse_C_OnExecute::CallFunc_SpawnDecalAtLocation_ReturnValue' has a wrong offset!");

}

