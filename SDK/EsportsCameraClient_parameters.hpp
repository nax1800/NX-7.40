#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EsportsCameraClient

#include "Basic.hpp"


namespace SDK::Params
{

// Function EsportsCameraClient.EsportsCameraClient.HasDynamicMaterial
// 0x0001 (0x0001 - 0x0000)
struct EsportsCameraClient_HasDynamicMaterial final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EsportsCameraClient_HasDynamicMaterial) == 0x000001, "Wrong alignment on EsportsCameraClient_HasDynamicMaterial");
static_assert(sizeof(EsportsCameraClient_HasDynamicMaterial) == 0x000001, "Wrong size on EsportsCameraClient_HasDynamicMaterial");
static_assert(offsetof(EsportsCameraClient_HasDynamicMaterial, ReturnValue) == 0x000000, "Member 'EsportsCameraClient_HasDynamicMaterial::ReturnValue' has a wrong offset!");

// Function EsportsCameraClient.EsportsCameraClient.IsPlatformEnabled
// 0x0001 (0x0001 - 0x0000)
struct EsportsCameraClient_IsPlatformEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EsportsCameraClient_IsPlatformEnabled) == 0x000001, "Wrong alignment on EsportsCameraClient_IsPlatformEnabled");
static_assert(sizeof(EsportsCameraClient_IsPlatformEnabled) == 0x000001, "Wrong size on EsportsCameraClient_IsPlatformEnabled");
static_assert(offsetof(EsportsCameraClient_IsPlatformEnabled, ReturnValue) == 0x000000, "Member 'EsportsCameraClient_IsPlatformEnabled::ReturnValue' has a wrong offset!");

// Function EsportsCameraClient.EsportsCameraClient.IsPlayingWebMovie
// 0x0001 (0x0001 - 0x0000)
struct EsportsCameraClient_IsPlayingWebMovie final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EsportsCameraClient_IsPlayingWebMovie) == 0x000001, "Wrong alignment on EsportsCameraClient_IsPlayingWebMovie");
static_assert(sizeof(EsportsCameraClient_IsPlayingWebMovie) == 0x000001, "Wrong size on EsportsCameraClient_IsPlayingWebMovie");
static_assert(offsetof(EsportsCameraClient_IsPlayingWebMovie, ReturnValue) == 0x000000, "Member 'EsportsCameraClient_IsPlayingWebMovie::ReturnValue' has a wrong offset!");

// Function EsportsCameraClient.EsportsCameraClient.SetDynamicMaterial
// 0x0008 (0x0008 - 0x0000)
struct EsportsCameraClient_SetDynamicMaterial final
{
public:
	class UMaterialInstanceDynamic*               MaterialInstanceDynamic;                           // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EsportsCameraClient_SetDynamicMaterial) == 0x000008, "Wrong alignment on EsportsCameraClient_SetDynamicMaterial");
static_assert(sizeof(EsportsCameraClient_SetDynamicMaterial) == 0x000008, "Wrong size on EsportsCameraClient_SetDynamicMaterial");
static_assert(offsetof(EsportsCameraClient_SetDynamicMaterial, MaterialInstanceDynamic) == 0x000000, "Member 'EsportsCameraClient_SetDynamicMaterial::MaterialInstanceDynamic' has a wrong offset!");

// Function EsportsCameraClient.EsportsCameraStatusBase.FollowedPlayerChanged
// 0x0008 (0x0008 - 0x0000)
struct EsportsCameraStatusBase_FollowedPlayerChanged final
{
public:
	class AEsportsCameraClient*                   InEsportsCameraClient;                             // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EsportsCameraStatusBase_FollowedPlayerChanged) == 0x000008, "Wrong alignment on EsportsCameraStatusBase_FollowedPlayerChanged");
static_assert(sizeof(EsportsCameraStatusBase_FollowedPlayerChanged) == 0x000008, "Wrong size on EsportsCameraStatusBase_FollowedPlayerChanged");
static_assert(offsetof(EsportsCameraStatusBase_FollowedPlayerChanged, InEsportsCameraClient) == 0x000000, "Member 'EsportsCameraStatusBase_FollowedPlayerChanged::InEsportsCameraClient' has a wrong offset!");

}

