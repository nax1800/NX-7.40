#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Scoreboard_UI

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "FortniteUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Scoreboard_UI.Scoreboard_UI_C
// 0x00C0 (0x0348 - 0x0288)
class UScoreboard_UI_C final : public UMinigameWidgetBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0288(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCommonTextBlock*                       CountdownText;                                     // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUniformGridPanel*                      DataGridPanel;                                     // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             DataScrollBox;                                     // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USafeZone*                              SafeZone_0;                                        // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          bIgnoreDisplayMinigameEndUI;                       // 0x02B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_2B1[0x7];                                      // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            TeamFontColor;                                     // 0x02B8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateColor                            PlayerFontColor;                                   // 0x02E0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FLinearColor                           TeamBorderColor;                                   // 0x0308(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           PlayerBorderColor;                                 // 0x0318(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShouldUpdateStats;                                // 0x0328(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_329[0x3];                                      // 0x0329(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CurrentTime;                                       // 0x032C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PostGameResetDelay;                                // 0x0330(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ScoreboardScrollTimePercent;                       // 0x0334(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ScoreboardStartScrollDelayPercent;                 // 0x0338(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShouldScroll;                                     // 0x033C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33D[0x3];                                      // 0x033D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ScrollHeight;                                      // 0x0340(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewVar_0;                                          // 0x0344(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_Scoreboard_UI(int32 EntryPoint);
	void HideMinigameEndUI();
	void ShowMinigameEndUI();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void OnDisplayMinigameStartUI(bool bDisplay);
	void OnDisplayMinigameEndUI(bool bDisplay);
	void Construct();
	void UpdateStats();
	void GetScoreboardStateNames(TArray<class FText>* OutNames);
	void UpdateScrollBasedOnTime(float Delta, float ScrollLength);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Scoreboard_UI_C">();
	}
	static class UScoreboard_UI_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UScoreboard_UI_C>();
	}
};
static_assert(alignof(UScoreboard_UI_C) == 0x000008, "Wrong alignment on UScoreboard_UI_C");
static_assert(sizeof(UScoreboard_UI_C) == 0x000348, "Wrong size on UScoreboard_UI_C");
static_assert(offsetof(UScoreboard_UI_C, UberGraphFrame) == 0x000288, "Member 'UScoreboard_UI_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UScoreboard_UI_C, CountdownText) == 0x000290, "Member 'UScoreboard_UI_C::CountdownText' has a wrong offset!");
static_assert(offsetof(UScoreboard_UI_C, DataGridPanel) == 0x000298, "Member 'UScoreboard_UI_C::DataGridPanel' has a wrong offset!");
static_assert(offsetof(UScoreboard_UI_C, DataScrollBox) == 0x0002A0, "Member 'UScoreboard_UI_C::DataScrollBox' has a wrong offset!");
static_assert(offsetof(UScoreboard_UI_C, SafeZone_0) == 0x0002A8, "Member 'UScoreboard_UI_C::SafeZone_0' has a wrong offset!");
static_assert(offsetof(UScoreboard_UI_C, bIgnoreDisplayMinigameEndUI) == 0x0002B0, "Member 'UScoreboard_UI_C::bIgnoreDisplayMinigameEndUI' has a wrong offset!");
static_assert(offsetof(UScoreboard_UI_C, TeamFontColor) == 0x0002B8, "Member 'UScoreboard_UI_C::TeamFontColor' has a wrong offset!");
static_assert(offsetof(UScoreboard_UI_C, PlayerFontColor) == 0x0002E0, "Member 'UScoreboard_UI_C::PlayerFontColor' has a wrong offset!");
static_assert(offsetof(UScoreboard_UI_C, TeamBorderColor) == 0x000308, "Member 'UScoreboard_UI_C::TeamBorderColor' has a wrong offset!");
static_assert(offsetof(UScoreboard_UI_C, PlayerBorderColor) == 0x000318, "Member 'UScoreboard_UI_C::PlayerBorderColor' has a wrong offset!");
static_assert(offsetof(UScoreboard_UI_C, bShouldUpdateStats) == 0x000328, "Member 'UScoreboard_UI_C::bShouldUpdateStats' has a wrong offset!");
static_assert(offsetof(UScoreboard_UI_C, CurrentTime) == 0x00032C, "Member 'UScoreboard_UI_C::CurrentTime' has a wrong offset!");
static_assert(offsetof(UScoreboard_UI_C, PostGameResetDelay) == 0x000330, "Member 'UScoreboard_UI_C::PostGameResetDelay' has a wrong offset!");
static_assert(offsetof(UScoreboard_UI_C, ScoreboardScrollTimePercent) == 0x000334, "Member 'UScoreboard_UI_C::ScoreboardScrollTimePercent' has a wrong offset!");
static_assert(offsetof(UScoreboard_UI_C, ScoreboardStartScrollDelayPercent) == 0x000338, "Member 'UScoreboard_UI_C::ScoreboardStartScrollDelayPercent' has a wrong offset!");
static_assert(offsetof(UScoreboard_UI_C, bShouldScroll) == 0x00033C, "Member 'UScoreboard_UI_C::bShouldScroll' has a wrong offset!");
static_assert(offsetof(UScoreboard_UI_C, ScrollHeight) == 0x000340, "Member 'UScoreboard_UI_C::ScrollHeight' has a wrong offset!");
static_assert(offsetof(UScoreboard_UI_C, NewVar_0) == 0x000344, "Member 'UScoreboard_UI_C::NewVar_0' has a wrong offset!");

}

