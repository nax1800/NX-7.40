#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaFrontEndRadialPicker

#include "Basic.hpp"

#include "Slate_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "CommonInput_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function AthenaFrontEndRadialPicker.AthenaFrontEndRadialPicker_C.ExecuteUbergraph_AthenaFrontEndRadialPicker
// 0x0238 (0x0238 - 0x0000)
struct AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue2;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue3;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue4;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue5;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue6;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue7;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortPickerContext*                     CallFunc_GetContext_ReturnValue;                   // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0054(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanConfirm_CanAccept;                     // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable1;                               // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_93[0x1];                                       // 0x0093(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_PickerOption;                   // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x009B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue1;         // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInputAnalogStickState_StickX;          // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInputAnalogStickState_StickY;          // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMousePosition_LocationX;               // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMousePosition_LocationY;               // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetMousePosition_ReturnValue;             // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAtan2_ReturnValue;                     // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x00D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue1;         // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable1;                               // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_DegAtan2_ReturnValue1;                    // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable2;                               // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue;                // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FB[0x5];                                       // 0x00FB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonInputSubsystem*                  CallFunc_GetContext_ReturnValue1;                  // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue;          // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x010A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10B[0x5];                                      // 0x010B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class URadialPickerItem_C*                    CallFunc_Array_Get_Item;                           // 0x0110(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x3];                                      // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 OptionDirection)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0124(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsGamepadInPickerDeadZone_bIsInDeadZone;  // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x0135(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0136(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_137[0x1];                                      // 0x0137(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonInputSubsystem*                  CallFunc_GetContext_ReturnValue2;                  // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue1;         // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue1;         // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue1;               // 0x0142(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue1;           // 0x0143(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate1;             // 0x0144(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortPickerContext*                     CallFunc_GetContext_ReturnValue3;                  // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URadialPickerItem_C*                    K2Node_ComponentBoundEvent_Picked_Option7;         // 0x0160(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URadialPickerItem_C*                    K2Node_ComponentBoundEvent_Picked_Option6;         // 0x0168(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URadialPickerItem_C*                    K2Node_ComponentBoundEvent_Picked_Option5;         // 0x0170(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URadialPickerItem_C*                    K2Node_ComponentBoundEvent_Picked_Option4;         // 0x0178(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URadialPickerItem_C*                    K2Node_ComponentBoundEvent_Picked_Option3;         // 0x0180(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URadialPickerItem_C*                    K2Node_ComponentBoundEvent_Picked_Option2;         // 0x0188(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URadialPickerItem_C*                    K2Node_ComponentBoundEvent_Picked_Option1;         // 0x0190(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URadialPickerItem_C*                    K2Node_ComponentBoundEvent_Picked_Option;          // 0x0198(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortPickerContext*                     CallFunc_GetContext_ReturnValue4;                  // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetOptionAngle_Angle;                     // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue2;                 // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B1[0x3];                                      // 0x01B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAngleDifference_Difference;            // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1BA[0x6];                                      // 0x01BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonInputSubsystem*                  CallFunc_GetContext_ReturnValue5;                  // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue2;         // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C9[0x3];                                      // 0x01C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate2;             // 0x01CC(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue2;         // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DD[0x3];                                      // 0x01DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButton*                          K2Node_ComponentBoundEvent_Button1;                // 0x01E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButton*                          K2Node_ComponentBoundEvent_Button;                 // 0x01F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate3;             // 0x01F8(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Variable3;                               // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_209[0x3];                                      // 0x0209(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select1_Default;                            // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 PickerOption)>           K2Node_CreateDelegate_OutputDelegate4;             // 0x0210(0x0010)(ZeroConstructor, NoDestructor)
	class UWidget*                                K2Node_Select2_Default;                            // 0x0220(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortPickerContext*                     CallFunc_GetContext_ReturnValue6;                  // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                K2Node_Select3_Default;                            // 0x0230(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker) == 0x000008, "Wrong alignment on AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker");
static_assert(sizeof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker) == 0x000238, "Wrong size on AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, EntryPoint) == 0x000000, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::EntryPoint' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, Temp_int_Array_Index_Variable) == 0x000004, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, CallFunc_Array_Add_ReturnValue) == 0x000008, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, CallFunc_Array_Add_ReturnValue1) == 0x00000C, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::CallFunc_Array_Add_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, CallFunc_Array_Add_ReturnValue2) == 0x000010, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::CallFunc_Array_Add_ReturnValue2' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, CallFunc_Array_Add_ReturnValue3) == 0x000014, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::CallFunc_Array_Add_ReturnValue3' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, CallFunc_Array_Add_ReturnValue4) == 0x000018, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::CallFunc_Array_Add_ReturnValue4' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, CallFunc_Array_Add_ReturnValue5) == 0x00001C, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::CallFunc_Array_Add_ReturnValue5' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, CallFunc_Array_Add_ReturnValue6) == 0x000020, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::CallFunc_Array_Add_ReturnValue6' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, CallFunc_Array_Add_ReturnValue7) == 0x000024, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::CallFunc_Array_Add_ReturnValue7' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000038, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00003C, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, Temp_int_Loop_Counter_Variable1) == 0x000040, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, CallFunc_Add_IntInt_ReturnValue1) == 0x000044, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, CallFunc_GetContext_ReturnValue) == 0x000048, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, CallFunc_Not_PreBool_ReturnValue) == 0x000050, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, K2Node_Event_MyGeometry) == 0x000054, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, K2Node_Event_InDeltaTime) == 0x00008C, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, Temp_bool_Variable) == 0x000090, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, CallFunc_CanConfirm_CanAccept) == 0x000091, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::CallFunc_CanConfirm_CanAccept' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, Temp_bool_Variable1) == 0x000092, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, K2Node_CustomEvent_PickerOption) == 0x000094, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::K2Node_CustomEvent_PickerOption' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, Temp_byte_Variable) == 0x000098, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, Temp_bool_True_if_break_was_hit_Variable) == 0x000099, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, CallFunc_Not_PreBool_ReturnValue1) == 0x00009A, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, CallFunc_BooleanAND_ReturnValue) == 0x00009B, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, CallFunc_GetPlayerController_ReturnValue) == 0x0000A0, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, CallFunc_GetPlayerController_ReturnValue1) == 0x0000A8, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::CallFunc_GetPlayerController_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, CallFunc_GetInputAnalogStickState_StickX) == 0x0000B0, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::CallFunc_GetInputAnalogStickState_StickX' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, CallFunc_GetInputAnalogStickState_StickY) == 0x0000B4, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::CallFunc_GetInputAnalogStickState_StickY' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, CallFunc_GetMousePosition_LocationX) == 0x0000B8, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::CallFunc_GetMousePosition_LocationX' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, CallFunc_GetMousePosition_LocationY) == 0x0000BC, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::CallFunc_GetMousePosition_LocationY' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, CallFunc_GetMousePosition_ReturnValue) == 0x0000C0, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::CallFunc_GetMousePosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000C4, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, CallFunc_GetViewportSize_ReturnValue) == 0x0000C8, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, CallFunc_DegAtan2_ReturnValue) == 0x0000D0, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::CallFunc_DegAtan2_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x0000D4, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, CallFunc_BreakVector2D_X) == 0x0000DC, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, CallFunc_BreakVector2D_Y) == 0x0000E0, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000E4, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, CallFunc_Subtract_FloatFloat_ReturnValue1) == 0x0000E8, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::CallFunc_Subtract_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x0000EC, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, Temp_byte_Variable1) == 0x0000F0, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, CallFunc_DegAtan2_ReturnValue1) == 0x0000F4, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::CallFunc_DegAtan2_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, Temp_bool_Variable2) == 0x0000F8, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000F9, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, CallFunc_GetVisibility_ReturnValue) == 0x0000FA, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::CallFunc_GetVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, CallFunc_GetContext_ReturnValue1) == 0x000100, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::CallFunc_GetContext_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000108, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, CallFunc_GetCurrentInputType_ReturnValue) == 0x000109, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::CallFunc_GetCurrentInputType_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00010A, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, CallFunc_Array_Get_Item) == 0x000110, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, K2Node_Select_Default) == 0x000118, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, CallFunc_Array_Length_ReturnValue1) == 0x00011C, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, CallFunc_Less_IntInt_ReturnValue1) == 0x000120, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, K2Node_CreateDelegate_OutputDelegate) == 0x000124, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, CallFunc_IsGamepadInPickerDeadZone_bIsInDeadZone) == 0x000134, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::CallFunc_IsGamepadInPickerDeadZone_bIsInDeadZone' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, CallFunc_Not_PreBool_ReturnValue2) == 0x000135, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, CallFunc_BooleanOR_ReturnValue) == 0x000136, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, CallFunc_GetContext_ReturnValue2) == 0x000138, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::CallFunc_GetContext_ReturnValue2' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, CallFunc_GetCurrentInputType_ReturnValue1) == 0x000140, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::CallFunc_GetCurrentInputType_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, CallFunc_EqualEqual_ByteByte_ReturnValue1) == 0x000141, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::CallFunc_EqualEqual_ByteByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, CallFunc_GetVisibility_ReturnValue1) == 0x000142, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::CallFunc_GetVisibility_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, CallFunc_NotEqual_ByteByte_ReturnValue1) == 0x000143, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::CallFunc_NotEqual_ByteByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, K2Node_CreateDelegate_OutputDelegate1) == 0x000144, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, CallFunc_GetContext_ReturnValue3) == 0x000158, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::CallFunc_GetContext_ReturnValue3' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, K2Node_ComponentBoundEvent_Picked_Option7) == 0x000160, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::K2Node_ComponentBoundEvent_Picked_Option7' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, K2Node_ComponentBoundEvent_Picked_Option6) == 0x000168, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::K2Node_ComponentBoundEvent_Picked_Option6' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, K2Node_ComponentBoundEvent_Picked_Option5) == 0x000170, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::K2Node_ComponentBoundEvent_Picked_Option5' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, K2Node_ComponentBoundEvent_Picked_Option4) == 0x000178, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::K2Node_ComponentBoundEvent_Picked_Option4' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, K2Node_ComponentBoundEvent_Picked_Option3) == 0x000180, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::K2Node_ComponentBoundEvent_Picked_Option3' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, K2Node_ComponentBoundEvent_Picked_Option2) == 0x000188, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::K2Node_ComponentBoundEvent_Picked_Option2' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, K2Node_ComponentBoundEvent_Picked_Option1) == 0x000190, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::K2Node_ComponentBoundEvent_Picked_Option1' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, K2Node_ComponentBoundEvent_Picked_Option) == 0x000198, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::K2Node_ComponentBoundEvent_Picked_Option' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, CallFunc_GetContext_ReturnValue4) == 0x0001A0, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::CallFunc_GetContext_ReturnValue4' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, Temp_int_Array_Index_Variable1) == 0x0001A8, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, CallFunc_GetOptionAngle_Angle) == 0x0001AC, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::CallFunc_GetOptionAngle_Angle' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, CallFunc_Less_IntInt_ReturnValue2) == 0x0001B0, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::CallFunc_Less_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, CallFunc_GetAngleDifference_Difference) == 0x0001B4, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::CallFunc_GetAngleDifference_Difference' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0001B8, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0001B9, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, CallFunc_GetContext_ReturnValue5) == 0x0001C0, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::CallFunc_GetContext_ReturnValue5' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, CallFunc_GetCurrentInputType_ReturnValue2) == 0x0001C8, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::CallFunc_GetCurrentInputType_ReturnValue2' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, K2Node_CreateDelegate_OutputDelegate2) == 0x0001CC, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, CallFunc_EqualEqual_ByteByte_ReturnValue2) == 0x0001DC, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::CallFunc_EqualEqual_ByteByte_ReturnValue2' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, K2Node_ComponentBoundEvent_Button1) == 0x0001E0, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::K2Node_ComponentBoundEvent_Button1' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x0001E8, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, K2Node_ComponentBoundEvent_Button) == 0x0001F0, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, K2Node_CreateDelegate_OutputDelegate3) == 0x0001F8, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, Temp_bool_Variable3) == 0x000208, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::Temp_bool_Variable3' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, K2Node_Select1_Default) == 0x00020C, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, K2Node_CreateDelegate_OutputDelegate4) == 0x000210, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::K2Node_CreateDelegate_OutputDelegate4' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, K2Node_Select2_Default) == 0x000220, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, CallFunc_GetContext_ReturnValue6) == 0x000228, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::CallFunc_GetContext_ReturnValue6' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker, K2Node_Select3_Default) == 0x000230, "Member 'AthenaFrontEndRadialPicker_C_ExecuteUbergraph_AthenaFrontEndRadialPicker::K2Node_Select3_Default' has a wrong offset!");

// Function AthenaFrontEndRadialPicker.AthenaFrontEndRadialPicker_C.BndEvt__PreviousWheelButton_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct AthenaFrontEndRadialPicker_C_BndEvt__PreviousWheelButton_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature final
{
public:
	class UCommonButton*                          Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaFrontEndRadialPicker_C_BndEvt__PreviousWheelButton_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on AthenaFrontEndRadialPicker_C_BndEvt__PreviousWheelButton_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature");
static_assert(sizeof(AthenaFrontEndRadialPicker_C_BndEvt__PreviousWheelButton_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong size on AthenaFrontEndRadialPicker_C_BndEvt__PreviousWheelButton_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_BndEvt__PreviousWheelButton_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature, Button) == 0x000000, "Member 'AthenaFrontEndRadialPicker_C_BndEvt__PreviousWheelButton_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature::Button' has a wrong offset!");

// Function AthenaFrontEndRadialPicker.AthenaFrontEndRadialPicker_C.BndEvt__NextWheelButton_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct AthenaFrontEndRadialPicker_C_BndEvt__NextWheelButton_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature final
{
public:
	class UCommonButton*                          Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaFrontEndRadialPicker_C_BndEvt__NextWheelButton_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on AthenaFrontEndRadialPicker_C_BndEvt__NextWheelButton_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature");
static_assert(sizeof(AthenaFrontEndRadialPicker_C_BndEvt__NextWheelButton_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong size on AthenaFrontEndRadialPicker_C_BndEvt__NextWheelButton_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_BndEvt__NextWheelButton_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature, Button) == 0x000000, "Member 'AthenaFrontEndRadialPicker_C_BndEvt__NextWheelButton_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature::Button' has a wrong offset!");

// Function AthenaFrontEndRadialPicker.AthenaFrontEndRadialPicker_C.BndEvt__PickerOption7_K2Node_ComponentBoundEvent_34_On Item Touched__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct AthenaFrontEndRadialPicker_C_BndEvt__PickerOption7_K2Node_ComponentBoundEvent_34_On_Item_Touched__DelegateSignature final
{
public:
	class URadialPickerItem_C*                    Picked_Option;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaFrontEndRadialPicker_C_BndEvt__PickerOption7_K2Node_ComponentBoundEvent_34_On_Item_Touched__DelegateSignature) == 0x000008, "Wrong alignment on AthenaFrontEndRadialPicker_C_BndEvt__PickerOption7_K2Node_ComponentBoundEvent_34_On_Item_Touched__DelegateSignature");
static_assert(sizeof(AthenaFrontEndRadialPicker_C_BndEvt__PickerOption7_K2Node_ComponentBoundEvent_34_On_Item_Touched__DelegateSignature) == 0x000008, "Wrong size on AthenaFrontEndRadialPicker_C_BndEvt__PickerOption7_K2Node_ComponentBoundEvent_34_On_Item_Touched__DelegateSignature");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_BndEvt__PickerOption7_K2Node_ComponentBoundEvent_34_On_Item_Touched__DelegateSignature, Picked_Option) == 0x000000, "Member 'AthenaFrontEndRadialPicker_C_BndEvt__PickerOption7_K2Node_ComponentBoundEvent_34_On_Item_Touched__DelegateSignature::Picked_Option' has a wrong offset!");

// Function AthenaFrontEndRadialPicker.AthenaFrontEndRadialPicker_C.BndEvt__PickerOption6_K2Node_ComponentBoundEvent_27_On Item Touched__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct AthenaFrontEndRadialPicker_C_BndEvt__PickerOption6_K2Node_ComponentBoundEvent_27_On_Item_Touched__DelegateSignature final
{
public:
	class URadialPickerItem_C*                    Picked_Option;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaFrontEndRadialPicker_C_BndEvt__PickerOption6_K2Node_ComponentBoundEvent_27_On_Item_Touched__DelegateSignature) == 0x000008, "Wrong alignment on AthenaFrontEndRadialPicker_C_BndEvt__PickerOption6_K2Node_ComponentBoundEvent_27_On_Item_Touched__DelegateSignature");
static_assert(sizeof(AthenaFrontEndRadialPicker_C_BndEvt__PickerOption6_K2Node_ComponentBoundEvent_27_On_Item_Touched__DelegateSignature) == 0x000008, "Wrong size on AthenaFrontEndRadialPicker_C_BndEvt__PickerOption6_K2Node_ComponentBoundEvent_27_On_Item_Touched__DelegateSignature");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_BndEvt__PickerOption6_K2Node_ComponentBoundEvent_27_On_Item_Touched__DelegateSignature, Picked_Option) == 0x000000, "Member 'AthenaFrontEndRadialPicker_C_BndEvt__PickerOption6_K2Node_ComponentBoundEvent_27_On_Item_Touched__DelegateSignature::Picked_Option' has a wrong offset!");

// Function AthenaFrontEndRadialPicker.AthenaFrontEndRadialPicker_C.BndEvt__PickerOption5_K2Node_ComponentBoundEvent_21_On Item Touched__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct AthenaFrontEndRadialPicker_C_BndEvt__PickerOption5_K2Node_ComponentBoundEvent_21_On_Item_Touched__DelegateSignature final
{
public:
	class URadialPickerItem_C*                    Picked_Option;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaFrontEndRadialPicker_C_BndEvt__PickerOption5_K2Node_ComponentBoundEvent_21_On_Item_Touched__DelegateSignature) == 0x000008, "Wrong alignment on AthenaFrontEndRadialPicker_C_BndEvt__PickerOption5_K2Node_ComponentBoundEvent_21_On_Item_Touched__DelegateSignature");
static_assert(sizeof(AthenaFrontEndRadialPicker_C_BndEvt__PickerOption5_K2Node_ComponentBoundEvent_21_On_Item_Touched__DelegateSignature) == 0x000008, "Wrong size on AthenaFrontEndRadialPicker_C_BndEvt__PickerOption5_K2Node_ComponentBoundEvent_21_On_Item_Touched__DelegateSignature");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_BndEvt__PickerOption5_K2Node_ComponentBoundEvent_21_On_Item_Touched__DelegateSignature, Picked_Option) == 0x000000, "Member 'AthenaFrontEndRadialPicker_C_BndEvt__PickerOption5_K2Node_ComponentBoundEvent_21_On_Item_Touched__DelegateSignature::Picked_Option' has a wrong offset!");

// Function AthenaFrontEndRadialPicker.AthenaFrontEndRadialPicker_C.BndEvt__PickerOption4_K2Node_ComponentBoundEvent_16_On Item Touched__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct AthenaFrontEndRadialPicker_C_BndEvt__PickerOption4_K2Node_ComponentBoundEvent_16_On_Item_Touched__DelegateSignature final
{
public:
	class URadialPickerItem_C*                    Picked_Option;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaFrontEndRadialPicker_C_BndEvt__PickerOption4_K2Node_ComponentBoundEvent_16_On_Item_Touched__DelegateSignature) == 0x000008, "Wrong alignment on AthenaFrontEndRadialPicker_C_BndEvt__PickerOption4_K2Node_ComponentBoundEvent_16_On_Item_Touched__DelegateSignature");
static_assert(sizeof(AthenaFrontEndRadialPicker_C_BndEvt__PickerOption4_K2Node_ComponentBoundEvent_16_On_Item_Touched__DelegateSignature) == 0x000008, "Wrong size on AthenaFrontEndRadialPicker_C_BndEvt__PickerOption4_K2Node_ComponentBoundEvent_16_On_Item_Touched__DelegateSignature");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_BndEvt__PickerOption4_K2Node_ComponentBoundEvent_16_On_Item_Touched__DelegateSignature, Picked_Option) == 0x000000, "Member 'AthenaFrontEndRadialPicker_C_BndEvt__PickerOption4_K2Node_ComponentBoundEvent_16_On_Item_Touched__DelegateSignature::Picked_Option' has a wrong offset!");

// Function AthenaFrontEndRadialPicker.AthenaFrontEndRadialPicker_C.BndEvt__PickerOption3_K2Node_ComponentBoundEvent_12_On Item Touched__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct AthenaFrontEndRadialPicker_C_BndEvt__PickerOption3_K2Node_ComponentBoundEvent_12_On_Item_Touched__DelegateSignature final
{
public:
	class URadialPickerItem_C*                    Picked_Option;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaFrontEndRadialPicker_C_BndEvt__PickerOption3_K2Node_ComponentBoundEvent_12_On_Item_Touched__DelegateSignature) == 0x000008, "Wrong alignment on AthenaFrontEndRadialPicker_C_BndEvt__PickerOption3_K2Node_ComponentBoundEvent_12_On_Item_Touched__DelegateSignature");
static_assert(sizeof(AthenaFrontEndRadialPicker_C_BndEvt__PickerOption3_K2Node_ComponentBoundEvent_12_On_Item_Touched__DelegateSignature) == 0x000008, "Wrong size on AthenaFrontEndRadialPicker_C_BndEvt__PickerOption3_K2Node_ComponentBoundEvent_12_On_Item_Touched__DelegateSignature");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_BndEvt__PickerOption3_K2Node_ComponentBoundEvent_12_On_Item_Touched__DelegateSignature, Picked_Option) == 0x000000, "Member 'AthenaFrontEndRadialPicker_C_BndEvt__PickerOption3_K2Node_ComponentBoundEvent_12_On_Item_Touched__DelegateSignature::Picked_Option' has a wrong offset!");

// Function AthenaFrontEndRadialPicker.AthenaFrontEndRadialPicker_C.BndEvt__PickerOption2_K2Node_ComponentBoundEvent_9_On Item Touched__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct AthenaFrontEndRadialPicker_C_BndEvt__PickerOption2_K2Node_ComponentBoundEvent_9_On_Item_Touched__DelegateSignature final
{
public:
	class URadialPickerItem_C*                    Picked_Option;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaFrontEndRadialPicker_C_BndEvt__PickerOption2_K2Node_ComponentBoundEvent_9_On_Item_Touched__DelegateSignature) == 0x000008, "Wrong alignment on AthenaFrontEndRadialPicker_C_BndEvt__PickerOption2_K2Node_ComponentBoundEvent_9_On_Item_Touched__DelegateSignature");
static_assert(sizeof(AthenaFrontEndRadialPicker_C_BndEvt__PickerOption2_K2Node_ComponentBoundEvent_9_On_Item_Touched__DelegateSignature) == 0x000008, "Wrong size on AthenaFrontEndRadialPicker_C_BndEvt__PickerOption2_K2Node_ComponentBoundEvent_9_On_Item_Touched__DelegateSignature");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_BndEvt__PickerOption2_K2Node_ComponentBoundEvent_9_On_Item_Touched__DelegateSignature, Picked_Option) == 0x000000, "Member 'AthenaFrontEndRadialPicker_C_BndEvt__PickerOption2_K2Node_ComponentBoundEvent_9_On_Item_Touched__DelegateSignature::Picked_Option' has a wrong offset!");

// Function AthenaFrontEndRadialPicker.AthenaFrontEndRadialPicker_C.BndEvt__PickerOption1_K2Node_ComponentBoundEvent_8_On Item Touched__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct AthenaFrontEndRadialPicker_C_BndEvt__PickerOption1_K2Node_ComponentBoundEvent_8_On_Item_Touched__DelegateSignature final
{
public:
	class URadialPickerItem_C*                    Picked_Option;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaFrontEndRadialPicker_C_BndEvt__PickerOption1_K2Node_ComponentBoundEvent_8_On_Item_Touched__DelegateSignature) == 0x000008, "Wrong alignment on AthenaFrontEndRadialPicker_C_BndEvt__PickerOption1_K2Node_ComponentBoundEvent_8_On_Item_Touched__DelegateSignature");
static_assert(sizeof(AthenaFrontEndRadialPicker_C_BndEvt__PickerOption1_K2Node_ComponentBoundEvent_8_On_Item_Touched__DelegateSignature) == 0x000008, "Wrong size on AthenaFrontEndRadialPicker_C_BndEvt__PickerOption1_K2Node_ComponentBoundEvent_8_On_Item_Touched__DelegateSignature");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_BndEvt__PickerOption1_K2Node_ComponentBoundEvent_8_On_Item_Touched__DelegateSignature, Picked_Option) == 0x000000, "Member 'AthenaFrontEndRadialPicker_C_BndEvt__PickerOption1_K2Node_ComponentBoundEvent_8_On_Item_Touched__DelegateSignature::Picked_Option' has a wrong offset!");

// Function AthenaFrontEndRadialPicker.AthenaFrontEndRadialPicker_C.BndEvt__PickerOption0_K2Node_ComponentBoundEvent_2_On Item Touched__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct AthenaFrontEndRadialPicker_C_BndEvt__PickerOption0_K2Node_ComponentBoundEvent_2_On_Item_Touched__DelegateSignature final
{
public:
	class URadialPickerItem_C*                    Picked_Option;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaFrontEndRadialPicker_C_BndEvt__PickerOption0_K2Node_ComponentBoundEvent_2_On_Item_Touched__DelegateSignature) == 0x000008, "Wrong alignment on AthenaFrontEndRadialPicker_C_BndEvt__PickerOption0_K2Node_ComponentBoundEvent_2_On_Item_Touched__DelegateSignature");
static_assert(sizeof(AthenaFrontEndRadialPicker_C_BndEvt__PickerOption0_K2Node_ComponentBoundEvent_2_On_Item_Touched__DelegateSignature) == 0x000008, "Wrong size on AthenaFrontEndRadialPicker_C_BndEvt__PickerOption0_K2Node_ComponentBoundEvent_2_On_Item_Touched__DelegateSignature");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_BndEvt__PickerOption0_K2Node_ComponentBoundEvent_2_On_Item_Touched__DelegateSignature, Picked_Option) == 0x000000, "Member 'AthenaFrontEndRadialPicker_C_BndEvt__PickerOption0_K2Node_ComponentBoundEvent_2_On_Item_Touched__DelegateSignature::Picked_Option' has a wrong offset!");

// Function AthenaFrontEndRadialPicker.AthenaFrontEndRadialPicker_C.AcceptChosenOption
// 0x0004 (0x0004 - 0x0000)
struct AthenaFrontEndRadialPicker_C_AcceptChosenOption final
{
public:
	int32                                         PickerOption;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaFrontEndRadialPicker_C_AcceptChosenOption) == 0x000004, "Wrong alignment on AthenaFrontEndRadialPicker_C_AcceptChosenOption");
static_assert(sizeof(AthenaFrontEndRadialPicker_C_AcceptChosenOption) == 0x000004, "Wrong size on AthenaFrontEndRadialPicker_C_AcceptChosenOption");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_AcceptChosenOption, PickerOption) == 0x000000, "Member 'AthenaFrontEndRadialPicker_C_AcceptChosenOption::PickerOption' has a wrong offset!");

// Function AthenaFrontEndRadialPicker.AthenaFrontEndRadialPicker_C.Tick
// 0x003C (0x003C - 0x0000)
struct AthenaFrontEndRadialPicker_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaFrontEndRadialPicker_C_Tick) == 0x000004, "Wrong alignment on AthenaFrontEndRadialPicker_C_Tick");
static_assert(sizeof(AthenaFrontEndRadialPicker_C_Tick) == 0x00003C, "Wrong size on AthenaFrontEndRadialPicker_C_Tick");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_Tick, MyGeometry) == 0x000000, "Member 'AthenaFrontEndRadialPicker_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_Tick, InDeltaTime) == 0x000038, "Member 'AthenaFrontEndRadialPicker_C_Tick::InDeltaTime' has a wrong offset!");

// Function AthenaFrontEndRadialPicker.AthenaFrontEndRadialPicker_C.InitializePicker
// 0x01D8 (0x01D8 - 0x0000)
struct AthenaFrontEndRadialPicker_C_InitializePicker final
{
public:
	EFortPickerMode                               Param_PickerMode;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         InitialOption;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetOptionPosition_Position;               // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTouchInputPlatform_ReturnValue;         // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortPickerContext*                     CallFunc_GetContext_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumPickerOptions_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortPickerContext*                     CallFunc_GetContext_ReturnValue1;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortItem*                              CallFunc_GetRadialPickerOptionItem_Item;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetRadialPickerOptionItem_bOptionEnabled; // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetRadialPickerOptionImageAndLabel_Label; // 0x0040(0x0018)()
	struct FSlateBrush                            CallFunc_GetRadialPickerOptionImageAndLabel_Brush; // 0x0058(0x0088)()
	TSoftObjectPtr<class UTexture2D>              CallFunc_GetRadialPickerOptionImageAndLabel_Icon;  // 0x00E0(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_GetRadialPickerOptionImageAndLabel_bOptionEnabled; // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_115[0x3];                                      // 0x0115(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnchors                               K2Node_MakeStruct_Anchors;                         // 0x0118(0x0010)(NoDestructor)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URadialPickerItem_C*                    CallFunc_Create_ReturnValue;                       // 0x0138(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0148(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0150(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable1;                               // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable1;                               // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x016A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x016B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue1;         // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x016D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16E[0x2];                                      // 0x016E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue2;                  // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortPickerContext*                     CallFunc_GetContext_ReturnValue3;                  // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetPickerConfirmActionName_ReturnValue;   // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetCurrentPickerDisplayName_ReturnValue;  // 0x0188(0x0018)()
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortPickerContext*                     CallFunc_GetContext_ReturnValue4;                  // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetPickerWheelAdjacency_bCanPageLeft;     // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetPickerWheelAdjacency_bCanPageRight;    // 0x01B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable2;                               // 0x01B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue1;                   // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue2;                   // 0x01B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B6[0x2];                                      // 0x01B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class URadialPickerItem_C*                    CallFunc_Array_Get_Item;                           // 0x01B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C5[0x3];                                      // 0x01C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue1;            // 0x01C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable3;                               // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select1_Default;                            // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x01D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AthenaFrontEndRadialPicker_C_InitializePicker) == 0x000008, "Wrong alignment on AthenaFrontEndRadialPicker_C_InitializePicker");
static_assert(sizeof(AthenaFrontEndRadialPicker_C_InitializePicker) == 0x0001D8, "Wrong size on AthenaFrontEndRadialPicker_C_InitializePicker");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_InitializePicker, Param_PickerMode) == 0x000000, "Member 'AthenaFrontEndRadialPicker_C_InitializePicker::Param_PickerMode' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_InitializePicker, InitialOption) == 0x000004, "Member 'AthenaFrontEndRadialPicker_C_InitializePicker::InitialOption' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_InitializePicker, Temp_int_Array_Index_Variable) == 0x000008, "Member 'AthenaFrontEndRadialPicker_C_InitializePicker::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_InitializePicker, CallFunc_GetOptionPosition_Position) == 0x00000C, "Member 'AthenaFrontEndRadialPicker_C_InitializePicker::CallFunc_GetOptionPosition_Position' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_InitializePicker, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000014, "Member 'AthenaFrontEndRadialPicker_C_InitializePicker::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_InitializePicker, CallFunc_IsTouchInputPlatform_ReturnValue) == 0x000015, "Member 'AthenaFrontEndRadialPicker_C_InitializePicker::CallFunc_IsTouchInputPlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_InitializePicker, CallFunc_GetContext_ReturnValue) == 0x000018, "Member 'AthenaFrontEndRadialPicker_C_InitializePicker::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_InitializePicker, CallFunc_GetNumPickerOptions_ReturnValue) == 0x000020, "Member 'AthenaFrontEndRadialPicker_C_InitializePicker::CallFunc_GetNumPickerOptions_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_InitializePicker, CallFunc_GetContext_ReturnValue1) == 0x000028, "Member 'AthenaFrontEndRadialPicker_C_InitializePicker::CallFunc_GetContext_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_InitializePicker, CallFunc_GetRadialPickerOptionItem_Item) == 0x000030, "Member 'AthenaFrontEndRadialPicker_C_InitializePicker::CallFunc_GetRadialPickerOptionItem_Item' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_InitializePicker, CallFunc_GetRadialPickerOptionItem_bOptionEnabled) == 0x000038, "Member 'AthenaFrontEndRadialPicker_C_InitializePicker::CallFunc_GetRadialPickerOptionItem_bOptionEnabled' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_InitializePicker, CallFunc_GetRadialPickerOptionImageAndLabel_Label) == 0x000040, "Member 'AthenaFrontEndRadialPicker_C_InitializePicker::CallFunc_GetRadialPickerOptionImageAndLabel_Label' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_InitializePicker, CallFunc_GetRadialPickerOptionImageAndLabel_Brush) == 0x000058, "Member 'AthenaFrontEndRadialPicker_C_InitializePicker::CallFunc_GetRadialPickerOptionImageAndLabel_Brush' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_InitializePicker, CallFunc_GetRadialPickerOptionImageAndLabel_Icon) == 0x0000E0, "Member 'AthenaFrontEndRadialPicker_C_InitializePicker::CallFunc_GetRadialPickerOptionImageAndLabel_Icon' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_InitializePicker, CallFunc_GetRadialPickerOptionImageAndLabel_bOptionEnabled) == 0x000108, "Member 'AthenaFrontEndRadialPicker_C_InitializePicker::CallFunc_GetRadialPickerOptionImageAndLabel_bOptionEnabled' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_InitializePicker, Temp_int_Loop_Counter_Variable) == 0x00010C, "Member 'AthenaFrontEndRadialPicker_C_InitializePicker::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_InitializePicker, CallFunc_Add_IntInt_ReturnValue) == 0x000110, "Member 'AthenaFrontEndRadialPicker_C_InitializePicker::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_InitializePicker, Temp_byte_Variable) == 0x000114, "Member 'AthenaFrontEndRadialPicker_C_InitializePicker::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_InitializePicker, K2Node_MakeStruct_Anchors) == 0x000118, "Member 'AthenaFrontEndRadialPicker_C_InitializePicker::K2Node_MakeStruct_Anchors' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_InitializePicker, CallFunc_GetPlayerController_ReturnValue) == 0x000128, "Member 'AthenaFrontEndRadialPicker_C_InitializePicker::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_InitializePicker, Temp_bool_Variable) == 0x000130, "Member 'AthenaFrontEndRadialPicker_C_InitializePicker::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_InitializePicker, CallFunc_Create_ReturnValue) == 0x000138, "Member 'AthenaFrontEndRadialPicker_C_InitializePicker::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_InitializePicker, CallFunc_Array_Add_ReturnValue) == 0x000140, "Member 'AthenaFrontEndRadialPicker_C_InitializePicker::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_InitializePicker, CallFunc_Subtract_IntInt_ReturnValue) == 0x000144, "Member 'AthenaFrontEndRadialPicker_C_InitializePicker::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_InitializePicker, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000148, "Member 'AthenaFrontEndRadialPicker_C_InitializePicker::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_InitializePicker, CallFunc_AddChild_ReturnValue) == 0x000150, "Member 'AthenaFrontEndRadialPicker_C_InitializePicker::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_InitializePicker, Temp_int_Variable) == 0x000158, "Member 'AthenaFrontEndRadialPicker_C_InitializePicker::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_InitializePicker, CallFunc_Array_Length_ReturnValue) == 0x00015C, "Member 'AthenaFrontEndRadialPicker_C_InitializePicker::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_InitializePicker, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000160, "Member 'AthenaFrontEndRadialPicker_C_InitializePicker::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_InitializePicker, CallFunc_Add_IntInt_ReturnValue1) == 0x000164, "Member 'AthenaFrontEndRadialPicker_C_InitializePicker::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_InitializePicker, Temp_byte_Variable1) == 0x000168, "Member 'AthenaFrontEndRadialPicker_C_InitializePicker::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_InitializePicker, Temp_bool_Variable1) == 0x000169, "Member 'AthenaFrontEndRadialPicker_C_InitializePicker::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_InitializePicker, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00016A, "Member 'AthenaFrontEndRadialPicker_C_InitializePicker::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_InitializePicker, K2Node_Select_Default) == 0x00016B, "Member 'AthenaFrontEndRadialPicker_C_InitializePicker::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_InitializePicker, CallFunc_EqualEqual_ByteByte_ReturnValue1) == 0x00016C, "Member 'AthenaFrontEndRadialPicker_C_InitializePicker::CallFunc_EqualEqual_ByteByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_InitializePicker, CallFunc_BooleanOR_ReturnValue) == 0x00016D, "Member 'AthenaFrontEndRadialPicker_C_InitializePicker::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_InitializePicker, CallFunc_GetContext_ReturnValue2) == 0x000170, "Member 'AthenaFrontEndRadialPicker_C_InitializePicker::CallFunc_GetContext_ReturnValue2' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_InitializePicker, CallFunc_GetContext_ReturnValue3) == 0x000178, "Member 'AthenaFrontEndRadialPicker_C_InitializePicker::CallFunc_GetContext_ReturnValue3' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_InitializePicker, CallFunc_GetPickerConfirmActionName_ReturnValue) == 0x000180, "Member 'AthenaFrontEndRadialPicker_C_InitializePicker::CallFunc_GetPickerConfirmActionName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_InitializePicker, CallFunc_GetCurrentPickerDisplayName_ReturnValue) == 0x000188, "Member 'AthenaFrontEndRadialPicker_C_InitializePicker::CallFunc_GetCurrentPickerDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_InitializePicker, CallFunc_TextIsEmpty_ReturnValue) == 0x0001A0, "Member 'AthenaFrontEndRadialPicker_C_InitializePicker::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_InitializePicker, CallFunc_GetContext_ReturnValue4) == 0x0001A8, "Member 'AthenaFrontEndRadialPicker_C_InitializePicker::CallFunc_GetContext_ReturnValue4' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_InitializePicker, CallFunc_Not_PreBool_ReturnValue) == 0x0001B0, "Member 'AthenaFrontEndRadialPicker_C_InitializePicker::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_InitializePicker, CallFunc_GetPickerWheelAdjacency_bCanPageLeft) == 0x0001B1, "Member 'AthenaFrontEndRadialPicker_C_InitializePicker::CallFunc_GetPickerWheelAdjacency_bCanPageLeft' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_InitializePicker, CallFunc_GetPickerWheelAdjacency_bCanPageRight) == 0x0001B2, "Member 'AthenaFrontEndRadialPicker_C_InitializePicker::CallFunc_GetPickerWheelAdjacency_bCanPageRight' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_InitializePicker, Temp_byte_Variable2) == 0x0001B3, "Member 'AthenaFrontEndRadialPicker_C_InitializePicker::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_InitializePicker, CallFunc_BooleanOR_ReturnValue1) == 0x0001B4, "Member 'AthenaFrontEndRadialPicker_C_InitializePicker::CallFunc_BooleanOR_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_InitializePicker, CallFunc_BooleanOR_ReturnValue2) == 0x0001B5, "Member 'AthenaFrontEndRadialPicker_C_InitializePicker::CallFunc_BooleanOR_ReturnValue2' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_InitializePicker, CallFunc_Array_Get_Item) == 0x0001B8, "Member 'AthenaFrontEndRadialPicker_C_InitializePicker::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_InitializePicker, CallFunc_Array_Length_ReturnValue1) == 0x0001C0, "Member 'AthenaFrontEndRadialPicker_C_InitializePicker::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_InitializePicker, CallFunc_Less_IntInt_ReturnValue) == 0x0001C4, "Member 'AthenaFrontEndRadialPicker_C_InitializePicker::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_InitializePicker, CallFunc_SlotAsCanvasSlot_ReturnValue1) == 0x0001C8, "Member 'AthenaFrontEndRadialPicker_C_InitializePicker::CallFunc_SlotAsCanvasSlot_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_InitializePicker, Temp_byte_Variable3) == 0x0001D0, "Member 'AthenaFrontEndRadialPicker_C_InitializePicker::Temp_byte_Variable3' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_InitializePicker, K2Node_Select1_Default) == 0x0001D1, "Member 'AthenaFrontEndRadialPicker_C_InitializePicker::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_InitializePicker, CallFunc_Less_IntInt_ReturnValue1) == 0x0001D2, "Member 'AthenaFrontEndRadialPicker_C_InitializePicker::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");

// Function AthenaFrontEndRadialPicker.AthenaFrontEndRadialPicker_C.GetOptionPosition
// 0x0028 (0x0028 - 0x0000)
struct AthenaFrontEndRadialPicker_C_GetOptionPosition final
{
public:
	int32                                         Option;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Position;                                          // 0x0004(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetOptionAngle_Angle;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegCos_ReturnValue;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegSin_ReturnValue;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaFrontEndRadialPicker_C_GetOptionPosition) == 0x000004, "Wrong alignment on AthenaFrontEndRadialPicker_C_GetOptionPosition");
static_assert(sizeof(AthenaFrontEndRadialPicker_C_GetOptionPosition) == 0x000028, "Wrong size on AthenaFrontEndRadialPicker_C_GetOptionPosition");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_GetOptionPosition, Option) == 0x000000, "Member 'AthenaFrontEndRadialPicker_C_GetOptionPosition::Option' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_GetOptionPosition, Position) == 0x000004, "Member 'AthenaFrontEndRadialPicker_C_GetOptionPosition::Position' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_GetOptionPosition, CallFunc_GetOptionAngle_Angle) == 0x00000C, "Member 'AthenaFrontEndRadialPicker_C_GetOptionPosition::CallFunc_GetOptionAngle_Angle' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_GetOptionPosition, CallFunc_DegCos_ReturnValue) == 0x000010, "Member 'AthenaFrontEndRadialPicker_C_GetOptionPosition::CallFunc_DegCos_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_GetOptionPosition, CallFunc_DegSin_ReturnValue) == 0x000014, "Member 'AthenaFrontEndRadialPicker_C_GetOptionPosition::CallFunc_DegSin_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_GetOptionPosition, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000018, "Member 'AthenaFrontEndRadialPicker_C_GetOptionPosition::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_GetOptionPosition, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x00001C, "Member 'AthenaFrontEndRadialPicker_C_GetOptionPosition::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_GetOptionPosition, CallFunc_MakeVector2D_ReturnValue) == 0x000020, "Member 'AthenaFrontEndRadialPicker_C_GetOptionPosition::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function AthenaFrontEndRadialPicker.AthenaFrontEndRadialPicker_C.GetAngleDifference
// 0x0024 (0x0024 - 0x0000)
struct AthenaFrontEndRadialPicker_C_GetAngleDifference final
{
public:
	float                                         AngleA;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AngleB;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Difference;                                        // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Percent_FloatFloat_ReturnValue;           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Percent_FloatFloat_ReturnValue1;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue1;         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaFrontEndRadialPicker_C_GetAngleDifference) == 0x000004, "Wrong alignment on AthenaFrontEndRadialPicker_C_GetAngleDifference");
static_assert(sizeof(AthenaFrontEndRadialPicker_C_GetAngleDifference) == 0x000024, "Wrong size on AthenaFrontEndRadialPicker_C_GetAngleDifference");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_GetAngleDifference, AngleA) == 0x000000, "Member 'AthenaFrontEndRadialPicker_C_GetAngleDifference::AngleA' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_GetAngleDifference, AngleB) == 0x000004, "Member 'AthenaFrontEndRadialPicker_C_GetAngleDifference::AngleB' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_GetAngleDifference, Difference) == 0x000008, "Member 'AthenaFrontEndRadialPicker_C_GetAngleDifference::Difference' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_GetAngleDifference, CallFunc_Percent_FloatFloat_ReturnValue) == 0x00000C, "Member 'AthenaFrontEndRadialPicker_C_GetAngleDifference::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_GetAngleDifference, CallFunc_Percent_FloatFloat_ReturnValue1) == 0x000010, "Member 'AthenaFrontEndRadialPicker_C_GetAngleDifference::CallFunc_Percent_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_GetAngleDifference, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000014, "Member 'AthenaFrontEndRadialPicker_C_GetAngleDifference::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_GetAngleDifference, CallFunc_Abs_ReturnValue) == 0x000018, "Member 'AthenaFrontEndRadialPicker_C_GetAngleDifference::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_GetAngleDifference, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00001C, "Member 'AthenaFrontEndRadialPicker_C_GetAngleDifference::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_GetAngleDifference, CallFunc_Subtract_FloatFloat_ReturnValue1) == 0x000020, "Member 'AthenaFrontEndRadialPicker_C_GetAngleDifference::CallFunc_Subtract_FloatFloat_ReturnValue1' has a wrong offset!");

// Function AthenaFrontEndRadialPicker.AthenaFrontEndRadialPicker_C.GetOptionAngle
// 0x001C (0x001C - 0x0000)
struct AthenaFrontEndRadialPicker_C_GetOptionAngle final
{
public:
	int32                                         Option;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Angle;                                             // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue1;             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaFrontEndRadialPicker_C_GetOptionAngle) == 0x000004, "Wrong alignment on AthenaFrontEndRadialPicker_C_GetOptionAngle");
static_assert(sizeof(AthenaFrontEndRadialPicker_C_GetOptionAngle) == 0x00001C, "Wrong size on AthenaFrontEndRadialPicker_C_GetOptionAngle");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_GetOptionAngle, Option) == 0x000000, "Member 'AthenaFrontEndRadialPicker_C_GetOptionAngle::Option' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_GetOptionAngle, Angle) == 0x000004, "Member 'AthenaFrontEndRadialPicker_C_GetOptionAngle::Angle' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_GetOptionAngle, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000008, "Member 'AthenaFrontEndRadialPicker_C_GetOptionAngle::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_GetOptionAngle, CallFunc_Conv_IntToFloat_ReturnValue1) == 0x00000C, "Member 'AthenaFrontEndRadialPicker_C_GetOptionAngle::CallFunc_Conv_IntToFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_GetOptionAngle, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000010, "Member 'AthenaFrontEndRadialPicker_C_GetOptionAngle::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_GetOptionAngle, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000014, "Member 'AthenaFrontEndRadialPicker_C_GetOptionAngle::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_GetOptionAngle, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000018, "Member 'AthenaFrontEndRadialPicker_C_GetOptionAngle::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");

// Function AthenaFrontEndRadialPicker.AthenaFrontEndRadialPicker_C.ClearActiveOption
// 0x0010 (0x0010 - 0x0000)
struct AthenaFrontEndRadialPicker_C_ClearActiveOption final
{
public:
	class URadialPickerItem_C*                    CallFunc_Array_Get_Item;                           // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AthenaFrontEndRadialPicker_C_ClearActiveOption) == 0x000008, "Wrong alignment on AthenaFrontEndRadialPicker_C_ClearActiveOption");
static_assert(sizeof(AthenaFrontEndRadialPicker_C_ClearActiveOption) == 0x000010, "Wrong size on AthenaFrontEndRadialPicker_C_ClearActiveOption");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ClearActiveOption, CallFunc_Array_Get_Item) == 0x000000, "Member 'AthenaFrontEndRadialPicker_C_ClearActiveOption::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ClearActiveOption, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000008, "Member 'AthenaFrontEndRadialPicker_C_ClearActiveOption::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function AthenaFrontEndRadialPicker.AthenaFrontEndRadialPicker_C.SetActiveOption
// 0x0010 (0x0010 - 0x0000)
struct AthenaFrontEndRadialPicker_C_SetActiveOption final
{
public:
	int32                                         Option;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URadialPickerItem_C*                    CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaFrontEndRadialPicker_C_SetActiveOption) == 0x000008, "Wrong alignment on AthenaFrontEndRadialPicker_C_SetActiveOption");
static_assert(sizeof(AthenaFrontEndRadialPicker_C_SetActiveOption) == 0x000010, "Wrong size on AthenaFrontEndRadialPicker_C_SetActiveOption");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_SetActiveOption, Option) == 0x000000, "Member 'AthenaFrontEndRadialPicker_C_SetActiveOption::Option' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_SetActiveOption, CallFunc_Array_Get_Item) == 0x000008, "Member 'AthenaFrontEndRadialPicker_C_SetActiveOption::CallFunc_Array_Get_Item' has a wrong offset!");

// Function AthenaFrontEndRadialPicker.AthenaFrontEndRadialPicker_C.SetInputMode
// 0x0038 (0x0038 - 0x0000)
struct AthenaFrontEndRadialPicker_C_SetInputMode final
{
public:
	bool                                          WasUsingGamepad;                                   // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortPickerContext*                     CallFunc_GetContext_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UseLeftThumbstick_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonInputSubsystem*                  CallFunc_GetContext_ReturnValue1;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonInputSubsystem*                  CallFunc_GetContext_ReturnValue2;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue1;         // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue1;         // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaFrontEndRadialPicker_C_SetInputMode) == 0x000008, "Wrong alignment on AthenaFrontEndRadialPicker_C_SetInputMode");
static_assert(sizeof(AthenaFrontEndRadialPicker_C_SetInputMode) == 0x000038, "Wrong size on AthenaFrontEndRadialPicker_C_SetInputMode");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_SetInputMode, WasUsingGamepad) == 0x000000, "Member 'AthenaFrontEndRadialPicker_C_SetInputMode::WasUsingGamepad' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_SetInputMode, CallFunc_GetContext_ReturnValue) == 0x000008, "Member 'AthenaFrontEndRadialPicker_C_SetInputMode::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_SetInputMode, CallFunc_UseLeftThumbstick_ReturnValue) == 0x000010, "Member 'AthenaFrontEndRadialPicker_C_SetInputMode::CallFunc_UseLeftThumbstick_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_SetInputMode, CallFunc_GetContext_ReturnValue1) == 0x000018, "Member 'AthenaFrontEndRadialPicker_C_SetInputMode::CallFunc_GetContext_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_SetInputMode, CallFunc_GetContext_ReturnValue2) == 0x000020, "Member 'AthenaFrontEndRadialPicker_C_SetInputMode::CallFunc_GetContext_ReturnValue2' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_SetInputMode, CallFunc_GetCurrentInputType_ReturnValue) == 0x000028, "Member 'AthenaFrontEndRadialPicker_C_SetInputMode::CallFunc_GetCurrentInputType_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_SetInputMode, CallFunc_GetCurrentInputType_ReturnValue1) == 0x000029, "Member 'AthenaFrontEndRadialPicker_C_SetInputMode::CallFunc_GetCurrentInputType_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_SetInputMode, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00002A, "Member 'AthenaFrontEndRadialPicker_C_SetInputMode::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_SetInputMode, CallFunc_EqualEqual_ByteByte_ReturnValue1) == 0x00002B, "Member 'AthenaFrontEndRadialPicker_C_SetInputMode::CallFunc_EqualEqual_ByteByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_SetInputMode, CallFunc_GetPlayerController_ReturnValue) == 0x000030, "Member 'AthenaFrontEndRadialPicker_C_SetInputMode::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");

// Function AthenaFrontEndRadialPicker.AthenaFrontEndRadialPicker_C.CanConfirm
// 0x0018 (0x0018 - 0x0000)
struct AthenaFrontEndRadialPicker_C_CanConfirm final
{
public:
	bool                                          CanAccept;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class URadialPickerItem_C*                    CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsEnabled_ReturnValue;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AthenaFrontEndRadialPicker_C_CanConfirm) == 0x000008, "Wrong alignment on AthenaFrontEndRadialPicker_C_CanConfirm");
static_assert(sizeof(AthenaFrontEndRadialPicker_C_CanConfirm) == 0x000018, "Wrong size on AthenaFrontEndRadialPicker_C_CanConfirm");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_CanConfirm, CanAccept) == 0x000000, "Member 'AthenaFrontEndRadialPicker_C_CanConfirm::CanAccept' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_CanConfirm, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000001, "Member 'AthenaFrontEndRadialPicker_C_CanConfirm::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_CanConfirm, CallFunc_Array_Get_Item) == 0x000008, "Member 'AthenaFrontEndRadialPicker_C_CanConfirm::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_CanConfirm, CallFunc_GetIsEnabled_ReturnValue) == 0x000010, "Member 'AthenaFrontEndRadialPicker_C_CanConfirm::CallFunc_GetIsEnabled_ReturnValue' has a wrong offset!");

// Function AthenaFrontEndRadialPicker.AthenaFrontEndRadialPicker_C.ResetInput
// 0x0010 (0x0010 - 0x0000)
struct AthenaFrontEndRadialPicker_C_ResetInput final
{
public:
	class UFortPickerContext*                     CallFunc_GetContext_ReturnValue;                   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaFrontEndRadialPicker_C_ResetInput) == 0x000008, "Wrong alignment on AthenaFrontEndRadialPicker_C_ResetInput");
static_assert(sizeof(AthenaFrontEndRadialPicker_C_ResetInput) == 0x000010, "Wrong size on AthenaFrontEndRadialPicker_C_ResetInput");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ResetInput, CallFunc_GetContext_ReturnValue) == 0x000000, "Member 'AthenaFrontEndRadialPicker_C_ResetInput::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_ResetInput, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'AthenaFrontEndRadialPicker_C_ResetInput::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");

// Function AthenaFrontEndRadialPicker.AthenaFrontEndRadialPicker_C.MoveActiveOption
// 0x0088 (0x0088 - 0x0000)
struct AthenaFrontEndRadialPicker_C_MoveActiveOption final
{
public:
	int32                                         MoveOptionDirection;                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewActiveOption;                                   // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonInputSubsystem*                  CallFunc_GetContext_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13[0x1];                                       // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetViewportScale_ReturnValue;             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetOptionPosition_Position;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X1;                         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y1;                         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGamepadInPickerDeadZone_bIsInDeadZone;  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue1;              // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue1;                      // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetOptionAngle_Angle;                     // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonInputSubsystem*                  CallFunc_GetContext_ReturnValue1;                  // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue1;         // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_83[0x1];                                       // 0x0083(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaFrontEndRadialPicker_C_MoveActiveOption) == 0x000008, "Wrong alignment on AthenaFrontEndRadialPicker_C_MoveActiveOption");
static_assert(sizeof(AthenaFrontEndRadialPicker_C_MoveActiveOption) == 0x000088, "Wrong size on AthenaFrontEndRadialPicker_C_MoveActiveOption");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_MoveActiveOption, MoveOptionDirection) == 0x000000, "Member 'AthenaFrontEndRadialPicker_C_MoveActiveOption::MoveOptionDirection' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_MoveActiveOption, NewActiveOption) == 0x000004, "Member 'AthenaFrontEndRadialPicker_C_MoveActiveOption::NewActiveOption' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_MoveActiveOption, CallFunc_GetContext_ReturnValue) == 0x000008, "Member 'AthenaFrontEndRadialPicker_C_MoveActiveOption::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_MoveActiveOption, CallFunc_Less_IntInt_ReturnValue) == 0x000010, "Member 'AthenaFrontEndRadialPicker_C_MoveActiveOption::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_MoveActiveOption, CallFunc_GetCurrentInputType_ReturnValue) == 0x000011, "Member 'AthenaFrontEndRadialPicker_C_MoveActiveOption::CallFunc_GetCurrentInputType_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_MoveActiveOption, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000012, "Member 'AthenaFrontEndRadialPicker_C_MoveActiveOption::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_MoveActiveOption, CallFunc_GetViewportSize_ReturnValue) == 0x000014, "Member 'AthenaFrontEndRadialPicker_C_MoveActiveOption::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_MoveActiveOption, CallFunc_GetViewportScale_ReturnValue) == 0x00001C, "Member 'AthenaFrontEndRadialPicker_C_MoveActiveOption::CallFunc_GetViewportScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_MoveActiveOption, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x000020, "Member 'AthenaFrontEndRadialPicker_C_MoveActiveOption::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_MoveActiveOption, CallFunc_BreakVector2D_X) == 0x000028, "Member 'AthenaFrontEndRadialPicker_C_MoveActiveOption::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_MoveActiveOption, CallFunc_BreakVector2D_Y) == 0x00002C, "Member 'AthenaFrontEndRadialPicker_C_MoveActiveOption::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_MoveActiveOption, CallFunc_GetOptionPosition_Position) == 0x000030, "Member 'AthenaFrontEndRadialPicker_C_MoveActiveOption::CallFunc_GetOptionPosition_Position' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_MoveActiveOption, CallFunc_BreakVector2D_X1) == 0x000038, "Member 'AthenaFrontEndRadialPicker_C_MoveActiveOption::CallFunc_BreakVector2D_X1' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_MoveActiveOption, CallFunc_BreakVector2D_Y1) == 0x00003C, "Member 'AthenaFrontEndRadialPicker_C_MoveActiveOption::CallFunc_BreakVector2D_Y1' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_MoveActiveOption, CallFunc_IsGamepadInPickerDeadZone_bIsInDeadZone) == 0x000040, "Member 'AthenaFrontEndRadialPicker_C_MoveActiveOption::CallFunc_IsGamepadInPickerDeadZone_bIsInDeadZone' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_MoveActiveOption, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000044, "Member 'AthenaFrontEndRadialPicker_C_MoveActiveOption::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_MoveActiveOption, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x000048, "Member 'AthenaFrontEndRadialPicker_C_MoveActiveOption::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_MoveActiveOption, CallFunc_Add_FloatFloat_ReturnValue) == 0x00004C, "Member 'AthenaFrontEndRadialPicker_C_MoveActiveOption::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_MoveActiveOption, CallFunc_Add_FloatFloat_ReturnValue1) == 0x000050, "Member 'AthenaFrontEndRadialPicker_C_MoveActiveOption::CallFunc_Add_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_MoveActiveOption, CallFunc_FTrunc_ReturnValue) == 0x000054, "Member 'AthenaFrontEndRadialPicker_C_MoveActiveOption::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_MoveActiveOption, CallFunc_FTrunc_ReturnValue1) == 0x000058, "Member 'AthenaFrontEndRadialPicker_C_MoveActiveOption::CallFunc_FTrunc_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_MoveActiveOption, CallFunc_GetPlayerController_ReturnValue) == 0x000060, "Member 'AthenaFrontEndRadialPicker_C_MoveActiveOption::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_MoveActiveOption, CallFunc_GetOptionAngle_Angle) == 0x000068, "Member 'AthenaFrontEndRadialPicker_C_MoveActiveOption::CallFunc_GetOptionAngle_Angle' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_MoveActiveOption, CallFunc_GetContext_ReturnValue1) == 0x000070, "Member 'AthenaFrontEndRadialPicker_C_MoveActiveOption::CallFunc_GetContext_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_MoveActiveOption, CallFunc_GetCurrentInputType_ReturnValue1) == 0x000078, "Member 'AthenaFrontEndRadialPicker_C_MoveActiveOption::CallFunc_GetCurrentInputType_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_MoveActiveOption, CallFunc_Subtract_IntInt_ReturnValue) == 0x00007C, "Member 'AthenaFrontEndRadialPicker_C_MoveActiveOption::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_MoveActiveOption, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000080, "Member 'AthenaFrontEndRadialPicker_C_MoveActiveOption::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_MoveActiveOption, CallFunc_BooleanOR_ReturnValue) == 0x000081, "Member 'AthenaFrontEndRadialPicker_C_MoveActiveOption::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_MoveActiveOption, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000082, "Member 'AthenaFrontEndRadialPicker_C_MoveActiveOption::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_MoveActiveOption, CallFunc_Add_IntInt_ReturnValue) == 0x000084, "Member 'AthenaFrontEndRadialPicker_C_MoveActiveOption::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function AthenaFrontEndRadialPicker.AthenaFrontEndRadialPicker_C.SetPointerDirection
// 0x0038 (0x0038 - 0x0000)
struct AthenaFrontEndRadialPicker_C_SetPointerDirection final
{
public:
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegSin_ReturnValue;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegCos_ReturnValue;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue2;         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWidgetTransform                       K2Node_MakeStruct_WidgetTransform;                 // 0x001C(0x001C)(NoDestructor)
};
static_assert(alignof(AthenaFrontEndRadialPicker_C_SetPointerDirection) == 0x000004, "Wrong alignment on AthenaFrontEndRadialPicker_C_SetPointerDirection");
static_assert(sizeof(AthenaFrontEndRadialPicker_C_SetPointerDirection) == 0x000038, "Wrong size on AthenaFrontEndRadialPicker_C_SetPointerDirection");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_SetPointerDirection, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000000, "Member 'AthenaFrontEndRadialPicker_C_SetPointerDirection::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_SetPointerDirection, CallFunc_DegSin_ReturnValue) == 0x000004, "Member 'AthenaFrontEndRadialPicker_C_SetPointerDirection::CallFunc_DegSin_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_SetPointerDirection, CallFunc_DegCos_ReturnValue) == 0x000008, "Member 'AthenaFrontEndRadialPicker_C_SetPointerDirection::CallFunc_DegCos_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_SetPointerDirection, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x00000C, "Member 'AthenaFrontEndRadialPicker_C_SetPointerDirection::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_SetPointerDirection, CallFunc_Multiply_FloatFloat_ReturnValue2) == 0x000010, "Member 'AthenaFrontEndRadialPicker_C_SetPointerDirection::CallFunc_Multiply_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_SetPointerDirection, CallFunc_MakeVector2D_ReturnValue) == 0x000014, "Member 'AthenaFrontEndRadialPicker_C_SetPointerDirection::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_SetPointerDirection, K2Node_MakeStruct_WidgetTransform) == 0x00001C, "Member 'AthenaFrontEndRadialPicker_C_SetPointerDirection::K2Node_MakeStruct_WidgetTransform' has a wrong offset!");

// Function AthenaFrontEndRadialPicker.AthenaFrontEndRadialPicker_C.SetShowMouseCursor
// 0x0018 (0x0018 - 0x0000)
struct AthenaFrontEndRadialPicker_C_SetShowMouseCursor final
{
public:
	bool                                          InShowMouseCursor;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AthenaFrontEndRadialPicker_C_SetShowMouseCursor) == 0x000008, "Wrong alignment on AthenaFrontEndRadialPicker_C_SetShowMouseCursor");
static_assert(sizeof(AthenaFrontEndRadialPicker_C_SetShowMouseCursor) == 0x000018, "Wrong size on AthenaFrontEndRadialPicker_C_SetShowMouseCursor");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_SetShowMouseCursor, InShowMouseCursor) == 0x000000, "Member 'AthenaFrontEndRadialPicker_C_SetShowMouseCursor::InShowMouseCursor' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_SetShowMouseCursor, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'AthenaFrontEndRadialPicker_C_SetShowMouseCursor::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_SetShowMouseCursor, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000010, "Member 'AthenaFrontEndRadialPicker_C_SetShowMouseCursor::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function AthenaFrontEndRadialPicker.AthenaFrontEndRadialPicker_C.On Item Touched
// 0x0010 (0x0010 - 0x0000)
struct AthenaFrontEndRadialPicker_C_On_Item_Touched final
{
public:
	class URadialPickerItem_C*                    Touched_Item;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AthenaFrontEndRadialPicker_C_On_Item_Touched) == 0x000008, "Wrong alignment on AthenaFrontEndRadialPicker_C_On_Item_Touched");
static_assert(sizeof(AthenaFrontEndRadialPicker_C_On_Item_Touched) == 0x000010, "Wrong size on AthenaFrontEndRadialPicker_C_On_Item_Touched");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_On_Item_Touched, Touched_Item) == 0x000000, "Member 'AthenaFrontEndRadialPicker_C_On_Item_Touched::Touched_Item' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_On_Item_Touched, CallFunc_Array_Find_ReturnValue) == 0x000008, "Member 'AthenaFrontEndRadialPicker_C_On_Item_Touched::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_On_Item_Touched, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00000C, "Member 'AthenaFrontEndRadialPicker_C_On_Item_Touched::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function AthenaFrontEndRadialPicker.AthenaFrontEndRadialPicker_C.OnTouchEnded
// 0x0218 (0x0218 - 0x0000)
struct AthenaFrontEndRadialPicker_C_OnTouchEnded final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          InTouchEvent;                                      // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0160(0x00B8)()
};
static_assert(alignof(AthenaFrontEndRadialPicker_C_OnTouchEnded) == 0x000008, "Wrong alignment on AthenaFrontEndRadialPicker_C_OnTouchEnded");
static_assert(sizeof(AthenaFrontEndRadialPicker_C_OnTouchEnded) == 0x000218, "Wrong size on AthenaFrontEndRadialPicker_C_OnTouchEnded");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_OnTouchEnded, MyGeometry) == 0x000000, "Member 'AthenaFrontEndRadialPicker_C_OnTouchEnded::MyGeometry' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_OnTouchEnded, InTouchEvent) == 0x000038, "Member 'AthenaFrontEndRadialPicker_C_OnTouchEnded::InTouchEvent' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_OnTouchEnded, ReturnValue) == 0x0000A8, "Member 'AthenaFrontEndRadialPicker_C_OnTouchEnded::ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_OnTouchEnded, CallFunc_Handled_ReturnValue) == 0x000160, "Member 'AthenaFrontEndRadialPicker_C_OnTouchEnded::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function AthenaFrontEndRadialPicker.AthenaFrontEndRadialPicker_C.OnMouseButtonDown
// 0x0218 (0x0218 - 0x0000)
struct AthenaFrontEndRadialPicker_C_OnMouseButtonDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0160(0x00B8)()
};
static_assert(alignof(AthenaFrontEndRadialPicker_C_OnMouseButtonDown) == 0x000008, "Wrong alignment on AthenaFrontEndRadialPicker_C_OnMouseButtonDown");
static_assert(sizeof(AthenaFrontEndRadialPicker_C_OnMouseButtonDown) == 0x000218, "Wrong size on AthenaFrontEndRadialPicker_C_OnMouseButtonDown");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_OnMouseButtonDown, MyGeometry) == 0x000000, "Member 'AthenaFrontEndRadialPicker_C_OnMouseButtonDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_OnMouseButtonDown, MouseEvent) == 0x000038, "Member 'AthenaFrontEndRadialPicker_C_OnMouseButtonDown::MouseEvent' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_OnMouseButtonDown, ReturnValue) == 0x0000A8, "Member 'AthenaFrontEndRadialPicker_C_OnMouseButtonDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_OnMouseButtonDown, CallFunc_Handled_ReturnValue) == 0x000160, "Member 'AthenaFrontEndRadialPicker_C_OnMouseButtonDown::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function AthenaFrontEndRadialPicker.AthenaFrontEndRadialPicker_C.OnMouseWheel
// 0x0258 (0x0258 - 0x0000)
struct AthenaFrontEndRadialPicker_C_OnMouseWheel final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	class UCommonInputSubsystem*                  CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PointerEvent_GetWheelDelta_ReturnValue;   // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue;          // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x016D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x016E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16F[0x1];                                      // 0x016F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue1;         // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerControllerFrontEnd*          K2Node_DynamicCast_AsFort_Player_Controller_Front_End; // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerControllerFrontEnd*          K2Node_DynamicCast_AsFort_Player_Controller_Front_End1; // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x01A0(0x00B8)()
};
static_assert(alignof(AthenaFrontEndRadialPicker_C_OnMouseWheel) == 0x000008, "Wrong alignment on AthenaFrontEndRadialPicker_C_OnMouseWheel");
static_assert(sizeof(AthenaFrontEndRadialPicker_C_OnMouseWheel) == 0x000258, "Wrong size on AthenaFrontEndRadialPicker_C_OnMouseWheel");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_OnMouseWheel, MyGeometry) == 0x000000, "Member 'AthenaFrontEndRadialPicker_C_OnMouseWheel::MyGeometry' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_OnMouseWheel, MouseEvent) == 0x000038, "Member 'AthenaFrontEndRadialPicker_C_OnMouseWheel::MouseEvent' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_OnMouseWheel, ReturnValue) == 0x0000A8, "Member 'AthenaFrontEndRadialPicker_C_OnMouseWheel::ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_OnMouseWheel, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000160, "Member 'AthenaFrontEndRadialPicker_C_OnMouseWheel::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_OnMouseWheel, CallFunc_PointerEvent_GetWheelDelta_ReturnValue) == 0x000168, "Member 'AthenaFrontEndRadialPicker_C_OnMouseWheel::CallFunc_PointerEvent_GetWheelDelta_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_OnMouseWheel, CallFunc_GetCurrentInputType_ReturnValue) == 0x00016C, "Member 'AthenaFrontEndRadialPicker_C_OnMouseWheel::CallFunc_GetCurrentInputType_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_OnMouseWheel, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00016D, "Member 'AthenaFrontEndRadialPicker_C_OnMouseWheel::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_OnMouseWheel, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00016E, "Member 'AthenaFrontEndRadialPicker_C_OnMouseWheel::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_OnMouseWheel, CallFunc_GetPlayerController_ReturnValue) == 0x000170, "Member 'AthenaFrontEndRadialPicker_C_OnMouseWheel::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_OnMouseWheel, CallFunc_GetPlayerController_ReturnValue1) == 0x000178, "Member 'AthenaFrontEndRadialPicker_C_OnMouseWheel::CallFunc_GetPlayerController_ReturnValue1' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_OnMouseWheel, K2Node_DynamicCast_AsFort_Player_Controller_Front_End) == 0x000180, "Member 'AthenaFrontEndRadialPicker_C_OnMouseWheel::K2Node_DynamicCast_AsFort_Player_Controller_Front_End' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_OnMouseWheel, K2Node_DynamicCast_bSuccess) == 0x000188, "Member 'AthenaFrontEndRadialPicker_C_OnMouseWheel::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_OnMouseWheel, K2Node_DynamicCast_AsFort_Player_Controller_Front_End1) == 0x000190, "Member 'AthenaFrontEndRadialPicker_C_OnMouseWheel::K2Node_DynamicCast_AsFort_Player_Controller_Front_End1' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_OnMouseWheel, K2Node_DynamicCast_bSuccess1) == 0x000198, "Member 'AthenaFrontEndRadialPicker_C_OnMouseWheel::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_OnMouseWheel, CallFunc_Handled_ReturnValue) == 0x0001A0, "Member 'AthenaFrontEndRadialPicker_C_OnMouseWheel::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function AthenaFrontEndRadialPicker.AthenaFrontEndRadialPicker_C.IsGamepadInPickerDeadZone
// 0x0028 (0x0028 - 0x0000)
struct AthenaFrontEndRadialPicker_C_IsGamepadInPickerDeadZone final
{
public:
	bool                                          bIsInDeadZone;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInputAnalogStickState_StickX;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInputAnalogStickState_StickY;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize2DSquared_ReturnValue;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AthenaFrontEndRadialPicker_C_IsGamepadInPickerDeadZone) == 0x000008, "Wrong alignment on AthenaFrontEndRadialPicker_C_IsGamepadInPickerDeadZone");
static_assert(sizeof(AthenaFrontEndRadialPicker_C_IsGamepadInPickerDeadZone) == 0x000028, "Wrong size on AthenaFrontEndRadialPicker_C_IsGamepadInPickerDeadZone");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_IsGamepadInPickerDeadZone, bIsInDeadZone) == 0x000000, "Member 'AthenaFrontEndRadialPicker_C_IsGamepadInPickerDeadZone::bIsInDeadZone' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_IsGamepadInPickerDeadZone, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'AthenaFrontEndRadialPicker_C_IsGamepadInPickerDeadZone::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_IsGamepadInPickerDeadZone, CallFunc_GetInputAnalogStickState_StickX) == 0x000010, "Member 'AthenaFrontEndRadialPicker_C_IsGamepadInPickerDeadZone::CallFunc_GetInputAnalogStickState_StickX' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_IsGamepadInPickerDeadZone, CallFunc_GetInputAnalogStickState_StickY) == 0x000014, "Member 'AthenaFrontEndRadialPicker_C_IsGamepadInPickerDeadZone::CallFunc_GetInputAnalogStickState_StickY' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_IsGamepadInPickerDeadZone, CallFunc_MakeVector2D_ReturnValue) == 0x000018, "Member 'AthenaFrontEndRadialPicker_C_IsGamepadInPickerDeadZone::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_IsGamepadInPickerDeadZone, CallFunc_VSize2DSquared_ReturnValue) == 0x000020, "Member 'AthenaFrontEndRadialPicker_C_IsGamepadInPickerDeadZone::CallFunc_VSize2DSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaFrontEndRadialPicker_C_IsGamepadInPickerDeadZone, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000024, "Member 'AthenaFrontEndRadialPicker_C_IsGamepadInPickerDeadZone::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

}

