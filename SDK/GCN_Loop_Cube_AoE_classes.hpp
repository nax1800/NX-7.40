#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GCN_Loop_Cube_AoE

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GCN_Loop_Cube_AoE.GCN_Loop_Cube_AoE_C
// 0x0020 (0x08A0 - 0x0880)
class AGCN_Loop_Cube_AoE_C final : public AFortGameplayCueNotify_Loop
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0880(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class AFortPlayerPawn*                        TargetPlayer;                                      // 0x0888(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TargetDelta;                                       // 0x0890(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InterpDelta;                                       // 0x0894(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        LoopingAudio;                                      // 0x0898(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GCN_Loop_Cube_AoE(int32 EntryPoint);
	void TargetPlayerLanded(const struct FHitResult& Hit);
	void OnRemoval(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters, const TArray<class UParticleSystemComponent*>& ParticleComponents, const TArray<class UAudioComponent*>& AudioComponents, class UCameraShake* BurstCameraShakeInstance, class ADecalActor* BurstDecalInstance);
	void ReceiveTick(float DeltaSeconds);
	void OnLoopingStart(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters, const TArray<class UParticleSystemComponent*>& ParticleComponents, const TArray<class UAudioComponent*>& AudioComponents);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GCN_Loop_Cube_AoE_C">();
	}
	static class AGCN_Loop_Cube_AoE_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGCN_Loop_Cube_AoE_C>();
	}
};
static_assert(alignof(AGCN_Loop_Cube_AoE_C) == 0x000008, "Wrong alignment on AGCN_Loop_Cube_AoE_C");
static_assert(sizeof(AGCN_Loop_Cube_AoE_C) == 0x0008A0, "Wrong size on AGCN_Loop_Cube_AoE_C");
static_assert(offsetof(AGCN_Loop_Cube_AoE_C, UberGraphFrame) == 0x000880, "Member 'AGCN_Loop_Cube_AoE_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AGCN_Loop_Cube_AoE_C, TargetPlayer) == 0x000888, "Member 'AGCN_Loop_Cube_AoE_C::TargetPlayer' has a wrong offset!");
static_assert(offsetof(AGCN_Loop_Cube_AoE_C, TargetDelta) == 0x000890, "Member 'AGCN_Loop_Cube_AoE_C::TargetDelta' has a wrong offset!");
static_assert(offsetof(AGCN_Loop_Cube_AoE_C, InterpDelta) == 0x000894, "Member 'AGCN_Loop_Cube_AoE_C::InterpDelta' has a wrong offset!");
static_assert(offsetof(AGCN_Loop_Cube_AoE_C, LoopingAudio) == 0x000898, "Member 'AGCN_Loop_Cube_AoE_C::LoopingAudio' has a wrong offset!");

}

