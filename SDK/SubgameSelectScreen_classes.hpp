#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SubgameSelectScreen

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "SubGameSelectRotatorItems_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass SubgameSelectScreen.SubgameSelectScreen_C
// 0x01F0 (0x0510 - 0x0320)
class USubgameSelectScreen_C final : public UFortSubGameSelectBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0320(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       ShowCreativeImage;                                 // 0x0328(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       SaleANIM;                                          // 0x0330(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Button_Shine;                                      // 0x0338(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       PanMinusP1P2;                                      // 0x0340(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       PanMinusP1;                                        // 0x0348(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       PanMinusP2;                                        // 0x0350(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ContractSeperator;                                 // 0x0358(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ToggleCycle;                                       // 0x0360(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       SwitchTextures;                                    // 0x0368(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ExpandSeperator;                                   // 0x0370(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       DescriptionIntro;                                  // 0x0378(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       SwitchMaterial;                                    // 0x0380(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UIconTextButton_C*                      AthenaBtn;                                         // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 AthenaShine;                                       // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BGImage;                                           // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UIconTextButton_C*                      ButtonBack;                                        // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UIconTextButton_C*                      ButtonExit;                                        // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UIconTextButton_C*                      ButtonPurchase;                                    // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UIconTextButton_C*                      ButtonRedeem;                                      // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UIconTextButton_C*                      CampaignBtn;                                       // 0x03C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UConsoleProfileWidget_C*                ConsoleProfileWidget;                              // 0x03C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UIconTextButton_C*                      CreativeBtn;                                       // 0x03D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         CreativeContent;                                   // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       CreativeDescriptionTextNormal;                     // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       CreativeDescriptionTextSale;                       // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CreativeShine;                                     // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       FullDescription;                                   // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonBorder*                          PVEDescriptionBorderSale;                          // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       PVEDescriptionTextNormal;                          // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       PVEDescriptionTextSale;                            // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       PVPDescriptionTextNormal;                          // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       PVPDescriptionTextSale;                            // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USafeZone*                              SafeZone_Logos;                                    // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Shine;                                             // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonWidgetSwitcher*                  SwitcherBR;                                        // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonWidgetSwitcher*                  SwitcherCreative;                                  // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonWidgetSwitcher*                  SwitcherMenu;                                      // 0x0448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonWidgetSwitcher*                  SwitcherStW;                                       // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonLazyImage*                       TitleImage;                                        // 0x0458(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          WasLastPlayForward;                                // 0x0460(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_461[0x7];                                      // 0x0461(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProgressModalWidget_C*                 LeavingMatchmakingDialog;                          // 0x0468(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               MIDMinusKeyart;                                    // 0x0470(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CycleTimer;                                        // 0x0478(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         PveRotatorIndex;                                   // 0x0480(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_484[0x4];                                      // 0x0484(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSubGameSelectRotatorItems>     Items;                                             // 0x0488(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	ESubGame                                      SelectedSubgame;                                   // 0x0498(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_499[0x7];                                      // 0x0499(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EFortSubgameSelectOption, class UTexture2D*> SubGameCMSTexture;                                 // 0x04A0(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	bool                                          ShouldStartOnSTWUpsell;                            // 0x04F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F1[0x7];                                      // 0x04F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           SaleDelayAnim;                                     // 0x04F8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           ShineAnimDelay;                                    // 0x0500(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          SlideShownCampaign;                                // 0x0508(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          SlideShownBR;                                      // 0x0509(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          SlideShownCreative;                                // 0x050A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_SubgameSelectScreen(int32 EntryPoint);
	void BndEvt__Button_Creative_K2Node_ComponentBoundEvent_3_CommonButtonClicked__DelegateSignature(class UCommonButton* Button);
	void BndEvt__Button_Creative_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature(class UCommonButton* Button);
	void TryShowUpsellDireclty();
	void OnSubGameImageLoadedFromCMS(const EFortSubgameSelectOption SubGameOption, class UTexture2D* Image);
	void OnInputModeChanged(bool bUsingGamepad);
	void OnRedeemCodeComplete();
	void BndEvt__ButtonRedeem_K2Node_ComponentBoundEvent_68_CommonButtonClicked__DelegateSignature(class UCommonButton* Button);
	void HandleMinorWarning_Athena();
	void HandleMinorWarning_Campaign();
	void ShowMinorShutdownMessage(bool bIsCampaign);
	void OnActivated();
	void BndEvt__ButtonExit_K2Node_ComponentBoundEvent_114_CommonButtonClicked__DelegateSignature(class UCommonButton* Button);
	void BndEvt__ButtonExit_K2Node_ComponentBoundEvent_193_CommonButtonClicked__DelegateSignature(class UCommonButton* Button);
	void Destruct();
	void OnRealMoneyPurchaseComleteHandler(bool bSuccess);
	void BndEvt__CampaignBtn_K2Node_ComponentBoundEvent_107_CommonButtonClicked__DelegateSignature(class UCommonButton* Button);
	void CustomEvent_2();
	void BndEvt__BattlegroundBtn_K2Node_ComponentBoundEvent_125_CommonButtonClicked__DelegateSignature(class UCommonButton* Button);
	void BndEvt__ButtonPurchase_K2Node_ComponentBoundEvent_39_CommonButtonClicked__DelegateSignature(class UCommonButton* Button);
	void Construct();
	void BndEvt__ButtonBack_K2Node_ComponentBoundEvent_128_CommonButtonClicked__DelegateSignature(class UCommonButton* Button);
	void Show_Busy_If_Async_Tasks_Still_Pending();
	void CustomEvent_1();
	void CustomEvent_0(EMatchmakingCompleteResult Result);
	void Clear_Party_and_Matchmaking_Delegates();
	void Try_And_Remove_The_Dialog();
	void BndEvt__AthenaBtn_K2Node_ComponentBoundEvent_298_CommonButtonClicked__DelegateSignature(class UCommonButton* Button);
	void BndEvt__CampaignBtn_K2Node_ComponentBoundEvent_282_CommonButtonClicked__DelegateSignature(class UCommonButton* Button);
	void DialogResult_4D272D064BC78DE104D73FBE689B4039(EFortDialogResult Result, class FName ResultName);
	void DialogResult_0A856DFB4C254288F2910E9EF8AC5903(EFortDialogResult Result, class FName ResultName);
	void DialogResult_9B87D67040B12081C9B651A92AD99EA4(EFortDialogResult Result, class FName ResultName);
	void DialogResult_FA087F7E461591BDBC2AECAB522E633C(EFortDialogResult Result, class FName ResultName);
	void SetDescriptionForSubGame(EFortSubgameSelectOption SubGame);
	void SafeSetSubGame(ESubGame SubGame);
	void ToggleTimer(bool Enabled);
	void ResetKeyArtForMainMenu();
	void AdvanceRotator();
	void Update();
	bool IsBusyMatchmakingOrPartyTransitioning();
	void InitializeShortDescriptions();
	void InitializeRedeemButton();
	void ShowUpsell();
	void IsMinorShutdownWarningEnabled(bool* Enabled);
	void StartSubgameSelectMusic();
	void SetCMSTextureToKeyArt(const EFortSubgameSelectOption Key);
	void AnimSaleDelay();
	void AnimShineDelay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SubgameSelectScreen_C">();
	}
	static class USubgameSelectScreen_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<USubgameSelectScreen_C>();
	}
};
static_assert(alignof(USubgameSelectScreen_C) == 0x000008, "Wrong alignment on USubgameSelectScreen_C");
static_assert(sizeof(USubgameSelectScreen_C) == 0x000510, "Wrong size on USubgameSelectScreen_C");
static_assert(offsetof(USubgameSelectScreen_C, UberGraphFrame) == 0x000320, "Member 'USubgameSelectScreen_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(USubgameSelectScreen_C, ShowCreativeImage) == 0x000328, "Member 'USubgameSelectScreen_C::ShowCreativeImage' has a wrong offset!");
static_assert(offsetof(USubgameSelectScreen_C, SaleANIM) == 0x000330, "Member 'USubgameSelectScreen_C::SaleANIM' has a wrong offset!");
static_assert(offsetof(USubgameSelectScreen_C, Button_Shine) == 0x000338, "Member 'USubgameSelectScreen_C::Button_Shine' has a wrong offset!");
static_assert(offsetof(USubgameSelectScreen_C, PanMinusP1P2) == 0x000340, "Member 'USubgameSelectScreen_C::PanMinusP1P2' has a wrong offset!");
static_assert(offsetof(USubgameSelectScreen_C, PanMinusP1) == 0x000348, "Member 'USubgameSelectScreen_C::PanMinusP1' has a wrong offset!");
static_assert(offsetof(USubgameSelectScreen_C, PanMinusP2) == 0x000350, "Member 'USubgameSelectScreen_C::PanMinusP2' has a wrong offset!");
static_assert(offsetof(USubgameSelectScreen_C, ContractSeperator) == 0x000358, "Member 'USubgameSelectScreen_C::ContractSeperator' has a wrong offset!");
static_assert(offsetof(USubgameSelectScreen_C, ToggleCycle) == 0x000360, "Member 'USubgameSelectScreen_C::ToggleCycle' has a wrong offset!");
static_assert(offsetof(USubgameSelectScreen_C, SwitchTextures) == 0x000368, "Member 'USubgameSelectScreen_C::SwitchTextures' has a wrong offset!");
static_assert(offsetof(USubgameSelectScreen_C, ExpandSeperator) == 0x000370, "Member 'USubgameSelectScreen_C::ExpandSeperator' has a wrong offset!");
static_assert(offsetof(USubgameSelectScreen_C, DescriptionIntro) == 0x000378, "Member 'USubgameSelectScreen_C::DescriptionIntro' has a wrong offset!");
static_assert(offsetof(USubgameSelectScreen_C, SwitchMaterial) == 0x000380, "Member 'USubgameSelectScreen_C::SwitchMaterial' has a wrong offset!");
static_assert(offsetof(USubgameSelectScreen_C, AthenaBtn) == 0x000388, "Member 'USubgameSelectScreen_C::AthenaBtn' has a wrong offset!");
static_assert(offsetof(USubgameSelectScreen_C, AthenaShine) == 0x000390, "Member 'USubgameSelectScreen_C::AthenaShine' has a wrong offset!");
static_assert(offsetof(USubgameSelectScreen_C, BGImage) == 0x000398, "Member 'USubgameSelectScreen_C::BGImage' has a wrong offset!");
static_assert(offsetof(USubgameSelectScreen_C, ButtonBack) == 0x0003A0, "Member 'USubgameSelectScreen_C::ButtonBack' has a wrong offset!");
static_assert(offsetof(USubgameSelectScreen_C, ButtonExit) == 0x0003A8, "Member 'USubgameSelectScreen_C::ButtonExit' has a wrong offset!");
static_assert(offsetof(USubgameSelectScreen_C, ButtonPurchase) == 0x0003B0, "Member 'USubgameSelectScreen_C::ButtonPurchase' has a wrong offset!");
static_assert(offsetof(USubgameSelectScreen_C, ButtonRedeem) == 0x0003B8, "Member 'USubgameSelectScreen_C::ButtonRedeem' has a wrong offset!");
static_assert(offsetof(USubgameSelectScreen_C, CampaignBtn) == 0x0003C0, "Member 'USubgameSelectScreen_C::CampaignBtn' has a wrong offset!");
static_assert(offsetof(USubgameSelectScreen_C, ConsoleProfileWidget) == 0x0003C8, "Member 'USubgameSelectScreen_C::ConsoleProfileWidget' has a wrong offset!");
static_assert(offsetof(USubgameSelectScreen_C, CreativeBtn) == 0x0003D0, "Member 'USubgameSelectScreen_C::CreativeBtn' has a wrong offset!");
static_assert(offsetof(USubgameSelectScreen_C, CreativeContent) == 0x0003D8, "Member 'USubgameSelectScreen_C::CreativeContent' has a wrong offset!");
static_assert(offsetof(USubgameSelectScreen_C, CreativeDescriptionTextNormal) == 0x0003E0, "Member 'USubgameSelectScreen_C::CreativeDescriptionTextNormal' has a wrong offset!");
static_assert(offsetof(USubgameSelectScreen_C, CreativeDescriptionTextSale) == 0x0003E8, "Member 'USubgameSelectScreen_C::CreativeDescriptionTextSale' has a wrong offset!");
static_assert(offsetof(USubgameSelectScreen_C, CreativeShine) == 0x0003F0, "Member 'USubgameSelectScreen_C::CreativeShine' has a wrong offset!");
static_assert(offsetof(USubgameSelectScreen_C, FullDescription) == 0x0003F8, "Member 'USubgameSelectScreen_C::FullDescription' has a wrong offset!");
static_assert(offsetof(USubgameSelectScreen_C, PVEDescriptionBorderSale) == 0x000400, "Member 'USubgameSelectScreen_C::PVEDescriptionBorderSale' has a wrong offset!");
static_assert(offsetof(USubgameSelectScreen_C, PVEDescriptionTextNormal) == 0x000408, "Member 'USubgameSelectScreen_C::PVEDescriptionTextNormal' has a wrong offset!");
static_assert(offsetof(USubgameSelectScreen_C, PVEDescriptionTextSale) == 0x000410, "Member 'USubgameSelectScreen_C::PVEDescriptionTextSale' has a wrong offset!");
static_assert(offsetof(USubgameSelectScreen_C, PVPDescriptionTextNormal) == 0x000418, "Member 'USubgameSelectScreen_C::PVPDescriptionTextNormal' has a wrong offset!");
static_assert(offsetof(USubgameSelectScreen_C, PVPDescriptionTextSale) == 0x000420, "Member 'USubgameSelectScreen_C::PVPDescriptionTextSale' has a wrong offset!");
static_assert(offsetof(USubgameSelectScreen_C, SafeZone_Logos) == 0x000428, "Member 'USubgameSelectScreen_C::SafeZone_Logos' has a wrong offset!");
static_assert(offsetof(USubgameSelectScreen_C, Shine) == 0x000430, "Member 'USubgameSelectScreen_C::Shine' has a wrong offset!");
static_assert(offsetof(USubgameSelectScreen_C, SwitcherBR) == 0x000438, "Member 'USubgameSelectScreen_C::SwitcherBR' has a wrong offset!");
static_assert(offsetof(USubgameSelectScreen_C, SwitcherCreative) == 0x000440, "Member 'USubgameSelectScreen_C::SwitcherCreative' has a wrong offset!");
static_assert(offsetof(USubgameSelectScreen_C, SwitcherMenu) == 0x000448, "Member 'USubgameSelectScreen_C::SwitcherMenu' has a wrong offset!");
static_assert(offsetof(USubgameSelectScreen_C, SwitcherStW) == 0x000450, "Member 'USubgameSelectScreen_C::SwitcherStW' has a wrong offset!");
static_assert(offsetof(USubgameSelectScreen_C, TitleImage) == 0x000458, "Member 'USubgameSelectScreen_C::TitleImage' has a wrong offset!");
static_assert(offsetof(USubgameSelectScreen_C, WasLastPlayForward) == 0x000460, "Member 'USubgameSelectScreen_C::WasLastPlayForward' has a wrong offset!");
static_assert(offsetof(USubgameSelectScreen_C, LeavingMatchmakingDialog) == 0x000468, "Member 'USubgameSelectScreen_C::LeavingMatchmakingDialog' has a wrong offset!");
static_assert(offsetof(USubgameSelectScreen_C, MIDMinusKeyart) == 0x000470, "Member 'USubgameSelectScreen_C::MIDMinusKeyart' has a wrong offset!");
static_assert(offsetof(USubgameSelectScreen_C, CycleTimer) == 0x000478, "Member 'USubgameSelectScreen_C::CycleTimer' has a wrong offset!");
static_assert(offsetof(USubgameSelectScreen_C, PveRotatorIndex) == 0x000480, "Member 'USubgameSelectScreen_C::PveRotatorIndex' has a wrong offset!");
static_assert(offsetof(USubgameSelectScreen_C, Items) == 0x000488, "Member 'USubgameSelectScreen_C::Items' has a wrong offset!");
static_assert(offsetof(USubgameSelectScreen_C, SelectedSubgame) == 0x000498, "Member 'USubgameSelectScreen_C::SelectedSubgame' has a wrong offset!");
static_assert(offsetof(USubgameSelectScreen_C, SubGameCMSTexture) == 0x0004A0, "Member 'USubgameSelectScreen_C::SubGameCMSTexture' has a wrong offset!");
static_assert(offsetof(USubgameSelectScreen_C, ShouldStartOnSTWUpsell) == 0x0004F0, "Member 'USubgameSelectScreen_C::ShouldStartOnSTWUpsell' has a wrong offset!");
static_assert(offsetof(USubgameSelectScreen_C, SaleDelayAnim) == 0x0004F8, "Member 'USubgameSelectScreen_C::SaleDelayAnim' has a wrong offset!");
static_assert(offsetof(USubgameSelectScreen_C, ShineAnimDelay) == 0x000500, "Member 'USubgameSelectScreen_C::ShineAnimDelay' has a wrong offset!");
static_assert(offsetof(USubgameSelectScreen_C, SlideShownCampaign) == 0x000508, "Member 'USubgameSelectScreen_C::SlideShownCampaign' has a wrong offset!");
static_assert(offsetof(USubgameSelectScreen_C, SlideShownBR) == 0x000509, "Member 'USubgameSelectScreen_C::SlideShownBR' has a wrong offset!");
static_assert(offsetof(USubgameSelectScreen_C, SlideShownCreative) == 0x00050A, "Member 'USubgameSelectScreen_C::SlideShownCreative' has a wrong offset!");

}

