#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: JackalVehicle_Athena

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "CommonInput_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK::Params
{

// Function JackalVehicle_Athena.JackalVehicle_Athena_C.ExecuteUbergraph_JackalVehicle_Athena
// 0x0620 (0x0620 - 0x0000)
struct JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue1;           // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue2;           // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_Charge1;                              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Charge;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitLocation;                          // 0x0024(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitNormalImpulse;                     // 0x0030(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitFrictionImpulse;                   // 0x003C(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitNormal;                            // 0x0048(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_HitActor;                             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              K2Node_Event_HitSurfaceType;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_UpdateSurfaceType_Output;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OnCollision_OutResult;                    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_OnCollision_OutMagnitude;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPawn*                              K2Node_DynamicCast_AsFort_Pawn;                    // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue1;          // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7B[0x1];                                       // 0x007B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                K2Node_Event_WaterSurfacePoint1;                   // 0x0088(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_WaterSurfacePoint;                    // 0x0094(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue3;           // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B2[0x2];                                       // 0x00B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetRenderingDetailMode_ReturnValue;       // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue4;           // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BA[0x6];                                       // 0x00BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x00C8(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x00D8(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue1;          // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        K2Node_Event_PlayerPawn;                           // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_ExitSocketName;                       // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        K2Node_Event_PlayerPawn1;                          // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_SeatIdx;                              // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_ApplyGlobalEnvironmentGameplayEffectToActor_ReturnValue; // 0x010C(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0115(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x0116(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_117[0x1];                                      // 0x0117(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraShake*                           CallFunc_PlayCameraShake_ReturnValue;              // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue5;           // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue4;                     // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSprinting_ReturnValue;                  // 0x0122(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue5;                     // 0x0123(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        Temp_object_Variable;                              // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue6;                     // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue2;          // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_145[0x3];                                      // 0x0145(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0154(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue2;          // 0x0160(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue3;          // 0x0168(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_ApplyMaterialAndUseWrapIfPossible_ReturnValue; // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UAthenaItemWrapDefinition*        K2Node_Event_LoadedWrap;                           // 0x0178(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable1;                             // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_HitComponent;           // 0x0188(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0198(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_NormalImpulse;          // 0x01A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_ComponentBoundEvent_Hit;                    // 0x01AC(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0235(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_236[0x2];                                      // 0x0236(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0240(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x024C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0258(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0264(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0280(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0298(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x02A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldBump_Bump;                          // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ShouldDestroyProp__ReturnValue;           // 0x02B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue6;           // 0x02B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B3[0x5];                                      // 0x02B3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABuildingProp*                          K2Node_DynamicCast_AsBuilding_Prop;                // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ActorHasTag_ReturnValue;                  // 0x02C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C2[0x2];                                      // 0x02C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate1;             // 0x02C4(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue3;          // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue4;          // 0x02D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DB[0x5];                                      // 0x02DB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x02E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Damage;                               // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EC[0x4];                                      // 0x02EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  K2Node_Event_DamageTags;                           // 0x02F0(0x0020)(ConstParm)
	struct FVector                                K2Node_Event_Momentum;                             // 0x0310(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_HitInfo;                              // 0x031C(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_3A4[0x4];                                      // 0x03A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPawn*                              K2Node_Event_InstigatedBy;                         // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           K2Node_Event_EffectContext;                        // 0x03B8(0x0018)()
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x03D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DC[0x4];                                      // 0x03DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x03E0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0410(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x041C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0428(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVehicleVelocity_ReturnValue;           // 0x0434(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0440(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue7;           // 0x0448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_449[0x7];                                      // 0x0449(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPawn*                              K2Node_Event_ExitingPawn1;                         // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_ExitDuration;                         // 0x0458(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45C[0x4];                                      // 0x045C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue1;        // 0x0460(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_MakeStruct_GameplayEventData;               // 0x0468(0x00A8)()
	class AFortPawn*                              K2Node_Event_ExitingPawn;                          // 0x0510(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue8;           // 0x0518(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_519[0x3];                                      // 0x0519(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue1;        // 0x051C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x0528(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0530(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue7;                     // 0x0531(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_532[0x2];                                      // 0x0532(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue1;         // 0x0534(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X1;                           // 0x0540(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y1;                           // 0x0544(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z1;                           // 0x0548(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue1;         // 0x054C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0550(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue1;                  // 0x055C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue2;        // 0x0568(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue3;        // 0x0570(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0578(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue8;                     // 0x0579(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_57A[0x6];                                      // 0x057A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        K2Node_Select_Default;                             // 0x0580(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue1;      // 0x0588(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCameraShake*                           CallFunc_PlayCameraShake_ReturnValue1;             // 0x0590(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue9;           // 0x0598(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_599[0x3];                                      // 0x0599(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue2;         // 0x059C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxAudibleDistance_Max_Distance;       // 0x05A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AC[0x4];                                      // 0x05AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue1;         // 0x05B0(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AFortPlayerController*                  K2Node_DynamicCast_AsFort_Player_Controller;       // 0x05B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x05C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C1[0x7];                                      // 0x05C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AFortPlayerController*>          K2Node_MakeArray_Array;                            // 0x05C8(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	struct FGameplayTagContainer                  CallFunc_MakeGameplayTagContainerFromTag_ReturnValue; // 0x05D8(0x0020)()
	bool                                          K2Node_CustomEvent_Hide;                           // 0x05F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue9;                     // 0x05F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue10;                    // 0x05FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5FB[0x5];                                      // 0x05FB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue1;               // 0x0600(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0608(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_609[0x7];                                      // 0x0609(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerControllerGameplay*          K2Node_DynamicCast_AsFort_Player_Controller_Gameplay; // 0x0610(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess5;                      // 0x0618(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena) == 0x000010, "Wrong alignment on JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena");
static_assert(sizeof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena) == 0x000620, "Wrong size on JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, EntryPoint) == 0x000000, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::EntryPoint' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_IsDedicatedServer_ReturnValue) == 0x000004, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_GetController_ReturnValue) == 0x000008, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_DynamicCast_AsPlayer_Controller) == 0x000010, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_IsDedicatedServer_ReturnValue1) == 0x000019, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_IsDedicatedServer_ReturnValue1' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_IsValid_ReturnValue) == 0x00001A, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_IsDedicatedServer_ReturnValue2) == 0x00001B, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_IsDedicatedServer_ReturnValue2' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_Event_Charge1) == 0x00001C, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_Event_Charge1' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_Event_Charge) == 0x000020, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_Event_Charge' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_Event_HitLocation) == 0x000024, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_Event_HitLocation' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_Event_HitNormalImpulse) == 0x000030, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_Event_HitNormalImpulse' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_Event_HitFrictionImpulse) == 0x00003C, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_Event_HitFrictionImpulse' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_Event_HitNormal) == 0x000048, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_Event_HitNormal' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_Event_HitActor) == 0x000058, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_Event_HitActor' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_Event_HitSurfaceType) == 0x000060, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_Event_HitSurfaceType' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_UpdateSurfaceType_Output) == 0x000064, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_UpdateSurfaceType_Output' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_OnCollision_OutResult) == 0x000068, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_OnCollision_OutResult' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_OnCollision_OutMagnitude) == 0x00006C, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_OnCollision_OutMagnitude' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_DynamicCast_AsFort_Pawn) == 0x000070, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_DynamicCast_AsFort_Pawn' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_DynamicCast_bSuccess1) == 0x000078, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000079, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_Greater_FloatFloat_ReturnValue1) == 0x00007A, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_Greater_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x00007C, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_Event_WaterSurfacePoint1) == 0x000088, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_Event_WaterSurfacePoint1' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_Event_WaterSurfacePoint) == 0x000094, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_Event_WaterSurfacePoint' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_BreakVector_X) == 0x0000A0, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_BreakVector_Y) == 0x0000A4, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_BreakVector_Z) == 0x0000A8, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000AC, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_IsValid_ReturnValue1) == 0x0000B0, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_IsDedicatedServer_ReturnValue3) == 0x0000B1, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_IsDedicatedServer_ReturnValue3' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_GetRenderingDetailMode_ReturnValue) == 0x0000B4, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_GetRenderingDetailMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_Greater_IntInt_ReturnValue) == 0x0000B8, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_IsDedicatedServer_ReturnValue4) == 0x0000B9, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_IsDedicatedServer_ReturnValue4' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_SpawnSoundAttached_ReturnValue) == 0x0000C0, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_CreateDelegate_OutputDelegate) == 0x0000C8, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0000D8, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_SpawnSoundAttached_ReturnValue1) == 0x0000E0, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_SpawnSoundAttached_ReturnValue1' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_Event_PlayerPawn) == 0x0000E8, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_Event_PlayerPawn' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_Event_ExitSocketName) == 0x0000F0, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_Event_ExitSocketName' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000F8, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_Event_PlayerPawn1) == 0x000100, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_Event_PlayerPawn1' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_Event_SeatIdx) == 0x000108, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_Event_SeatIdx' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_ApplyGlobalEnvironmentGameplayEffectToActor_ReturnValue) == 0x00010C, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_ApplyGlobalEnvironmentGameplayEffectToActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_IsLocallyControlled_ReturnValue) == 0x000114, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_IsValid_ReturnValue2) == 0x000115, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_IsValid_ReturnValue3) == 0x000116, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_PlayCameraShake_ReturnValue) == 0x000118, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_PlayCameraShake_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_IsDedicatedServer_ReturnValue5) == 0x000120, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_IsDedicatedServer_ReturnValue5' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_IsValid_ReturnValue4) == 0x000121, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_IsValid_ReturnValue4' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_IsSprinting_ReturnValue) == 0x000122, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_IsSprinting_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_IsValid_ReturnValue5) == 0x000123, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_IsValid_ReturnValue5' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, Temp_object_Variable) == 0x000128, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_IsValid_ReturnValue6) == 0x000130, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_IsValid_ReturnValue6' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_GetActorUpVector_ReturnValue) == 0x000134, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_Dot_VectorVector_ReturnValue) == 0x000140, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_Greater_FloatFloat_ReturnValue2) == 0x000144, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_Greater_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_GetActorForwardVector_ReturnValue) == 0x000148, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000154, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_SpawnSoundAttached_ReturnValue2) == 0x000160, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_SpawnSoundAttached_ReturnValue2' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_SpawnSoundAttached_ReturnValue3) == 0x000168, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_SpawnSoundAttached_ReturnValue3' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_ApplyMaterialAndUseWrapIfPossible_ReturnValue) == 0x000170, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_ApplyMaterialAndUseWrapIfPossible_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_Event_LoadedWrap) == 0x000178, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_Event_LoadedWrap' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, Temp_object_Variable1) == 0x000180, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::Temp_object_Variable1' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_ComponentBoundEvent_HitComponent) == 0x000188, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_ComponentBoundEvent_HitComponent' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_ComponentBoundEvent_OtherActor) == 0x000190, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_ComponentBoundEvent_OtherComp) == 0x000198, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_ComponentBoundEvent_NormalImpulse) == 0x0001A0, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_ComponentBoundEvent_NormalImpulse' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_ComponentBoundEvent_Hit) == 0x0001AC, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_ComponentBoundEvent_Hit' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_BreakHitResult_bBlockingHit) == 0x000234, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_BreakHitResult_bInitialOverlap) == 0x000235, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_BreakHitResult_Time) == 0x000238, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_BreakHitResult_Distance) == 0x00023C, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_BreakHitResult_Location) == 0x000240, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_BreakHitResult_ImpactPoint) == 0x00024C, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_BreakHitResult_Normal) == 0x000258, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_BreakHitResult_ImpactNormal) == 0x000264, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_BreakHitResult_PhysMat) == 0x000270, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_BreakHitResult_HitActor) == 0x000278, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_BreakHitResult_HitComponent) == 0x000280, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_BreakHitResult_HitBoneName) == 0x000288, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_BreakHitResult_HitItem) == 0x000290, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_BreakHitResult_FaceIndex) == 0x000294, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_BreakHitResult_TraceStart) == 0x000298, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_BreakHitResult_TraceEnd) == 0x0002A4, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_ShouldBump_Bump) == 0x0002B0, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_ShouldBump_Bump' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_ShouldDestroyProp__ReturnValue) == 0x0002B1, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_ShouldDestroyProp__ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_IsDedicatedServer_ReturnValue6) == 0x0002B2, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_IsDedicatedServer_ReturnValue6' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_DynamicCast_AsBuilding_Prop) == 0x0002B8, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_DynamicCast_AsBuilding_Prop' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_DynamicCast_bSuccess2) == 0x0002C0, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_ActorHasTag_ReturnValue) == 0x0002C1, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_ActorHasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_CreateDelegate_OutputDelegate1) == 0x0002C4, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0002D4, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_Greater_FloatFloat_ReturnValue3) == 0x0002D8, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_Greater_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_Greater_FloatFloat_ReturnValue4) == 0x0002D9, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_Greater_FloatFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_BooleanAND_ReturnValue) == 0x0002DA, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x0002E0, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_Event_Damage) == 0x0002E8, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_Event_DamageTags) == 0x0002F0, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_Event_DamageTags' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_Event_Momentum) == 0x000310, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_Event_Momentum' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_Event_HitInfo) == 0x00031C, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_Event_HitInfo' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_Event_InstigatedBy) == 0x0003A8, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_Event_InstigatedBy' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_Event_DamageCauser) == 0x0003B0, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_Event_EffectContext) == 0x0003B8, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_Event_EffectContext' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0003D0, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_GetSocketTransform_ReturnValue) == 0x0003E0, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_BreakTransform_Location) == 0x000410, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_BreakTransform_Rotation) == 0x00041C, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_BreakTransform_Scale) == 0x000428, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_GetVehicleVelocity_ReturnValue) == 0x000434, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_GetVehicleVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000440, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_IsDedicatedServer_ReturnValue7) == 0x000448, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_IsDedicatedServer_ReturnValue7' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_Event_ExitingPawn1) == 0x000450, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_Event_ExitingPawn1' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_Event_ExitDuration) == 0x000458, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_Event_ExitDuration' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_SpawnEmitterAttached_ReturnValue1) == 0x000460, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_SpawnEmitterAttached_ReturnValue1' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_MakeStruct_GameplayEventData) == 0x000468, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_MakeStruct_GameplayEventData' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_Event_ExitingPawn) == 0x000510, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_Event_ExitingPawn' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_IsDedicatedServer_ReturnValue8) == 0x000518, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_IsDedicatedServer_ReturnValue8' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_Multiply_VectorFloat_ReturnValue1) == 0x00051C, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_Multiply_VectorFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x000528, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_DynamicCast_bSuccess3) == 0x000530, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_IsValid_ReturnValue7) == 0x000531, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_IsValid_ReturnValue7' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_K2_GetActorLocation_ReturnValue1) == 0x000534, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_K2_GetActorLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_BreakVector_X1) == 0x000540, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_BreakVector_X1' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_BreakVector_Y1) == 0x000544, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_BreakVector_Y1' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_BreakVector_Z1) == 0x000548, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_BreakVector_Z1' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_Subtract_FloatFloat_ReturnValue1) == 0x00054C, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_Subtract_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_MakeVector_ReturnValue) == 0x000550, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_MakeVector_ReturnValue1) == 0x00055C, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_MakeVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_SpawnEmitterAttached_ReturnValue2) == 0x000568, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_SpawnEmitterAttached_ReturnValue2' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_SpawnEmitterAttached_ReturnValue3) == 0x000570, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_SpawnEmitterAttached_ReturnValue3' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, Temp_bool_Variable) == 0x000578, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_IsValid_ReturnValue8) == 0x000579, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_IsValid_ReturnValue8' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_Select_Default) == 0x000580, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_SpawnEmitterAtLocation_ReturnValue1) == 0x000588, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_SpawnEmitterAtLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_PlayCameraShake_ReturnValue1) == 0x000590, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_PlayCameraShake_ReturnValue1' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_IsDedicatedServer_ReturnValue9) == 0x000598, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_IsDedicatedServer_ReturnValue9' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_K2_GetActorLocation_ReturnValue2) == 0x00059C, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_K2_GetActorLocation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_GetMaxAudibleDistance_Max_Distance) == 0x0005A8, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_GetMaxAudibleDistance_Max_Distance' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_K2_SetTimerDelegate_ReturnValue1) == 0x0005B0, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_K2_SetTimerDelegate_ReturnValue1' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_DynamicCast_AsFort_Player_Controller) == 0x0005B8, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_DynamicCast_AsFort_Player_Controller' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_DynamicCast_bSuccess4) == 0x0005C0, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_MakeArray_Array) == 0x0005C8, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_MakeGameplayTagContainerFromTag_ReturnValue) == 0x0005D8, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_MakeGameplayTagContainerFromTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_CustomEvent_Hide) == 0x0005F8, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_CustomEvent_Hide' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_IsValid_ReturnValue9) == 0x0005F9, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_IsValid_ReturnValue9' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_IsValid_ReturnValue10) == 0x0005FA, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_IsValid_ReturnValue10' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, CallFunc_GetController_ReturnValue1) == 0x000600, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::CallFunc_GetController_ReturnValue1' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_Event_EndPlayReason) == 0x000608, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_DynamicCast_AsFort_Player_Controller_Gameplay) == 0x000610, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_DynamicCast_AsFort_Player_Controller_Gameplay' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena, K2Node_DynamicCast_bSuccess5) == 0x000618, "Member 'JackalVehicle_Athena_C_ExecuteUbergraph_JackalVehicle_Athena::K2Node_DynamicCast_bSuccess5' has a wrong offset!");

// Function JackalVehicle_Athena.JackalVehicle_Athena_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct JackalVehicle_Athena_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JackalVehicle_Athena_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on JackalVehicle_Athena_C_ReceiveEndPlay");
static_assert(sizeof(JackalVehicle_Athena_C_ReceiveEndPlay) == 0x000001, "Wrong size on JackalVehicle_Athena_C_ReceiveEndPlay");
static_assert(offsetof(JackalVehicle_Athena_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'JackalVehicle_Athena_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function JackalVehicle_Athena.JackalVehicle_Athena_C.HideQuickBarForSecondaryAbility
// 0x0001 (0x0001 - 0x0000)
struct JackalVehicle_Athena_C_HideQuickBarForSecondaryAbility final
{
public:
	bool                                          Hide;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(JackalVehicle_Athena_C_HideQuickBarForSecondaryAbility) == 0x000001, "Wrong alignment on JackalVehicle_Athena_C_HideQuickBarForSecondaryAbility");
static_assert(sizeof(JackalVehicle_Athena_C_HideQuickBarForSecondaryAbility) == 0x000001, "Wrong size on JackalVehicle_Athena_C_HideQuickBarForSecondaryAbility");
static_assert(offsetof(JackalVehicle_Athena_C_HideQuickBarForSecondaryAbility, Hide) == 0x000000, "Member 'JackalVehicle_Athena_C_HideQuickBarForSecondaryAbility::Hide' has a wrong offset!");

// Function JackalVehicle_Athena.JackalVehicle_Athena_C.OnHoldExitStopped
// 0x0008 (0x0008 - 0x0000)
struct JackalVehicle_Athena_C_OnHoldExitStopped final
{
public:
	class AFortPawn*                              ExitingPawn;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JackalVehicle_Athena_C_OnHoldExitStopped) == 0x000008, "Wrong alignment on JackalVehicle_Athena_C_OnHoldExitStopped");
static_assert(sizeof(JackalVehicle_Athena_C_OnHoldExitStopped) == 0x000008, "Wrong size on JackalVehicle_Athena_C_OnHoldExitStopped");
static_assert(offsetof(JackalVehicle_Athena_C_OnHoldExitStopped, ExitingPawn) == 0x000000, "Member 'JackalVehicle_Athena_C_OnHoldExitStopped::ExitingPawn' has a wrong offset!");

// Function JackalVehicle_Athena.JackalVehicle_Athena_C.OnHoldExitStarted
// 0x0010 (0x0010 - 0x0000)
struct JackalVehicle_Athena_C_OnHoldExitStarted final
{
public:
	class AFortPawn*                              ExitingPawn;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ExitDuration;                                      // 0x0008(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JackalVehicle_Athena_C_OnHoldExitStarted) == 0x000008, "Wrong alignment on JackalVehicle_Athena_C_OnHoldExitStarted");
static_assert(sizeof(JackalVehicle_Athena_C_OnHoldExitStarted) == 0x000010, "Wrong size on JackalVehicle_Athena_C_OnHoldExitStarted");
static_assert(offsetof(JackalVehicle_Athena_C_OnHoldExitStarted, ExitingPawn) == 0x000000, "Member 'JackalVehicle_Athena_C_OnHoldExitStarted::ExitingPawn' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_OnHoldExitStarted, ExitDuration) == 0x000008, "Member 'JackalVehicle_Athena_C_OnHoldExitStarted::ExitDuration' has a wrong offset!");

// Function JackalVehicle_Athena.JackalVehicle_Athena_C.OnDeathPlayEffects
// 0x00E8 (0x00E8 - 0x0000)
struct JackalVehicle_Athena_C_OnDeathPlayEffects final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  DamageTags;                                        // 0x0008(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                Momentum;                                          // 0x0028(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitInfo;                                           // 0x0034(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPawn*                              InstigatedBy;                                      // 0x00C0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x00C8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           EffectContext;                                     // 0x00D0(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(JackalVehicle_Athena_C_OnDeathPlayEffects) == 0x000008, "Wrong alignment on JackalVehicle_Athena_C_OnDeathPlayEffects");
static_assert(sizeof(JackalVehicle_Athena_C_OnDeathPlayEffects) == 0x0000E8, "Wrong size on JackalVehicle_Athena_C_OnDeathPlayEffects");
static_assert(offsetof(JackalVehicle_Athena_C_OnDeathPlayEffects, Damage) == 0x000000, "Member 'JackalVehicle_Athena_C_OnDeathPlayEffects::Damage' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_OnDeathPlayEffects, DamageTags) == 0x000008, "Member 'JackalVehicle_Athena_C_OnDeathPlayEffects::DamageTags' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_OnDeathPlayEffects, Momentum) == 0x000028, "Member 'JackalVehicle_Athena_C_OnDeathPlayEffects::Momentum' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_OnDeathPlayEffects, HitInfo) == 0x000034, "Member 'JackalVehicle_Athena_C_OnDeathPlayEffects::HitInfo' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_OnDeathPlayEffects, InstigatedBy) == 0x0000C0, "Member 'JackalVehicle_Athena_C_OnDeathPlayEffects::InstigatedBy' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_OnDeathPlayEffects, DamageCauser) == 0x0000C8, "Member 'JackalVehicle_Athena_C_OnDeathPlayEffects::DamageCauser' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_OnDeathPlayEffects, EffectContext) == 0x0000D0, "Member 'JackalVehicle_Athena_C_OnDeathPlayEffects::EffectContext' has a wrong offset!");

// Function JackalVehicle_Athena.JackalVehicle_Athena_C.BndEvt__SkeletalMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct JackalVehicle_Athena_C_BndEvt__SkeletalMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0024(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(JackalVehicle_Athena_C_BndEvt__SkeletalMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature) == 0x000008, "Wrong alignment on JackalVehicle_Athena_C_BndEvt__SkeletalMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");
static_assert(sizeof(JackalVehicle_Athena_C_BndEvt__SkeletalMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature) == 0x0000B0, "Wrong size on JackalVehicle_Athena_C_BndEvt__SkeletalMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");
static_assert(offsetof(JackalVehicle_Athena_C_BndEvt__SkeletalMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, HitComponent) == 0x000000, "Member 'JackalVehicle_Athena_C_BndEvt__SkeletalMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::HitComponent' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_BndEvt__SkeletalMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'JackalVehicle_Athena_C_BndEvt__SkeletalMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_BndEvt__SkeletalMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'JackalVehicle_Athena_C_BndEvt__SkeletalMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_BndEvt__SkeletalMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, NormalImpulse) == 0x000018, "Member 'JackalVehicle_Athena_C_BndEvt__SkeletalMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::NormalImpulse' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_BndEvt__SkeletalMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, Hit) == 0x000024, "Member 'JackalVehicle_Athena_C_BndEvt__SkeletalMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::Hit' has a wrong offset!");

// Function JackalVehicle_Athena.JackalVehicle_Athena_C.K2_ApplyCosmeticWrap
// 0x0008 (0x0008 - 0x0000)
struct JackalVehicle_Athena_C_K2_ApplyCosmeticWrap final
{
public:
	const class UAthenaItemWrapDefinition*        LoadedWrap;                                        // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JackalVehicle_Athena_C_K2_ApplyCosmeticWrap) == 0x000008, "Wrong alignment on JackalVehicle_Athena_C_K2_ApplyCosmeticWrap");
static_assert(sizeof(JackalVehicle_Athena_C_K2_ApplyCosmeticWrap) == 0x000008, "Wrong size on JackalVehicle_Athena_C_K2_ApplyCosmeticWrap");
static_assert(offsetof(JackalVehicle_Athena_C_K2_ApplyCosmeticWrap, LoadedWrap) == 0x000000, "Member 'JackalVehicle_Athena_C_K2_ApplyCosmeticWrap::LoadedWrap' has a wrong offset!");

// Function JackalVehicle_Athena.JackalVehicle_Athena_C.OnExitedWaterVolume
// 0x000C (0x000C - 0x0000)
struct JackalVehicle_Athena_C_OnExitedWaterVolume final
{
public:
	struct FVector                                WaterSurfacePoint;                                 // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JackalVehicle_Athena_C_OnExitedWaterVolume) == 0x000004, "Wrong alignment on JackalVehicle_Athena_C_OnExitedWaterVolume");
static_assert(sizeof(JackalVehicle_Athena_C_OnExitedWaterVolume) == 0x00000C, "Wrong size on JackalVehicle_Athena_C_OnExitedWaterVolume");
static_assert(offsetof(JackalVehicle_Athena_C_OnExitedWaterVolume, WaterSurfacePoint) == 0x000000, "Member 'JackalVehicle_Athena_C_OnExitedWaterVolume::WaterSurfacePoint' has a wrong offset!");

// Function JackalVehicle_Athena.JackalVehicle_Athena_C.OnEnteredWaterVolume
// 0x000C (0x000C - 0x0000)
struct JackalVehicle_Athena_C_OnEnteredWaterVolume final
{
public:
	struct FVector                                WaterSurfacePoint;                                 // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JackalVehicle_Athena_C_OnEnteredWaterVolume) == 0x000004, "Wrong alignment on JackalVehicle_Athena_C_OnEnteredWaterVolume");
static_assert(sizeof(JackalVehicle_Athena_C_OnEnteredWaterVolume) == 0x00000C, "Wrong size on JackalVehicle_Athena_C_OnEnteredWaterVolume");
static_assert(offsetof(JackalVehicle_Athena_C_OnEnteredWaterVolume, WaterSurfacePoint) == 0x000000, "Member 'JackalVehicle_Athena_C_OnEnteredWaterVolume::WaterSurfacePoint' has a wrong offset!");

// Function JackalVehicle_Athena.JackalVehicle_Athena_C.OnCollisionHitEffects
// 0x0040 (0x0040 - 0x0000)
struct JackalVehicle_Athena_C_OnCollisionHitEffects final
{
public:
	struct FVector                                HitLocation;                                       // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormalImpulse;                                  // 0x000C(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitFrictionImpulse;                                // 0x0018(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x0024(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 HitActor;                                          // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              HitSurfaceType;                                    // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JackalVehicle_Athena_C_OnCollisionHitEffects) == 0x000008, "Wrong alignment on JackalVehicle_Athena_C_OnCollisionHitEffects");
static_assert(sizeof(JackalVehicle_Athena_C_OnCollisionHitEffects) == 0x000040, "Wrong size on JackalVehicle_Athena_C_OnCollisionHitEffects");
static_assert(offsetof(JackalVehicle_Athena_C_OnCollisionHitEffects, HitLocation) == 0x000000, "Member 'JackalVehicle_Athena_C_OnCollisionHitEffects::HitLocation' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_OnCollisionHitEffects, HitNormalImpulse) == 0x00000C, "Member 'JackalVehicle_Athena_C_OnCollisionHitEffects::HitNormalImpulse' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_OnCollisionHitEffects, HitFrictionImpulse) == 0x000018, "Member 'JackalVehicle_Athena_C_OnCollisionHitEffects::HitFrictionImpulse' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_OnCollisionHitEffects, HitNormal) == 0x000024, "Member 'JackalVehicle_Athena_C_OnCollisionHitEffects::HitNormal' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_OnCollisionHitEffects, HitActor) == 0x000030, "Member 'JackalVehicle_Athena_C_OnCollisionHitEffects::HitActor' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_OnCollisionHitEffects, HitSurfaceType) == 0x000038, "Member 'JackalVehicle_Athena_C_OnCollisionHitEffects::HitSurfaceType' has a wrong offset!");

// Function JackalVehicle_Athena.JackalVehicle_Athena_C.OnJumped
// 0x0004 (0x0004 - 0x0000)
struct JackalVehicle_Athena_C_OnJumped final
{
public:
	float                                         Charge;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JackalVehicle_Athena_C_OnJumped) == 0x000004, "Wrong alignment on JackalVehicle_Athena_C_OnJumped");
static_assert(sizeof(JackalVehicle_Athena_C_OnJumped) == 0x000004, "Wrong size on JackalVehicle_Athena_C_OnJumped");
static_assert(offsetof(JackalVehicle_Athena_C_OnJumped, Charge) == 0x000000, "Member 'JackalVehicle_Athena_C_OnJumped::Charge' has a wrong offset!");

// Function JackalVehicle_Athena.JackalVehicle_Athena_C.OnJumpChargeEnd
// 0x0004 (0x0004 - 0x0000)
struct JackalVehicle_Athena_C_OnJumpChargeEnd final
{
public:
	float                                         Charge;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JackalVehicle_Athena_C_OnJumpChargeEnd) == 0x000004, "Wrong alignment on JackalVehicle_Athena_C_OnJumpChargeEnd");
static_assert(sizeof(JackalVehicle_Athena_C_OnJumpChargeEnd) == 0x000004, "Wrong size on JackalVehicle_Athena_C_OnJumpChargeEnd");
static_assert(offsetof(JackalVehicle_Athena_C_OnJumpChargeEnd, Charge) == 0x000000, "Member 'JackalVehicle_Athena_C_OnJumpChargeEnd::Charge' has a wrong offset!");

// Function JackalVehicle_Athena.JackalVehicle_Athena_C.OnPawnExitVehicle
// 0x0010 (0x0010 - 0x0000)
struct JackalVehicle_Athena_C_OnPawnExitVehicle final
{
public:
	class AFortPlayerPawn*                        PlayerPawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ExitSocketName;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JackalVehicle_Athena_C_OnPawnExitVehicle) == 0x000008, "Wrong alignment on JackalVehicle_Athena_C_OnPawnExitVehicle");
static_assert(sizeof(JackalVehicle_Athena_C_OnPawnExitVehicle) == 0x000010, "Wrong size on JackalVehicle_Athena_C_OnPawnExitVehicle");
static_assert(offsetof(JackalVehicle_Athena_C_OnPawnExitVehicle, PlayerPawn) == 0x000000, "Member 'JackalVehicle_Athena_C_OnPawnExitVehicle::PlayerPawn' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_OnPawnExitVehicle, ExitSocketName) == 0x000008, "Member 'JackalVehicle_Athena_C_OnPawnExitVehicle::ExitSocketName' has a wrong offset!");

// Function JackalVehicle_Athena.JackalVehicle_Athena_C.OnPawnEnterVehicle
// 0x0010 (0x0010 - 0x0000)
struct JackalVehicle_Athena_C_OnPawnEnterVehicle final
{
public:
	class AFortPlayerPawn*                        PlayerPawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SeatIdx;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JackalVehicle_Athena_C_OnPawnEnterVehicle) == 0x000008, "Wrong alignment on JackalVehicle_Athena_C_OnPawnEnterVehicle");
static_assert(sizeof(JackalVehicle_Athena_C_OnPawnEnterVehicle) == 0x000010, "Wrong size on JackalVehicle_Athena_C_OnPawnEnterVehicle");
static_assert(offsetof(JackalVehicle_Athena_C_OnPawnEnterVehicle, PlayerPawn) == 0x000000, "Member 'JackalVehicle_Athena_C_OnPawnEnterVehicle::PlayerPawn' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_OnPawnEnterVehicle, SeatIdx) == 0x000008, "Member 'JackalVehicle_Athena_C_OnPawnEnterVehicle::SeatIdx' has a wrong offset!");

// Function JackalVehicle_Athena.JackalVehicle_Athena_C.UserConstructionScript
// 0x0008 (0x0008 - 0x0000)
struct JackalVehicle_Athena_C_UserConstructionScript final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JackalVehicle_Athena_C_UserConstructionScript) == 0x000008, "Wrong alignment on JackalVehicle_Athena_C_UserConstructionScript");
static_assert(sizeof(JackalVehicle_Athena_C_UserConstructionScript) == 0x000008, "Wrong size on JackalVehicle_Athena_C_UserConstructionScript");
static_assert(offsetof(JackalVehicle_Athena_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'JackalVehicle_Athena_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function JackalVehicle_Athena.JackalVehicle_Athena_C.GetVehicleSeatActionNames
// 0x0098 (0x0098 - 0x0000)
struct JackalVehicle_Athena_C_GetVehicleSeatActionNames final
{
public:
	class AFortPlayerPawn*                        PlayerPawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              OverrideInputType;                                 // 0x0008(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm)
	TArray<class FName>                           ReturnActionNames_Local;                           // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	class AFortPlayerPawn*                        PlayerPawn_Local;                                  // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue1;                  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerController*                  CallFunc_GetFortPlayerControllerFromActor_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUsingTouch_ReturnValue;                 // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUsingGamepad_ReturnValue;               // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53[0x1];                                       // 0x0053(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetVehicleJumpActionName_ReturnValue;     // 0x0054(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue2;                  // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetJackalBoostActionName_ReturnValue;     // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue1;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue3;                  // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetGamepadJackalExitActionName_ReturnValue; // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetJackalUseOrExitActionName_ReturnValue; // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue2;                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue3;                   // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JackalVehicle_Athena_C_GetVehicleSeatActionNames) == 0x000008, "Wrong alignment on JackalVehicle_Athena_C_GetVehicleSeatActionNames");
static_assert(sizeof(JackalVehicle_Athena_C_GetVehicleSeatActionNames) == 0x000098, "Wrong size on JackalVehicle_Athena_C_GetVehicleSeatActionNames");
static_assert(offsetof(JackalVehicle_Athena_C_GetVehicleSeatActionNames, PlayerPawn) == 0x000000, "Member 'JackalVehicle_Athena_C_GetVehicleSeatActionNames::PlayerPawn' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_GetVehicleSeatActionNames, OverrideInputType) == 0x000008, "Member 'JackalVehicle_Athena_C_GetVehicleSeatActionNames::OverrideInputType' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_GetVehicleSeatActionNames, ReturnValue) == 0x000010, "Member 'JackalVehicle_Athena_C_GetVehicleSeatActionNames::ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_GetVehicleSeatActionNames, ReturnActionNames_Local) == 0x000020, "Member 'JackalVehicle_Athena_C_GetVehicleSeatActionNames::ReturnActionNames_Local' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_GetVehicleSeatActionNames, PlayerPawn_Local) == 0x000030, "Member 'JackalVehicle_Athena_C_GetVehicleSeatActionNames::PlayerPawn_Local' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_GetVehicleSeatActionNames, CallFunc_GetContext_ReturnValue) == 0x000038, "Member 'JackalVehicle_Athena_C_GetVehicleSeatActionNames::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_GetVehicleSeatActionNames, CallFunc_GetContext_ReturnValue1) == 0x000040, "Member 'JackalVehicle_Athena_C_GetVehicleSeatActionNames::CallFunc_GetContext_ReturnValue1' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_GetVehicleSeatActionNames, CallFunc_GetFortPlayerControllerFromActor_ReturnValue) == 0x000048, "Member 'JackalVehicle_Athena_C_GetVehicleSeatActionNames::CallFunc_GetFortPlayerControllerFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_GetVehicleSeatActionNames, CallFunc_IsUsingTouch_ReturnValue) == 0x000050, "Member 'JackalVehicle_Athena_C_GetVehicleSeatActionNames::CallFunc_IsUsingTouch_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_GetVehicleSeatActionNames, CallFunc_IsUsingGamepad_ReturnValue) == 0x000051, "Member 'JackalVehicle_Athena_C_GetVehicleSeatActionNames::CallFunc_IsUsingGamepad_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_GetVehicleSeatActionNames, CallFunc_BooleanOR_ReturnValue) == 0x000052, "Member 'JackalVehicle_Athena_C_GetVehicleSeatActionNames::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_GetVehicleSeatActionNames, CallFunc_GetVehicleJumpActionName_ReturnValue) == 0x000054, "Member 'JackalVehicle_Athena_C_GetVehicleSeatActionNames::CallFunc_GetVehicleJumpActionName_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_GetVehicleSeatActionNames, CallFunc_GetContext_ReturnValue2) == 0x000060, "Member 'JackalVehicle_Athena_C_GetVehicleSeatActionNames::CallFunc_GetContext_ReturnValue2' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_GetVehicleSeatActionNames, CallFunc_GetJackalBoostActionName_ReturnValue) == 0x000068, "Member 'JackalVehicle_Athena_C_GetVehicleSeatActionNames::CallFunc_GetJackalBoostActionName_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_GetVehicleSeatActionNames, CallFunc_Array_Add_ReturnValue) == 0x000070, "Member 'JackalVehicle_Athena_C_GetVehicleSeatActionNames::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_GetVehicleSeatActionNames, CallFunc_Array_Add_ReturnValue1) == 0x000074, "Member 'JackalVehicle_Athena_C_GetVehicleSeatActionNames::CallFunc_Array_Add_ReturnValue1' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_GetVehicleSeatActionNames, CallFunc_GetContext_ReturnValue3) == 0x000078, "Member 'JackalVehicle_Athena_C_GetVehicleSeatActionNames::CallFunc_GetContext_ReturnValue3' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_GetVehicleSeatActionNames, CallFunc_GetGamepadJackalExitActionName_ReturnValue) == 0x000080, "Member 'JackalVehicle_Athena_C_GetVehicleSeatActionNames::CallFunc_GetGamepadJackalExitActionName_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_GetVehicleSeatActionNames, CallFunc_GetJackalUseOrExitActionName_ReturnValue) == 0x000088, "Member 'JackalVehicle_Athena_C_GetVehicleSeatActionNames::CallFunc_GetJackalUseOrExitActionName_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_GetVehicleSeatActionNames, CallFunc_Array_Add_ReturnValue2) == 0x000090, "Member 'JackalVehicle_Athena_C_GetVehicleSeatActionNames::CallFunc_Array_Add_ReturnValue2' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_GetVehicleSeatActionNames, CallFunc_Array_Add_ReturnValue3) == 0x000094, "Member 'JackalVehicle_Athena_C_GetVehicleSeatActionNames::CallFunc_Array_Add_ReturnValue3' has a wrong offset!");

// Function JackalVehicle_Athena.JackalVehicle_Athena_C.GetVehicleSeatLabels
// 0x0050 (0x0050 - 0x0000)
struct JackalVehicle_Athena_C_GetVehicleSeatLabels final
{
public:
	class AFortPlayerPawn*                        PlayerPawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              OverrideInputType;                                 // 0x0008(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm)
	TArray<class FText>                           ReturnLabels_Local;                                // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0030(0x0018)()
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JackalVehicle_Athena_C_GetVehicleSeatLabels) == 0x000008, "Wrong alignment on JackalVehicle_Athena_C_GetVehicleSeatLabels");
static_assert(sizeof(JackalVehicle_Athena_C_GetVehicleSeatLabels) == 0x000050, "Wrong size on JackalVehicle_Athena_C_GetVehicleSeatLabels");
static_assert(offsetof(JackalVehicle_Athena_C_GetVehicleSeatLabels, PlayerPawn) == 0x000000, "Member 'JackalVehicle_Athena_C_GetVehicleSeatLabels::PlayerPawn' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_GetVehicleSeatLabels, OverrideInputType) == 0x000008, "Member 'JackalVehicle_Athena_C_GetVehicleSeatLabels::OverrideInputType' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_GetVehicleSeatLabels, ReturnValue) == 0x000010, "Member 'JackalVehicle_Athena_C_GetVehicleSeatLabels::ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_GetVehicleSeatLabels, ReturnLabels_Local) == 0x000020, "Member 'JackalVehicle_Athena_C_GetVehicleSeatLabels::ReturnLabels_Local' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_GetVehicleSeatLabels, CallFunc_MakeLiteralText_ReturnValue) == 0x000030, "Member 'JackalVehicle_Athena_C_GetVehicleSeatLabels::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_GetVehicleSeatLabels, CallFunc_Array_Add_ReturnValue) == 0x000048, "Member 'JackalVehicle_Athena_C_GetVehicleSeatLabels::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function JackalVehicle_Athena.JackalVehicle_Athena_C.GetVehicleSeatActionLabels
// 0x00B0 (0x00B0 - 0x0000)
struct JackalVehicle_Athena_C_GetVehicleSeatActionLabels final
{
public:
	class AFortPlayerPawn*                        PlayerPawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              OverrideInputType;                                 // 0x0008(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm)
	TArray<class FText>                           ReturnLabels_Local;                                // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	class AFortPlayerController*                  CallFunc_GetFortPlayerControllerFromActor_ReturnValue; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0038(0x0018)()
	bool                                          CallFunc_IsUsingTouch_ReturnValue;                 // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUsingGamepad_ReturnValue;               // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53[0x1];                                       // 0x0053(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue1;             // 0x0058(0x0018)()
	int32                                         CallFunc_Array_Add_ReturnValue1;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue2;             // 0x0078(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue3;             // 0x0090(0x0018)()
	int32                                         CallFunc_Array_Add_ReturnValue2;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue3;                   // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JackalVehicle_Athena_C_GetVehicleSeatActionLabels) == 0x000008, "Wrong alignment on JackalVehicle_Athena_C_GetVehicleSeatActionLabels");
static_assert(sizeof(JackalVehicle_Athena_C_GetVehicleSeatActionLabels) == 0x0000B0, "Wrong size on JackalVehicle_Athena_C_GetVehicleSeatActionLabels");
static_assert(offsetof(JackalVehicle_Athena_C_GetVehicleSeatActionLabels, PlayerPawn) == 0x000000, "Member 'JackalVehicle_Athena_C_GetVehicleSeatActionLabels::PlayerPawn' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_GetVehicleSeatActionLabels, OverrideInputType) == 0x000008, "Member 'JackalVehicle_Athena_C_GetVehicleSeatActionLabels::OverrideInputType' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_GetVehicleSeatActionLabels, ReturnValue) == 0x000010, "Member 'JackalVehicle_Athena_C_GetVehicleSeatActionLabels::ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_GetVehicleSeatActionLabels, ReturnLabels_Local) == 0x000020, "Member 'JackalVehicle_Athena_C_GetVehicleSeatActionLabels::ReturnLabels_Local' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_GetVehicleSeatActionLabels, CallFunc_GetFortPlayerControllerFromActor_ReturnValue) == 0x000030, "Member 'JackalVehicle_Athena_C_GetVehicleSeatActionLabels::CallFunc_GetFortPlayerControllerFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_GetVehicleSeatActionLabels, CallFunc_MakeLiteralText_ReturnValue) == 0x000038, "Member 'JackalVehicle_Athena_C_GetVehicleSeatActionLabels::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_GetVehicleSeatActionLabels, CallFunc_IsUsingTouch_ReturnValue) == 0x000050, "Member 'JackalVehicle_Athena_C_GetVehicleSeatActionLabels::CallFunc_IsUsingTouch_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_GetVehicleSeatActionLabels, CallFunc_IsUsingGamepad_ReturnValue) == 0x000051, "Member 'JackalVehicle_Athena_C_GetVehicleSeatActionLabels::CallFunc_IsUsingGamepad_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_GetVehicleSeatActionLabels, CallFunc_BooleanOR_ReturnValue) == 0x000052, "Member 'JackalVehicle_Athena_C_GetVehicleSeatActionLabels::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_GetVehicleSeatActionLabels, CallFunc_Array_Add_ReturnValue) == 0x000054, "Member 'JackalVehicle_Athena_C_GetVehicleSeatActionLabels::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_GetVehicleSeatActionLabels, CallFunc_MakeLiteralText_ReturnValue1) == 0x000058, "Member 'JackalVehicle_Athena_C_GetVehicleSeatActionLabels::CallFunc_MakeLiteralText_ReturnValue1' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_GetVehicleSeatActionLabels, CallFunc_Array_Add_ReturnValue1) == 0x000070, "Member 'JackalVehicle_Athena_C_GetVehicleSeatActionLabels::CallFunc_Array_Add_ReturnValue1' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_GetVehicleSeatActionLabels, CallFunc_MakeLiteralText_ReturnValue2) == 0x000078, "Member 'JackalVehicle_Athena_C_GetVehicleSeatActionLabels::CallFunc_MakeLiteralText_ReturnValue2' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_GetVehicleSeatActionLabels, CallFunc_MakeLiteralText_ReturnValue3) == 0x000090, "Member 'JackalVehicle_Athena_C_GetVehicleSeatActionLabels::CallFunc_MakeLiteralText_ReturnValue3' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_GetVehicleSeatActionLabels, CallFunc_Array_Add_ReturnValue2) == 0x0000A8, "Member 'JackalVehicle_Athena_C_GetVehicleSeatActionLabels::CallFunc_Array_Add_ReturnValue2' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_GetVehicleSeatActionLabels, CallFunc_Array_Add_ReturnValue3) == 0x0000AC, "Member 'JackalVehicle_Athena_C_GetVehicleSeatActionLabels::CallFunc_Array_Add_ReturnValue3' has a wrong offset!");

// Function JackalVehicle_Athena.JackalVehicle_Athena_C.CurrentBoostCharge
// 0x0060 (0x0060 - 0x0000)
struct JackalVehicle_Athena_C_CurrentBoostCharge final
{
public:
	float                                         Charge_Value;                                      // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortRechargingActionTimer             CallFunc_GetCurrentBoostTimer_ReturnValue;         // 0x0008(0x0058)(ContainsInstancedReference)
};
static_assert(alignof(JackalVehicle_Athena_C_CurrentBoostCharge) == 0x000008, "Wrong alignment on JackalVehicle_Athena_C_CurrentBoostCharge");
static_assert(sizeof(JackalVehicle_Athena_C_CurrentBoostCharge) == 0x000060, "Wrong size on JackalVehicle_Athena_C_CurrentBoostCharge");
static_assert(offsetof(JackalVehicle_Athena_C_CurrentBoostCharge, Charge_Value) == 0x000000, "Member 'JackalVehicle_Athena_C_CurrentBoostCharge::Charge_Value' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_CurrentBoostCharge, CallFunc_GetCurrentBoostTimer_ReturnValue) == 0x000008, "Member 'JackalVehicle_Athena_C_CurrentBoostCharge::CallFunc_GetCurrentBoostTimer_ReturnValue' has a wrong offset!");

// Function JackalVehicle_Athena.JackalVehicle_Athena_C.IsBoostCharging
// 0x0060 (0x0060 - 0x0000)
struct JackalVehicle_Athena_C_IsBoostCharging final
{
public:
	bool                                          Is_Charging;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortRechargingActionTimer             CallFunc_GetCurrentBoostTimer_ReturnValue;         // 0x0008(0x0058)(ContainsInstancedReference)
};
static_assert(alignof(JackalVehicle_Athena_C_IsBoostCharging) == 0x000008, "Wrong alignment on JackalVehicle_Athena_C_IsBoostCharging");
static_assert(sizeof(JackalVehicle_Athena_C_IsBoostCharging) == 0x000060, "Wrong size on JackalVehicle_Athena_C_IsBoostCharging");
static_assert(offsetof(JackalVehicle_Athena_C_IsBoostCharging, Is_Charging) == 0x000000, "Member 'JackalVehicle_Athena_C_IsBoostCharging::Is_Charging' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_IsBoostCharging, CallFunc_GetCurrentBoostTimer_ReturnValue) == 0x000008, "Member 'JackalVehicle_Athena_C_IsBoostCharging::CallFunc_GetCurrentBoostTimer_ReturnValue' has a wrong offset!");

// Function JackalVehicle_Athena.JackalVehicle_Athena_C.HapticsOnHit
// 0x0070 (0x0070 - 0x0000)
struct JackalVehicle_Athena_C_HapticsOnHit final
{
public:
	float                                         HitMagnitude;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CameraPushVelocityDelta;                           // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HitDelta;                                          // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CameraShakeMagnitude;                              // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPreviousLinearVelocity_ReturnValue;    // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPreviousLinearVelocity_ReturnValue1;   // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentVelocity_ReturnValue;         // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MapRangeClamped_ReturnValue1;             // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue1;          // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x006E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue2;          // 0x006F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(JackalVehicle_Athena_C_HapticsOnHit) == 0x000004, "Wrong alignment on JackalVehicle_Athena_C_HapticsOnHit");
static_assert(sizeof(JackalVehicle_Athena_C_HapticsOnHit) == 0x000070, "Wrong size on JackalVehicle_Athena_C_HapticsOnHit");
static_assert(offsetof(JackalVehicle_Athena_C_HapticsOnHit, HitMagnitude) == 0x000000, "Member 'JackalVehicle_Athena_C_HapticsOnHit::HitMagnitude' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_HapticsOnHit, CameraPushVelocityDelta) == 0x000004, "Member 'JackalVehicle_Athena_C_HapticsOnHit::CameraPushVelocityDelta' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_HapticsOnHit, HitDelta) == 0x000008, "Member 'JackalVehicle_Athena_C_HapticsOnHit::HitDelta' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_HapticsOnHit, CameraShakeMagnitude) == 0x00000C, "Member 'JackalVehicle_Athena_C_HapticsOnHit::CameraShakeMagnitude' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_HapticsOnHit, CallFunc_GetPreviousLinearVelocity_ReturnValue) == 0x000010, "Member 'JackalVehicle_Athena_C_HapticsOnHit::CallFunc_GetPreviousLinearVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_HapticsOnHit, CallFunc_GetPreviousLinearVelocity_ReturnValue1) == 0x00001C, "Member 'JackalVehicle_Athena_C_HapticsOnHit::CallFunc_GetPreviousLinearVelocity_ReturnValue1' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_HapticsOnHit, CallFunc_MakeRotFromX_ReturnValue) == 0x000028, "Member 'JackalVehicle_Athena_C_HapticsOnHit::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_HapticsOnHit, CallFunc_Normal_ReturnValue) == 0x000034, "Member 'JackalVehicle_Athena_C_HapticsOnHit::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_HapticsOnHit, CallFunc_Dot_VectorVector_ReturnValue) == 0x000040, "Member 'JackalVehicle_Athena_C_HapticsOnHit::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_HapticsOnHit, CallFunc_Abs_ReturnValue) == 0x000044, "Member 'JackalVehicle_Athena_C_HapticsOnHit::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_HapticsOnHit, CallFunc_GetComponentVelocity_ReturnValue) == 0x000048, "Member 'JackalVehicle_Athena_C_HapticsOnHit::CallFunc_GetComponentVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_HapticsOnHit, CallFunc_Less_FloatFloat_ReturnValue) == 0x000054, "Member 'JackalVehicle_Athena_C_HapticsOnHit::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_HapticsOnHit, CallFunc_VSize_ReturnValue) == 0x000058, "Member 'JackalVehicle_Athena_C_HapticsOnHit::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_HapticsOnHit, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00005C, "Member 'JackalVehicle_Athena_C_HapticsOnHit::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_HapticsOnHit, CallFunc_MapRangeClamped_ReturnValue) == 0x000060, "Member 'JackalVehicle_Athena_C_HapticsOnHit::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_HapticsOnHit, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000064, "Member 'JackalVehicle_Athena_C_HapticsOnHit::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_HapticsOnHit, CallFunc_MapRangeClamped_ReturnValue1) == 0x000068, "Member 'JackalVehicle_Athena_C_HapticsOnHit::CallFunc_MapRangeClamped_ReturnValue1' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_HapticsOnHit, CallFunc_Greater_FloatFloat_ReturnValue1) == 0x00006C, "Member 'JackalVehicle_Athena_C_HapticsOnHit::CallFunc_Greater_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_HapticsOnHit, CallFunc_IsValid_ReturnValue) == 0x00006D, "Member 'JackalVehicle_Athena_C_HapticsOnHit::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_HapticsOnHit, CallFunc_IsValid_ReturnValue1) == 0x00006E, "Member 'JackalVehicle_Athena_C_HapticsOnHit::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_HapticsOnHit, CallFunc_Greater_FloatFloat_ReturnValue2) == 0x00006F, "Member 'JackalVehicle_Athena_C_HapticsOnHit::CallFunc_Greater_FloatFloat_ReturnValue2' has a wrong offset!");

// Function JackalVehicle_Athena.JackalVehicle_Athena_C.SendDamageValueToMaterials
// 0x0004 (0x0004 - 0x0000)
struct JackalVehicle_Athena_C_SendDamageValueToMaterials final
{
public:
	float                                         ParameterValue;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JackalVehicle_Athena_C_SendDamageValueToMaterials) == 0x000004, "Wrong alignment on JackalVehicle_Athena_C_SendDamageValueToMaterials");
static_assert(sizeof(JackalVehicle_Athena_C_SendDamageValueToMaterials) == 0x000004, "Wrong size on JackalVehicle_Athena_C_SendDamageValueToMaterials");
static_assert(offsetof(JackalVehicle_Athena_C_SendDamageValueToMaterials, ParameterValue) == 0x000000, "Member 'JackalVehicle_Athena_C_SendDamageValueToMaterials::ParameterValue' has a wrong offset!");

// Function JackalVehicle_Athena.JackalVehicle_Athena_C.SendHeadlightValueToMaterials
// 0x0004 (0x0004 - 0x0000)
struct JackalVehicle_Athena_C_SendHeadlightValueToMaterials final
{
public:
	float                                         ParameterValue;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JackalVehicle_Athena_C_SendHeadlightValueToMaterials) == 0x000004, "Wrong alignment on JackalVehicle_Athena_C_SendHeadlightValueToMaterials");
static_assert(sizeof(JackalVehicle_Athena_C_SendHeadlightValueToMaterials) == 0x000004, "Wrong size on JackalVehicle_Athena_C_SendHeadlightValueToMaterials");
static_assert(offsetof(JackalVehicle_Athena_C_SendHeadlightValueToMaterials, ParameterValue) == 0x000000, "Member 'JackalVehicle_Athena_C_SendHeadlightValueToMaterials::ParameterValue' has a wrong offset!");

// Function JackalVehicle_Athena.JackalVehicle_Athena_C.SendBoostTimeToMaterials
// 0x0004 (0x0004 - 0x0000)
struct JackalVehicle_Athena_C_SendBoostTimeToMaterials final
{
public:
	float                                         ParameterValue;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JackalVehicle_Athena_C_SendBoostTimeToMaterials) == 0x000004, "Wrong alignment on JackalVehicle_Athena_C_SendBoostTimeToMaterials");
static_assert(sizeof(JackalVehicle_Athena_C_SendBoostTimeToMaterials) == 0x000004, "Wrong size on JackalVehicle_Athena_C_SendBoostTimeToMaterials");
static_assert(offsetof(JackalVehicle_Athena_C_SendBoostTimeToMaterials, ParameterValue) == 0x000000, "Member 'JackalVehicle_Athena_C_SendBoostTimeToMaterials::ParameterValue' has a wrong offset!");

// Function JackalVehicle_Athena.JackalVehicle_Athena_C.UpdateSurfaceType
// 0x0028 (0x0028 - 0x0000)
struct JackalVehicle_Athena_C_UpdateSurfaceType final
{
public:
	EPhysicalSurface                              Surface;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Output;                                            // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue1;         // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue2;         // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Variable1;                                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable2;                                // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable1;                               // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select1_Default;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JackalVehicle_Athena_C_UpdateSurfaceType) == 0x000004, "Wrong alignment on JackalVehicle_Athena_C_UpdateSurfaceType");
static_assert(sizeof(JackalVehicle_Athena_C_UpdateSurfaceType) == 0x000028, "Wrong size on JackalVehicle_Athena_C_UpdateSurfaceType");
static_assert(offsetof(JackalVehicle_Athena_C_UpdateSurfaceType, Surface) == 0x000000, "Member 'JackalVehicle_Athena_C_UpdateSurfaceType::Surface' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_UpdateSurfaceType, Output) == 0x000004, "Member 'JackalVehicle_Athena_C_UpdateSurfaceType::Output' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_UpdateSurfaceType, Temp_int_Variable) == 0x000008, "Member 'JackalVehicle_Athena_C_UpdateSurfaceType::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_UpdateSurfaceType, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000C, "Member 'JackalVehicle_Athena_C_UpdateSurfaceType::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_UpdateSurfaceType, CallFunc_EqualEqual_ByteByte_ReturnValue1) == 0x00000D, "Member 'JackalVehicle_Athena_C_UpdateSurfaceType::CallFunc_EqualEqual_ByteByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_UpdateSurfaceType, CallFunc_EqualEqual_ByteByte_ReturnValue2) == 0x00000E, "Member 'JackalVehicle_Athena_C_UpdateSurfaceType::CallFunc_EqualEqual_ByteByte_ReturnValue2' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_UpdateSurfaceType, CallFunc_BooleanOR_ReturnValue) == 0x00000F, "Member 'JackalVehicle_Athena_C_UpdateSurfaceType::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_UpdateSurfaceType, Temp_int_Variable1) == 0x000010, "Member 'JackalVehicle_Athena_C_UpdateSurfaceType::Temp_int_Variable1' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_UpdateSurfaceType, Temp_bool_Variable) == 0x000014, "Member 'JackalVehicle_Athena_C_UpdateSurfaceType::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_UpdateSurfaceType, Temp_int_Variable2) == 0x000018, "Member 'JackalVehicle_Athena_C_UpdateSurfaceType::Temp_int_Variable2' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_UpdateSurfaceType, Temp_bool_Variable1) == 0x00001C, "Member 'JackalVehicle_Athena_C_UpdateSurfaceType::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_UpdateSurfaceType, K2Node_Select_Default) == 0x000020, "Member 'JackalVehicle_Athena_C_UpdateSurfaceType::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_UpdateSurfaceType, K2Node_Select1_Default) == 0x000024, "Member 'JackalVehicle_Athena_C_UpdateSurfaceType::K2Node_Select1_Default' has a wrong offset!");

// Function JackalVehicle_Athena.JackalVehicle_Athena_C.DestroyBuildingPiece
// 0x0048 (0x0048 - 0x0000)
struct JackalVehicle_Athena_C_DestroyBuildingPiece final
{
public:
	class ABuildingActor*                         BuildingActor;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DestroyThreshold;                                  // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxHealth_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue1;   // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           CallFunc_MakeEffectContext_ReturnValue;            // 0x0028(0x0018)()
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue; // 0x0040(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JackalVehicle_Athena_C_DestroyBuildingPiece) == 0x000008, "Wrong alignment on JackalVehicle_Athena_C_DestroyBuildingPiece");
static_assert(sizeof(JackalVehicle_Athena_C_DestroyBuildingPiece) == 0x000048, "Wrong size on JackalVehicle_Athena_C_DestroyBuildingPiece");
static_assert(offsetof(JackalVehicle_Athena_C_DestroyBuildingPiece, BuildingActor) == 0x000000, "Member 'JackalVehicle_Athena_C_DestroyBuildingPiece::BuildingActor' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_DestroyBuildingPiece, DestroyThreshold) == 0x000008, "Member 'JackalVehicle_Athena_C_DestroyBuildingPiece::DestroyThreshold' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_DestroyBuildingPiece, CallFunc_GetMaxHealth_ReturnValue) == 0x00000C, "Member 'JackalVehicle_Athena_C_DestroyBuildingPiece::CallFunc_GetMaxHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_DestroyBuildingPiece, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000010, "Member 'JackalVehicle_Athena_C_DestroyBuildingPiece::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_DestroyBuildingPiece, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000018, "Member 'JackalVehicle_Athena_C_DestroyBuildingPiece::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_DestroyBuildingPiece, CallFunc_GetAbilitySystemComponent_ReturnValue1) == 0x000020, "Member 'JackalVehicle_Athena_C_DestroyBuildingPiece::CallFunc_GetAbilitySystemComponent_ReturnValue1' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_DestroyBuildingPiece, CallFunc_MakeEffectContext_ReturnValue) == 0x000028, "Member 'JackalVehicle_Athena_C_DestroyBuildingPiece::CallFunc_MakeEffectContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_DestroyBuildingPiece, CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue) == 0x000040, "Member 'JackalVehicle_Athena_C_DestroyBuildingPiece::CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue' has a wrong offset!");

// Function JackalVehicle_Athena.JackalVehicle_Athena_C.ShouldDestroyProp?
// 0x0034 (0x0034 - 0x0000)
struct JackalVehicle_Athena_C_ShouldDestroyProp_ final
{
public:
	struct FVector                                HitNormal;                                         // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetPreviousLinearVelocity_ReturnValue;    // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPreviousForwardSpeedKmh_ReturnValue;   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(JackalVehicle_Athena_C_ShouldDestroyProp_) == 0x000004, "Wrong alignment on JackalVehicle_Athena_C_ShouldDestroyProp_");
static_assert(sizeof(JackalVehicle_Athena_C_ShouldDestroyProp_) == 0x000034, "Wrong size on JackalVehicle_Athena_C_ShouldDestroyProp_");
static_assert(offsetof(JackalVehicle_Athena_C_ShouldDestroyProp_, HitNormal) == 0x000000, "Member 'JackalVehicle_Athena_C_ShouldDestroyProp_::HitNormal' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ShouldDestroyProp_, ReturnValue) == 0x00000C, "Member 'JackalVehicle_Athena_C_ShouldDestroyProp_::ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ShouldDestroyProp_, CallFunc_GetPreviousLinearVelocity_ReturnValue) == 0x000010, "Member 'JackalVehicle_Athena_C_ShouldDestroyProp_::CallFunc_GetPreviousLinearVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ShouldDestroyProp_, CallFunc_Normal_ReturnValue) == 0x00001C, "Member 'JackalVehicle_Athena_C_ShouldDestroyProp_::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ShouldDestroyProp_, CallFunc_GetPreviousForwardSpeedKmh_ReturnValue) == 0x000028, "Member 'JackalVehicle_Athena_C_ShouldDestroyProp_::CallFunc_GetPreviousForwardSpeedKmh_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ShouldDestroyProp_, CallFunc_Dot_VectorVector_ReturnValue) == 0x00002C, "Member 'JackalVehicle_Athena_C_ShouldDestroyProp_::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ShouldDestroyProp_, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000030, "Member 'JackalVehicle_Athena_C_ShouldDestroyProp_::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ShouldDestroyProp_, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000031, "Member 'JackalVehicle_Athena_C_ShouldDestroyProp_::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ShouldDestroyProp_, CallFunc_BooleanAND_ReturnValue) == 0x000032, "Member 'JackalVehicle_Athena_C_ShouldDestroyProp_::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ShouldDestroyProp_, CallFunc_BooleanAND_ReturnValue1) == 0x000033, "Member 'JackalVehicle_Athena_C_ShouldDestroyProp_::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");

// Function JackalVehicle_Athena.JackalVehicle_Athena_C.ShouldBump
// 0x002C (0x002C - 0x0000)
struct JackalVehicle_Athena_C_ShouldBump final
{
public:
	struct FVector                                Hit_Normal;                                        // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Bump;                                              // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ContainsPlayers_ReturnValue;              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(JackalVehicle_Athena_C_ShouldBump) == 0x000004, "Wrong alignment on JackalVehicle_Athena_C_ShouldBump");
static_assert(sizeof(JackalVehicle_Athena_C_ShouldBump) == 0x00002C, "Wrong size on JackalVehicle_Athena_C_ShouldBump");
static_assert(offsetof(JackalVehicle_Athena_C_ShouldBump, Hit_Normal) == 0x000000, "Member 'JackalVehicle_Athena_C_ShouldBump::Hit_Normal' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ShouldBump, Bump) == 0x00000C, "Member 'JackalVehicle_Athena_C_ShouldBump::Bump' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ShouldBump, CallFunc_ContainsPlayers_ReturnValue) == 0x00000D, "Member 'JackalVehicle_Athena_C_ShouldBump::CallFunc_ContainsPlayers_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ShouldBump, CallFunc_GetActorUpVector_ReturnValue) == 0x000010, "Member 'JackalVehicle_Athena_C_ShouldBump::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ShouldBump, CallFunc_Not_PreBool_ReturnValue) == 0x00001C, "Member 'JackalVehicle_Athena_C_ShouldBump::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ShouldBump, CallFunc_Dot_VectorVector_ReturnValue) == 0x000020, "Member 'JackalVehicle_Athena_C_ShouldBump::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ShouldBump, CallFunc_Abs_ReturnValue) == 0x000024, "Member 'JackalVehicle_Athena_C_ShouldBump::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ShouldBump, CallFunc_Less_FloatFloat_ReturnValue) == 0x000028, "Member 'JackalVehicle_Athena_C_ShouldBump::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_ShouldBump, CallFunc_BooleanAND_ReturnValue) == 0x000029, "Member 'JackalVehicle_Athena_C_ShouldBump::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function JackalVehicle_Athena.JackalVehicle_Athena_C.GetMaxAudibleDistance
// 0x0008 (0x0008 - 0x0000)
struct JackalVehicle_Athena_C_GetMaxAudibleDistance final
{
public:
	float                                         Max_Distance;                                      // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(JackalVehicle_Athena_C_GetMaxAudibleDistance) == 0x000004, "Wrong alignment on JackalVehicle_Athena_C_GetMaxAudibleDistance");
static_assert(sizeof(JackalVehicle_Athena_C_GetMaxAudibleDistance) == 0x000008, "Wrong size on JackalVehicle_Athena_C_GetMaxAudibleDistance");
static_assert(offsetof(JackalVehicle_Athena_C_GetMaxAudibleDistance, Max_Distance) == 0x000000, "Member 'JackalVehicle_Athena_C_GetMaxAudibleDistance::Max_Distance' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_GetMaxAudibleDistance, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'JackalVehicle_Athena_C_GetMaxAudibleDistance::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function JackalVehicle_Athena.JackalVehicle_Athena_C.GetIconPlacement
// 0x0030 (0x0030 - 0x0000)
struct JackalVehicle_Athena_C_GetIconPlacement final
{
public:
	class AActor*                                 SelfActor;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OutLocation;                                       // 0x0008(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OutExtents;                                        // 0x0014(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCenterOfMass_ReturnValue;              // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JackalVehicle_Athena_C_GetIconPlacement) == 0x000008, "Wrong alignment on JackalVehicle_Athena_C_GetIconPlacement");
static_assert(sizeof(JackalVehicle_Athena_C_GetIconPlacement) == 0x000030, "Wrong size on JackalVehicle_Athena_C_GetIconPlacement");
static_assert(offsetof(JackalVehicle_Athena_C_GetIconPlacement, SelfActor) == 0x000000, "Member 'JackalVehicle_Athena_C_GetIconPlacement::SelfActor' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_GetIconPlacement, OutLocation) == 0x000008, "Member 'JackalVehicle_Athena_C_GetIconPlacement::OutLocation' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_GetIconPlacement, OutExtents) == 0x000014, "Member 'JackalVehicle_Athena_C_GetIconPlacement::OutExtents' has a wrong offset!");
static_assert(offsetof(JackalVehicle_Athena_C_GetIconPlacement, CallFunc_GetCenterOfMass_ReturnValue) == 0x000020, "Member 'JackalVehicle_Athena_C_GetIconPlacement::CallFunc_GetCenterOfMass_ReturnValue' has a wrong offset!");

}

