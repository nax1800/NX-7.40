#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GCL_PunchPack_Jump_Charge

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function GCL_PunchPack_Jump_Charge.GCL_PunchPack_Jump_Charge_C.ExecuteUbergraph_GCL_PunchPack_Jump_Charge
// 0x0030 (0x0030 - 0x0000)
struct GCL_PunchPack_Jump_Charge_C_ExecuteUbergraph_GCL_PunchPack_Jump_Charge final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable; // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Stop;                           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCL_PunchPack_Jump_Charge_C_ExecuteUbergraph_GCL_PunchPack_Jump_Charge) == 0x000008, "Wrong alignment on GCL_PunchPack_Jump_Charge_C_ExecuteUbergraph_GCL_PunchPack_Jump_Charge");
static_assert(sizeof(GCL_PunchPack_Jump_Charge_C_ExecuteUbergraph_GCL_PunchPack_Jump_Charge) == 0x000030, "Wrong size on GCL_PunchPack_Jump_Charge_C_ExecuteUbergraph_GCL_PunchPack_Jump_Charge");
static_assert(offsetof(GCL_PunchPack_Jump_Charge_C_ExecuteUbergraph_GCL_PunchPack_Jump_Charge, EntryPoint) == 0x000000, "Member 'GCL_PunchPack_Jump_Charge_C_ExecuteUbergraph_GCL_PunchPack_Jump_Charge::EntryPoint' has a wrong offset!");
static_assert(offsetof(GCL_PunchPack_Jump_Charge_C_ExecuteUbergraph_GCL_PunchPack_Jump_Charge, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable) == 0x000004, "Member 'GCL_PunchPack_Jump_Charge_C_ExecuteUbergraph_GCL_PunchPack_Jump_Charge::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable' has a wrong offset!");
static_assert(offsetof(GCL_PunchPack_Jump_Charge_C_ExecuteUbergraph_GCL_PunchPack_Jump_Charge, Temp_bool_Has_Been_Initd_Variable) == 0x000005, "Member 'GCL_PunchPack_Jump_Charge_C_ExecuteUbergraph_GCL_PunchPack_Jump_Charge::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(GCL_PunchPack_Jump_Charge_C_ExecuteUbergraph_GCL_PunchPack_Jump_Charge, Temp_bool_IsClosed_Variable) == 0x000006, "Member 'GCL_PunchPack_Jump_Charge_C_ExecuteUbergraph_GCL_PunchPack_Jump_Charge::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(GCL_PunchPack_Jump_Charge_C_ExecuteUbergraph_GCL_PunchPack_Jump_Charge, K2Node_Event_EndPlayReason) == 0x000007, "Member 'GCL_PunchPack_Jump_Charge_C_ExecuteUbergraph_GCL_PunchPack_Jump_Charge::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(GCL_PunchPack_Jump_Charge_C_ExecuteUbergraph_GCL_PunchPack_Jump_Charge, K2Node_CustomEvent_Stop) == 0x000008, "Member 'GCL_PunchPack_Jump_Charge_C_ExecuteUbergraph_GCL_PunchPack_Jump_Charge::K2Node_CustomEvent_Stop' has a wrong offset!");
static_assert(offsetof(GCL_PunchPack_Jump_Charge_C_ExecuteUbergraph_GCL_PunchPack_Jump_Charge, CallFunc_SpawnSoundAttached_ReturnValue) == 0x000010, "Member 'GCL_PunchPack_Jump_Charge_C_ExecuteUbergraph_GCL_PunchPack_Jump_Charge::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCL_PunchPack_Jump_Charge_C_ExecuteUbergraph_GCL_PunchPack_Jump_Charge, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'GCL_PunchPack_Jump_Charge_C_ExecuteUbergraph_GCL_PunchPack_Jump_Charge::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCL_PunchPack_Jump_Charge_C_ExecuteUbergraph_GCL_PunchPack_Jump_Charge, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x000028, "Member 'GCL_PunchPack_Jump_Charge_C_ExecuteUbergraph_GCL_PunchPack_Jump_Charge::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");

// Function GCL_PunchPack_Jump_Charge.GCL_PunchPack_Jump_Charge_C.ChargeDelay
// 0x0001 (0x0001 - 0x0000)
struct GCL_PunchPack_Jump_Charge_C_ChargeDelay final
{
public:
	bool                                          Stop;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GCL_PunchPack_Jump_Charge_C_ChargeDelay) == 0x000001, "Wrong alignment on GCL_PunchPack_Jump_Charge_C_ChargeDelay");
static_assert(sizeof(GCL_PunchPack_Jump_Charge_C_ChargeDelay) == 0x000001, "Wrong size on GCL_PunchPack_Jump_Charge_C_ChargeDelay");
static_assert(offsetof(GCL_PunchPack_Jump_Charge_C_ChargeDelay, Stop) == 0x000000, "Member 'GCL_PunchPack_Jump_Charge_C_ChargeDelay::Stop' has a wrong offset!");

// Function GCL_PunchPack_Jump_Charge.GCL_PunchPack_Jump_Charge_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct GCL_PunchPack_Jump_Charge_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCL_PunchPack_Jump_Charge_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on GCL_PunchPack_Jump_Charge_C_ReceiveEndPlay");
static_assert(sizeof(GCL_PunchPack_Jump_Charge_C_ReceiveEndPlay) == 0x000001, "Wrong size on GCL_PunchPack_Jump_Charge_C_ReceiveEndPlay");
static_assert(offsetof(GCL_PunchPack_Jump_Charge_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'GCL_PunchPack_Jump_Charge_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function GCL_PunchPack_Jump_Charge.GCL_PunchPack_Jump_Charge_C.OnRemove
// 0x00C8 (0x00C8 - 0x0000)
struct GCL_PunchPack_Jump_Charge_C_OnRemove final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00B8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x00C0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GCL_PunchPack_Jump_Charge_C_OnRemove) == 0x000008, "Wrong alignment on GCL_PunchPack_Jump_Charge_C_OnRemove");
static_assert(sizeof(GCL_PunchPack_Jump_Charge_C_OnRemove) == 0x0000C8, "Wrong size on GCL_PunchPack_Jump_Charge_C_OnRemove");
static_assert(offsetof(GCL_PunchPack_Jump_Charge_C_OnRemove, MyTarget) == 0x000000, "Member 'GCL_PunchPack_Jump_Charge_C_OnRemove::MyTarget' has a wrong offset!");
static_assert(offsetof(GCL_PunchPack_Jump_Charge_C_OnRemove, Parameters) == 0x000008, "Member 'GCL_PunchPack_Jump_Charge_C_OnRemove::Parameters' has a wrong offset!");
static_assert(offsetof(GCL_PunchPack_Jump_Charge_C_OnRemove, ReturnValue) == 0x0000C0, "Member 'GCL_PunchPack_Jump_Charge_C_OnRemove::ReturnValue' has a wrong offset!");

// Function GCL_PunchPack_Jump_Charge.GCL_PunchPack_Jump_Charge_C.WhileActive
// 0x00D8 (0x00D8 - 0x0000)
struct GCL_PunchPack_Jump_Charge_C_WhileActive final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00B8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x00C0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawnAthena*                  K2Node_DynamicCast_AsFort_Player_Pawn_Athena;      // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GCL_PunchPack_Jump_Charge_C_WhileActive) == 0x000008, "Wrong alignment on GCL_PunchPack_Jump_Charge_C_WhileActive");
static_assert(sizeof(GCL_PunchPack_Jump_Charge_C_WhileActive) == 0x0000D8, "Wrong size on GCL_PunchPack_Jump_Charge_C_WhileActive");
static_assert(offsetof(GCL_PunchPack_Jump_Charge_C_WhileActive, MyTarget) == 0x000000, "Member 'GCL_PunchPack_Jump_Charge_C_WhileActive::MyTarget' has a wrong offset!");
static_assert(offsetof(GCL_PunchPack_Jump_Charge_C_WhileActive, Parameters) == 0x000008, "Member 'GCL_PunchPack_Jump_Charge_C_WhileActive::Parameters' has a wrong offset!");
static_assert(offsetof(GCL_PunchPack_Jump_Charge_C_WhileActive, ReturnValue) == 0x0000C0, "Member 'GCL_PunchPack_Jump_Charge_C_WhileActive::ReturnValue' has a wrong offset!");
static_assert(offsetof(GCL_PunchPack_Jump_Charge_C_WhileActive, K2Node_DynamicCast_AsFort_Player_Pawn_Athena) == 0x0000C8, "Member 'GCL_PunchPack_Jump_Charge_C_WhileActive::K2Node_DynamicCast_AsFort_Player_Pawn_Athena' has a wrong offset!");
static_assert(offsetof(GCL_PunchPack_Jump_Charge_C_WhileActive, K2Node_DynamicCast_bSuccess) == 0x0000D0, "Member 'GCL_PunchPack_Jump_Charge_C_WhileActive::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function GCL_PunchPack_Jump_Charge.GCL_PunchPack_Jump_Charge_C.OnStartParticleSystemSpawned
// 0x00C0 (0x00C0 - 0x0000)
struct GCL_PunchPack_Jump_Charge_C_OnStartParticleSystemSpawned final
{
public:
	class UParticleSystemComponent*               SpawnedParticleSysComponent;                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00B8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(GCL_PunchPack_Jump_Charge_C_OnStartParticleSystemSpawned) == 0x000008, "Wrong alignment on GCL_PunchPack_Jump_Charge_C_OnStartParticleSystemSpawned");
static_assert(sizeof(GCL_PunchPack_Jump_Charge_C_OnStartParticleSystemSpawned) == 0x0000C0, "Wrong size on GCL_PunchPack_Jump_Charge_C_OnStartParticleSystemSpawned");
static_assert(offsetof(GCL_PunchPack_Jump_Charge_C_OnStartParticleSystemSpawned, SpawnedParticleSysComponent) == 0x000000, "Member 'GCL_PunchPack_Jump_Charge_C_OnStartParticleSystemSpawned::SpawnedParticleSysComponent' has a wrong offset!");
static_assert(offsetof(GCL_PunchPack_Jump_Charge_C_OnStartParticleSystemSpawned, Parameters) == 0x000008, "Member 'GCL_PunchPack_Jump_Charge_C_OnStartParticleSystemSpawned::Parameters' has a wrong offset!");

// Function GCL_PunchPack_Jump_Charge.GCL_PunchPack_Jump_Charge_C.OnWhileActiveParticleSystemDeactivate
// 0x00C0 (0x00C0 - 0x0000)
struct GCL_PunchPack_Jump_Charge_C_OnWhileActiveParticleSystemDeactivate final
{
public:
	class UParticleSystemComponent*               WhileActiveParticleSysComponent;                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00B8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(GCL_PunchPack_Jump_Charge_C_OnWhileActiveParticleSystemDeactivate) == 0x000008, "Wrong alignment on GCL_PunchPack_Jump_Charge_C_OnWhileActiveParticleSystemDeactivate");
static_assert(sizeof(GCL_PunchPack_Jump_Charge_C_OnWhileActiveParticleSystemDeactivate) == 0x0000C0, "Wrong size on GCL_PunchPack_Jump_Charge_C_OnWhileActiveParticleSystemDeactivate");
static_assert(offsetof(GCL_PunchPack_Jump_Charge_C_OnWhileActiveParticleSystemDeactivate, WhileActiveParticleSysComponent) == 0x000000, "Member 'GCL_PunchPack_Jump_Charge_C_OnWhileActiveParticleSystemDeactivate::WhileActiveParticleSysComponent' has a wrong offset!");
static_assert(offsetof(GCL_PunchPack_Jump_Charge_C_OnWhileActiveParticleSystemDeactivate, Parameters) == 0x000008, "Member 'GCL_PunchPack_Jump_Charge_C_OnWhileActiveParticleSystemDeactivate::Parameters' has a wrong offset!");

}

