#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SquadSlotItemPickerTileButton

#include "Basic.hpp"

#include "FortniteUI_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK::Params
{

// Function SquadSlotItemPickerTileButton.SquadSlotItemPickerTileButton_C.ExecuteUbergraph_SquadSlotItemPickerTileButton
// 0x0028 (0x0028 - 0x0000)
struct SquadSlotItemPickerTileButton_C_ExecuteUbergraph_SquadSlotItemPickerTileButton final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Event_ListItemObject;                       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHomebaseSquadSlotId                   K2Node_Event_SquadSlotId;                          // 0x0010(0x000C)(ConstParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNullItem_Is_Null_Item;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F[0x1];                                       // 0x001F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SquadSlotItemPickerTileButton_C_ExecuteUbergraph_SquadSlotItemPickerTileButton) == 0x000008, "Wrong alignment on SquadSlotItemPickerTileButton_C_ExecuteUbergraph_SquadSlotItemPickerTileButton");
static_assert(sizeof(SquadSlotItemPickerTileButton_C_ExecuteUbergraph_SquadSlotItemPickerTileButton) == 0x000028, "Wrong size on SquadSlotItemPickerTileButton_C_ExecuteUbergraph_SquadSlotItemPickerTileButton");
static_assert(offsetof(SquadSlotItemPickerTileButton_C_ExecuteUbergraph_SquadSlotItemPickerTileButton, EntryPoint) == 0x000000, "Member 'SquadSlotItemPickerTileButton_C_ExecuteUbergraph_SquadSlotItemPickerTileButton::EntryPoint' has a wrong offset!");
static_assert(offsetof(SquadSlotItemPickerTileButton_C_ExecuteUbergraph_SquadSlotItemPickerTileButton, K2Node_Event_ListItemObject) == 0x000008, "Member 'SquadSlotItemPickerTileButton_C_ExecuteUbergraph_SquadSlotItemPickerTileButton::K2Node_Event_ListItemObject' has a wrong offset!");
static_assert(offsetof(SquadSlotItemPickerTileButton_C_ExecuteUbergraph_SquadSlotItemPickerTileButton, K2Node_Event_SquadSlotId) == 0x000010, "Member 'SquadSlotItemPickerTileButton_C_ExecuteUbergraph_SquadSlotItemPickerTileButton::K2Node_Event_SquadSlotId' has a wrong offset!");
static_assert(offsetof(SquadSlotItemPickerTileButton_C_ExecuteUbergraph_SquadSlotItemPickerTileButton, CallFunc_IsNullItem_Is_Null_Item) == 0x00001C, "Member 'SquadSlotItemPickerTileButton_C_ExecuteUbergraph_SquadSlotItemPickerTileButton::CallFunc_IsNullItem_Is_Null_Item' has a wrong offset!");
static_assert(offsetof(SquadSlotItemPickerTileButton_C_ExecuteUbergraph_SquadSlotItemPickerTileButton, CallFunc_NotEqual_NameName_ReturnValue) == 0x00001D, "Member 'SquadSlotItemPickerTileButton_C_ExecuteUbergraph_SquadSlotItemPickerTileButton::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadSlotItemPickerTileButton_C_ExecuteUbergraph_SquadSlotItemPickerTileButton, Temp_bool_Variable) == 0x00001E, "Member 'SquadSlotItemPickerTileButton_C_ExecuteUbergraph_SquadSlotItemPickerTileButton::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(SquadSlotItemPickerTileButton_C_ExecuteUbergraph_SquadSlotItemPickerTileButton, K2Node_Select_Default) == 0x000020, "Member 'SquadSlotItemPickerTileButton_C_ExecuteUbergraph_SquadSlotItemPickerTileButton::K2Node_Select_Default' has a wrong offset!");

// Function SquadSlotItemPickerTileButton.SquadSlotItemPickerTileButton_C.HandleItemSlottedToDifferentSquad
// 0x000C (0x000C - 0x0000)
struct SquadSlotItemPickerTileButton_C_HandleItemSlottedToDifferentSquad final
{
public:
	struct FHomebaseSquadSlotId                   SquadSlotId;                                       // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SquadSlotItemPickerTileButton_C_HandleItemSlottedToDifferentSquad) == 0x000004, "Wrong alignment on SquadSlotItemPickerTileButton_C_HandleItemSlottedToDifferentSquad");
static_assert(sizeof(SquadSlotItemPickerTileButton_C_HandleItemSlottedToDifferentSquad) == 0x00000C, "Wrong size on SquadSlotItemPickerTileButton_C_HandleItemSlottedToDifferentSquad");
static_assert(offsetof(SquadSlotItemPickerTileButton_C_HandleItemSlottedToDifferentSquad, SquadSlotId) == 0x000000, "Member 'SquadSlotItemPickerTileButton_C_HandleItemSlottedToDifferentSquad::SquadSlotId' has a wrong offset!");

// Function SquadSlotItemPickerTileButton.SquadSlotItemPickerTileButton_C.OnListItemObjectSet
// 0x0008 (0x0008 - 0x0000)
struct SquadSlotItemPickerTileButton_C_OnListItemObjectSet final
{
public:
	class UObject*                                ListItemObject;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SquadSlotItemPickerTileButton_C_OnListItemObjectSet) == 0x000008, "Wrong alignment on SquadSlotItemPickerTileButton_C_OnListItemObjectSet");
static_assert(sizeof(SquadSlotItemPickerTileButton_C_OnListItemObjectSet) == 0x000008, "Wrong size on SquadSlotItemPickerTileButton_C_OnListItemObjectSet");
static_assert(offsetof(SquadSlotItemPickerTileButton_C_OnListItemObjectSet, ListItemObject) == 0x000000, "Member 'SquadSlotItemPickerTileButton_C_OnListItemObjectSet::ListItemObject' has a wrong offset!");

// Function SquadSlotItemPickerTileButton.SquadSlotItemPickerTileButton_C.UpdateOverlays
// 0x0018 (0x0018 - 0x0000)
struct SquadSlotItemPickerTileButton_C_UpdateOverlays final
{
public:
	TArray<EFortSquadSlottingRestrictionReason>   CallFunc_GetSlottingRestrictionReasons_ReturnValue; // 0x0000(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SquadSlotItemPickerTileButton_C_UpdateOverlays) == 0x000008, "Wrong alignment on SquadSlotItemPickerTileButton_C_UpdateOverlays");
static_assert(sizeof(SquadSlotItemPickerTileButton_C_UpdateOverlays) == 0x000018, "Wrong size on SquadSlotItemPickerTileButton_C_UpdateOverlays");
static_assert(offsetof(SquadSlotItemPickerTileButton_C_UpdateOverlays, CallFunc_GetSlottingRestrictionReasons_ReturnValue) == 0x000000, "Member 'SquadSlotItemPickerTileButton_C_UpdateOverlays::CallFunc_GetSlottingRestrictionReasons_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadSlotItemPickerTileButton_C_UpdateOverlays, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'SquadSlotItemPickerTileButton_C_UpdateOverlays::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(SquadSlotItemPickerTileButton_C_UpdateOverlays, CallFunc_Greater_IntInt_ReturnValue) == 0x000014, "Member 'SquadSlotItemPickerTileButton_C_UpdateOverlays::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

}

