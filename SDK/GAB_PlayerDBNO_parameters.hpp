#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GAB_PlayerDBNO

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function GAB_PlayerDBNO.GAB_PlayerDBNO_C.ExecuteUbergraph_GAB_PlayerDBNO
// 0x0320 (0x0320 - 0x0000)
struct GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData;                     // 0x0008(0x0020)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag;                 // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate;              // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0040(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayAbilityTargetDataHandle       Temp_struct_Variable1;                             // 0x0048(0x0020)()
	bool                                          Temp_bool_Variable;                                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x2];                                       // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_Event_EventData;                            // 0x0078(0x00A8)(ConstParm)
	class UFortAbilityTask_PlayMontageWaitTarget* CallFunc_PlayMontageWaitTarget_ReturnValue;        // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData1;                    // 0x0138(0x0020)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag1;                // 0x0158(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16A[0x6];                                      // 0x016A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEffectSpecHandle              CallFunc_MakeOutgoingGameplayEffectSpec_ReturnValue; // 0x0170(0x0010)()
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue1; // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectSpecHandle              CallFunc_AssignTagSetByCallerMagnitude_ReturnValue; // 0x0188(0x0010)()
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface; // 0x0198(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A9[0x3];                                      // 0x01A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_K2_ApplyGameplayEffectSpecToOwner_ReturnValue; // 0x01AC(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayTag>                   CallFunc_Map_Keys_Keys;                            // 0x01B8(0x0010)(ZeroConstructor, ReferenceParm)
	struct FGameplayTag                           CallFunc_Array_Get_Item;                           // 0x01C8(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FFortPlayerPawnStats                   CallFunc_GetDataTableRowFromName_OutRow;           // 0x01D0(0x00C8)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0299(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29A[0x2];                                      // 0x029A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Map_Find_Value;                           // 0x029C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x02A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A6[0x2];                                      // 0x02A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate1;             // 0x02B0(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C1[0x3];                                      // 0x02C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C9[0x7];                                      // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue2; // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData2;                    // 0x02D8(0x0020)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag2;                // 0x02F8(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn1;            // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_309[0x3];                                      // 0x0309(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate2;             // 0x030C(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO) == 0x000008, "Wrong alignment on GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO");
static_assert(sizeof(GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO) == 0x000320, "Wrong size on GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO");
static_assert(offsetof(GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO, EntryPoint) == 0x000000, "Member 'GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO::EntryPoint' has a wrong offset!");
static_assert(offsetof(GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO, K2Node_CustomEvent_TargetData) == 0x000008, "Member 'GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO::K2Node_CustomEvent_TargetData' has a wrong offset!");
static_assert(offsetof(GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO, K2Node_CustomEvent_ApplicationTag) == 0x000028, "Member 'GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO::K2Node_CustomEvent_ApplicationTag' has a wrong offset!");
static_assert(offsetof(GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO, K2Node_CreateDelegate_OutputDelegate) == 0x000030, "Member 'GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO, Temp_struct_Variable) == 0x000040, "Member 'GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO, Temp_struct_Variable1) == 0x000048, "Member 'GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO::Temp_struct_Variable1' has a wrong offset!");
static_assert(offsetof(GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO, Temp_bool_Variable) == 0x000068, "Member 'GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO, Temp_bool_True_if_break_was_hit_Variable) == 0x000069, "Member 'GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO, Temp_int_Array_Index_Variable) == 0x00006C, "Member 'GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO, CallFunc_Not_PreBool_ReturnValue) == 0x000070, "Member 'GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO, K2Node_Event_EventData) == 0x000078, "Member 'GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO::K2Node_Event_EventData' has a wrong offset!");
static_assert(offsetof(GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO, CallFunc_PlayMontageWaitTarget_ReturnValue) == 0x000120, "Member 'GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO::CallFunc_PlayMontageWaitTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO, CallFunc_IsValid_ReturnValue) == 0x000128, "Member 'GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000130, "Member 'GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO, K2Node_CustomEvent_TargetData1) == 0x000138, "Member 'GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO::K2Node_CustomEvent_TargetData1' has a wrong offset!");
static_assert(offsetof(GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO, K2Node_CustomEvent_ApplicationTag1) == 0x000158, "Member 'GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO::K2Node_CustomEvent_ApplicationTag1' has a wrong offset!");
static_assert(offsetof(GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x000160, "Member 'GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO, K2Node_DynamicCast_bSuccess) == 0x000168, "Member 'GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO, K2Node_Event_bWasCancelled) == 0x000169, "Member 'GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO, CallFunc_MakeOutgoingGameplayEffectSpec_ReturnValue) == 0x000170, "Member 'GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO::CallFunc_MakeOutgoingGameplayEffectSpec_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO, CallFunc_GetAvatarActorFromActorInfo_ReturnValue1) == 0x000180, "Member 'GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO::CallFunc_GetAvatarActorFromActorInfo_ReturnValue1' has a wrong offset!");
static_assert(offsetof(GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO, CallFunc_AssignTagSetByCallerMagnitude_ReturnValue) == 0x000188, "Member 'GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO::CallFunc_AssignTagSetByCallerMagnitude_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO, K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface) == 0x000198, "Member 'GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO::K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface' has a wrong offset!");
static_assert(offsetof(GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO, K2Node_DynamicCast_bSuccess1) == 0x0001A8, "Member 'GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO, CallFunc_K2_ApplyGameplayEffectSpecToOwner_ReturnValue) == 0x0001AC, "Member 'GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO::CallFunc_K2_ApplyGameplayEffectSpecToOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO, CallFunc_Map_Keys_Keys) == 0x0001B8, "Member 'GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO, CallFunc_Array_Get_Item) == 0x0001C8, "Member 'GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO, CallFunc_GetDataTableRowFromName_OutRow) == 0x0001D0, "Member 'GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000298, "Member 'GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000299, "Member 'GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO, CallFunc_Map_Find_Value) == 0x00029C, "Member 'GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO, CallFunc_Map_Find_ReturnValue) == 0x0002A4, "Member 'GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO, CallFunc_BooleanAND_ReturnValue) == 0x0002A5, "Member 'GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO, CallFunc_Array_Length_ReturnValue) == 0x0002A8, "Member 'GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO, Temp_int_Loop_Counter_Variable) == 0x0002AC, "Member 'GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO, K2Node_CreateDelegate_OutputDelegate1) == 0x0002B0, "Member 'GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO, CallFunc_Less_IntInt_ReturnValue) == 0x0002C0, "Member 'GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO, CallFunc_Add_IntInt_ReturnValue) == 0x0002C4, "Member 'GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO, CallFunc_BooleanAND_ReturnValue1) == 0x0002C8, "Member 'GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO, CallFunc_GetAvatarActorFromActorInfo_ReturnValue2) == 0x0002D0, "Member 'GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO::CallFunc_GetAvatarActorFromActorInfo_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO, K2Node_CustomEvent_TargetData2) == 0x0002D8, "Member 'GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO::K2Node_CustomEvent_TargetData2' has a wrong offset!");
static_assert(offsetof(GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO, K2Node_CustomEvent_ApplicationTag2) == 0x0002F8, "Member 'GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO::K2Node_CustomEvent_ApplicationTag2' has a wrong offset!");
static_assert(offsetof(GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO, K2Node_DynamicCast_AsFort_Player_Pawn1) == 0x000300, "Member 'GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO::K2Node_DynamicCast_AsFort_Player_Pawn1' has a wrong offset!");
static_assert(offsetof(GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO, K2Node_DynamicCast_bSuccess2) == 0x000308, "Member 'GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO, K2Node_CreateDelegate_OutputDelegate2) == 0x00030C, "Member 'GAB_PlayerDBNO_C_ExecuteUbergraph_GAB_PlayerDBNO::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");

// Function GAB_PlayerDBNO.GAB_PlayerDBNO_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GAB_PlayerDBNO_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GAB_PlayerDBNO_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GAB_PlayerDBNO_C_K2_OnEndAbility");
static_assert(sizeof(GAB_PlayerDBNO_C_K2_OnEndAbility) == 0x000001, "Wrong size on GAB_PlayerDBNO_C_K2_OnEndAbility");
static_assert(offsetof(GAB_PlayerDBNO_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GAB_PlayerDBNO_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// Function GAB_PlayerDBNO.GAB_PlayerDBNO_C.K2_ActivateAbilityFromEvent
// 0x00A8 (0x00A8 - 0x0000)
struct GAB_PlayerDBNO_C_K2_ActivateAbilityFromEvent final
{
public:
	struct FGameplayEventData                     EventData;                                         // 0x0000(0x00A8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GAB_PlayerDBNO_C_K2_ActivateAbilityFromEvent) == 0x000008, "Wrong alignment on GAB_PlayerDBNO_C_K2_ActivateAbilityFromEvent");
static_assert(sizeof(GAB_PlayerDBNO_C_K2_ActivateAbilityFromEvent) == 0x0000A8, "Wrong size on GAB_PlayerDBNO_C_K2_ActivateAbilityFromEvent");
static_assert(offsetof(GAB_PlayerDBNO_C_K2_ActivateAbilityFromEvent, EventData) == 0x000000, "Member 'GAB_PlayerDBNO_C_K2_ActivateAbilityFromEvent::EventData' has a wrong offset!");

// Function GAB_PlayerDBNO.GAB_PlayerDBNO_C.Triggered_F61877974D2CED083195EF8A8CDA60C2
// 0x0028 (0x0028 - 0x0000)
struct GAB_PlayerDBNO_C_Triggered_F61877974D2CED083195EF8A8CDA60C2 final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GAB_PlayerDBNO_C_Triggered_F61877974D2CED083195EF8A8CDA60C2) == 0x000008, "Wrong alignment on GAB_PlayerDBNO_C_Triggered_F61877974D2CED083195EF8A8CDA60C2");
static_assert(sizeof(GAB_PlayerDBNO_C_Triggered_F61877974D2CED083195EF8A8CDA60C2) == 0x000028, "Wrong size on GAB_PlayerDBNO_C_Triggered_F61877974D2CED083195EF8A8CDA60C2");
static_assert(offsetof(GAB_PlayerDBNO_C_Triggered_F61877974D2CED083195EF8A8CDA60C2, TargetData) == 0x000000, "Member 'GAB_PlayerDBNO_C_Triggered_F61877974D2CED083195EF8A8CDA60C2::TargetData' has a wrong offset!");
static_assert(offsetof(GAB_PlayerDBNO_C_Triggered_F61877974D2CED083195EF8A8CDA60C2, ApplicationTag) == 0x000020, "Member 'GAB_PlayerDBNO_C_Triggered_F61877974D2CED083195EF8A8CDA60C2::ApplicationTag' has a wrong offset!");

// Function GAB_PlayerDBNO.GAB_PlayerDBNO_C.Cancelled_F61877974D2CED083195EF8A8CDA60C2
// 0x0028 (0x0028 - 0x0000)
struct GAB_PlayerDBNO_C_Cancelled_F61877974D2CED083195EF8A8CDA60C2 final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GAB_PlayerDBNO_C_Cancelled_F61877974D2CED083195EF8A8CDA60C2) == 0x000008, "Wrong alignment on GAB_PlayerDBNO_C_Cancelled_F61877974D2CED083195EF8A8CDA60C2");
static_assert(sizeof(GAB_PlayerDBNO_C_Cancelled_F61877974D2CED083195EF8A8CDA60C2) == 0x000028, "Wrong size on GAB_PlayerDBNO_C_Cancelled_F61877974D2CED083195EF8A8CDA60C2");
static_assert(offsetof(GAB_PlayerDBNO_C_Cancelled_F61877974D2CED083195EF8A8CDA60C2, TargetData) == 0x000000, "Member 'GAB_PlayerDBNO_C_Cancelled_F61877974D2CED083195EF8A8CDA60C2::TargetData' has a wrong offset!");
static_assert(offsetof(GAB_PlayerDBNO_C_Cancelled_F61877974D2CED083195EF8A8CDA60C2, ApplicationTag) == 0x000020, "Member 'GAB_PlayerDBNO_C_Cancelled_F61877974D2CED083195EF8A8CDA60C2::ApplicationTag' has a wrong offset!");

// Function GAB_PlayerDBNO.GAB_PlayerDBNO_C.Completed_F61877974D2CED083195EF8A8CDA60C2
// 0x0028 (0x0028 - 0x0000)
struct GAB_PlayerDBNO_C_Completed_F61877974D2CED083195EF8A8CDA60C2 final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GAB_PlayerDBNO_C_Completed_F61877974D2CED083195EF8A8CDA60C2) == 0x000008, "Wrong alignment on GAB_PlayerDBNO_C_Completed_F61877974D2CED083195EF8A8CDA60C2");
static_assert(sizeof(GAB_PlayerDBNO_C_Completed_F61877974D2CED083195EF8A8CDA60C2) == 0x000028, "Wrong size on GAB_PlayerDBNO_C_Completed_F61877974D2CED083195EF8A8CDA60C2");
static_assert(offsetof(GAB_PlayerDBNO_C_Completed_F61877974D2CED083195EF8A8CDA60C2, TargetData) == 0x000000, "Member 'GAB_PlayerDBNO_C_Completed_F61877974D2CED083195EF8A8CDA60C2::TargetData' has a wrong offset!");
static_assert(offsetof(GAB_PlayerDBNO_C_Completed_F61877974D2CED083195EF8A8CDA60C2, ApplicationTag) == 0x000020, "Member 'GAB_PlayerDBNO_C_Completed_F61877974D2CED083195EF8A8CDA60C2::ApplicationTag' has a wrong offset!");

// Function GAB_PlayerDBNO.GAB_PlayerDBNO_C.InitializeDeathHitDirection
// 0x0150 (0x0150 - 0x0000)
struct GAB_PlayerDBNO_C_InitializeDeathHitDirection final
{
public:
	struct FGameplayEventData                     EventHitData;                                      // 0x0000(0x00A8)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FVector                                CallFunc_GetImpulseData_ImpulseDirection;          // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetImpulseData_KnockbackMagnitude;        // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetImpulseData_KnockbackZAngle;           // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_EffectContextGetHitResult_ReturnValue;    // 0x00BC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0144(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GAB_PlayerDBNO_C_InitializeDeathHitDirection) == 0x000008, "Wrong alignment on GAB_PlayerDBNO_C_InitializeDeathHitDirection");
static_assert(sizeof(GAB_PlayerDBNO_C_InitializeDeathHitDirection) == 0x000150, "Wrong size on GAB_PlayerDBNO_C_InitializeDeathHitDirection");
static_assert(offsetof(GAB_PlayerDBNO_C_InitializeDeathHitDirection, EventHitData) == 0x000000, "Member 'GAB_PlayerDBNO_C_InitializeDeathHitDirection::EventHitData' has a wrong offset!");
static_assert(offsetof(GAB_PlayerDBNO_C_InitializeDeathHitDirection, CallFunc_GetImpulseData_ImpulseDirection) == 0x0000A8, "Member 'GAB_PlayerDBNO_C_InitializeDeathHitDirection::CallFunc_GetImpulseData_ImpulseDirection' has a wrong offset!");
static_assert(offsetof(GAB_PlayerDBNO_C_InitializeDeathHitDirection, CallFunc_GetImpulseData_KnockbackMagnitude) == 0x0000B4, "Member 'GAB_PlayerDBNO_C_InitializeDeathHitDirection::CallFunc_GetImpulseData_KnockbackMagnitude' has a wrong offset!");
static_assert(offsetof(GAB_PlayerDBNO_C_InitializeDeathHitDirection, CallFunc_GetImpulseData_KnockbackZAngle) == 0x0000B8, "Member 'GAB_PlayerDBNO_C_InitializeDeathHitDirection::CallFunc_GetImpulseData_KnockbackZAngle' has a wrong offset!");
static_assert(offsetof(GAB_PlayerDBNO_C_InitializeDeathHitDirection, CallFunc_EffectContextGetHitResult_ReturnValue) == 0x0000BC, "Member 'GAB_PlayerDBNO_C_InitializeDeathHitDirection::CallFunc_EffectContextGetHitResult_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_PlayerDBNO_C_InitializeDeathHitDirection, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000144, "Member 'GAB_PlayerDBNO_C_InitializeDeathHitDirection::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");

}

