#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BoostIndicator

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function BoostIndicator.BoostIndicator_C.ExecuteUbergraph_BoostIndicator
// 0x0004 (0x0004 - 0x0000)
struct BoostIndicator_C_ExecuteUbergraph_BoostIndicator final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BoostIndicator_C_ExecuteUbergraph_BoostIndicator) == 0x000004, "Wrong alignment on BoostIndicator_C_ExecuteUbergraph_BoostIndicator");
static_assert(sizeof(BoostIndicator_C_ExecuteUbergraph_BoostIndicator) == 0x000004, "Wrong size on BoostIndicator_C_ExecuteUbergraph_BoostIndicator");
static_assert(offsetof(BoostIndicator_C_ExecuteUbergraph_BoostIndicator, EntryPoint) == 0x000000, "Member 'BoostIndicator_C_ExecuteUbergraph_BoostIndicator::EntryPoint' has a wrong offset!");

// Function BoostIndicator.BoostIndicator_C.Update
// 0x0028 (0x0028 - 0x0000)
struct BoostIndicator_C_Update final
{
public:
	bool                                          HasTeammateBoost;                                  // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HasPersonalBoost;                                  // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HasRestBoost;                                      // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable1;                               // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable1;                               // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable2;                               // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable3;                               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable2;                               // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable4;                               // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable5;                               // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select1_Default;                            // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select2_Default;                            // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPartyMemberBoosted_Boosted;             // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UFortMcpContext*                        CallFunc_GetContext_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetRestXpBalance_ReturnValue;             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetXpBoostBalance_ReturnValue;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue1;              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BoostIndicator_C_Update) == 0x000008, "Wrong alignment on BoostIndicator_C_Update");
static_assert(sizeof(BoostIndicator_C_Update) == 0x000028, "Wrong size on BoostIndicator_C_Update");
static_assert(offsetof(BoostIndicator_C_Update, HasTeammateBoost) == 0x000000, "Member 'BoostIndicator_C_Update::HasTeammateBoost' has a wrong offset!");
static_assert(offsetof(BoostIndicator_C_Update, HasPersonalBoost) == 0x000001, "Member 'BoostIndicator_C_Update::HasPersonalBoost' has a wrong offset!");
static_assert(offsetof(BoostIndicator_C_Update, HasRestBoost) == 0x000002, "Member 'BoostIndicator_C_Update::HasRestBoost' has a wrong offset!");
static_assert(offsetof(BoostIndicator_C_Update, Temp_bool_Variable) == 0x000003, "Member 'BoostIndicator_C_Update::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BoostIndicator_C_Update, Temp_byte_Variable) == 0x000004, "Member 'BoostIndicator_C_Update::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BoostIndicator_C_Update, Temp_byte_Variable1) == 0x000005, "Member 'BoostIndicator_C_Update::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(BoostIndicator_C_Update, Temp_bool_Variable1) == 0x000006, "Member 'BoostIndicator_C_Update::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BoostIndicator_C_Update, Temp_byte_Variable2) == 0x000007, "Member 'BoostIndicator_C_Update::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(BoostIndicator_C_Update, Temp_byte_Variable3) == 0x000008, "Member 'BoostIndicator_C_Update::Temp_byte_Variable3' has a wrong offset!");
static_assert(offsetof(BoostIndicator_C_Update, Temp_bool_Variable2) == 0x000009, "Member 'BoostIndicator_C_Update::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(BoostIndicator_C_Update, Temp_byte_Variable4) == 0x00000A, "Member 'BoostIndicator_C_Update::Temp_byte_Variable4' has a wrong offset!");
static_assert(offsetof(BoostIndicator_C_Update, Temp_byte_Variable5) == 0x00000B, "Member 'BoostIndicator_C_Update::Temp_byte_Variable5' has a wrong offset!");
static_assert(offsetof(BoostIndicator_C_Update, K2Node_Select_Default) == 0x00000C, "Member 'BoostIndicator_C_Update::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BoostIndicator_C_Update, K2Node_Select1_Default) == 0x00000D, "Member 'BoostIndicator_C_Update::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(BoostIndicator_C_Update, K2Node_Select2_Default) == 0x00000E, "Member 'BoostIndicator_C_Update::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(BoostIndicator_C_Update, CallFunc_IsPartyMemberBoosted_Boosted) == 0x00000F, "Member 'BoostIndicator_C_Update::CallFunc_IsPartyMemberBoosted_Boosted' has a wrong offset!");
static_assert(offsetof(BoostIndicator_C_Update, CallFunc_GetContext_ReturnValue) == 0x000010, "Member 'BoostIndicator_C_Update::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(BoostIndicator_C_Update, CallFunc_GetRestXpBalance_ReturnValue) == 0x000018, "Member 'BoostIndicator_C_Update::CallFunc_GetRestXpBalance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BoostIndicator_C_Update, CallFunc_Greater_IntInt_ReturnValue) == 0x00001C, "Member 'BoostIndicator_C_Update::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BoostIndicator_C_Update, CallFunc_GetXpBoostBalance_ReturnValue) == 0x000020, "Member 'BoostIndicator_C_Update::CallFunc_GetXpBoostBalance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BoostIndicator_C_Update, CallFunc_Greater_IntInt_ReturnValue1) == 0x000024, "Member 'BoostIndicator_C_Update::CallFunc_Greater_IntInt_ReturnValue1' has a wrong offset!");

// Function BoostIndicator.BoostIndicator_C.IsPartyMemberBoosted
// 0x0248 (0x0248 - 0x0000)
struct BoostIndicator_C_IsPartyMemberBoosted final
{
public:
	bool                                          Boosted;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortPartyContext*                      CallFunc_GetContext_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortMcpContext*                        CallFunc_GetContext_ReturnValue1;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortUITeamInfo*                        CallFunc_GetLocalPlayerTeam_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFortTeamMemberInfo>            CallFunc_GetTeamMembers_TeamMembers;               // 0x0028(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortTeamMemberInfo                    CallFunc_Array_Get_Item;                           // 0x0040(0x0200)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocalPlayersUniqueID_ReturnValue;       // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BoostIndicator_C_IsPartyMemberBoosted) == 0x000008, "Wrong alignment on BoostIndicator_C_IsPartyMemberBoosted");
static_assert(sizeof(BoostIndicator_C_IsPartyMemberBoosted) == 0x000248, "Wrong size on BoostIndicator_C_IsPartyMemberBoosted");
static_assert(offsetof(BoostIndicator_C_IsPartyMemberBoosted, Boosted) == 0x000000, "Member 'BoostIndicator_C_IsPartyMemberBoosted::Boosted' has a wrong offset!");
static_assert(offsetof(BoostIndicator_C_IsPartyMemberBoosted, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BoostIndicator_C_IsPartyMemberBoosted::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BoostIndicator_C_IsPartyMemberBoosted, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BoostIndicator_C_IsPartyMemberBoosted::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BoostIndicator_C_IsPartyMemberBoosted, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BoostIndicator_C_IsPartyMemberBoosted::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BoostIndicator_C_IsPartyMemberBoosted, CallFunc_GetContext_ReturnValue) == 0x000010, "Member 'BoostIndicator_C_IsPartyMemberBoosted::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(BoostIndicator_C_IsPartyMemberBoosted, CallFunc_GetContext_ReturnValue1) == 0x000018, "Member 'BoostIndicator_C_IsPartyMemberBoosted::CallFunc_GetContext_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BoostIndicator_C_IsPartyMemberBoosted, CallFunc_GetLocalPlayerTeam_ReturnValue) == 0x000020, "Member 'BoostIndicator_C_IsPartyMemberBoosted::CallFunc_GetLocalPlayerTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BoostIndicator_C_IsPartyMemberBoosted, CallFunc_GetTeamMembers_TeamMembers) == 0x000028, "Member 'BoostIndicator_C_IsPartyMemberBoosted::CallFunc_GetTeamMembers_TeamMembers' has a wrong offset!");
static_assert(offsetof(BoostIndicator_C_IsPartyMemberBoosted, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BoostIndicator_C_IsPartyMemberBoosted::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BoostIndicator_C_IsPartyMemberBoosted, CallFunc_Array_Get_Item) == 0x000040, "Member 'BoostIndicator_C_IsPartyMemberBoosted::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BoostIndicator_C_IsPartyMemberBoosted, CallFunc_Less_IntInt_ReturnValue) == 0x000240, "Member 'BoostIndicator_C_IsPartyMemberBoosted::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BoostIndicator_C_IsPartyMemberBoosted, CallFunc_IsLocalPlayersUniqueID_ReturnValue) == 0x000241, "Member 'BoostIndicator_C_IsPartyMemberBoosted::CallFunc_IsLocalPlayersUniqueID_ReturnValue' has a wrong offset!");

}

