#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: QuestMiniTile

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "CommonInput_structs.hpp"


namespace SDK::Params
{

// Function QuestMiniTile.QuestMiniTile_C.HandleQuestTileHovered__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct QuestMiniTile_C_HandleQuestTileHovered__DelegateSignature final
{
public:
	class UFortQuestItemDefinition*               QuestItemDef;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestMiniTile_C_HandleQuestTileHovered__DelegateSignature) == 0x000008, "Wrong alignment on QuestMiniTile_C_HandleQuestTileHovered__DelegateSignature");
static_assert(sizeof(QuestMiniTile_C_HandleQuestTileHovered__DelegateSignature) == 0x000008, "Wrong size on QuestMiniTile_C_HandleQuestTileHovered__DelegateSignature");
static_assert(offsetof(QuestMiniTile_C_HandleQuestTileHovered__DelegateSignature, QuestItemDef) == 0x000000, "Member 'QuestMiniTile_C_HandleQuestTileHovered__DelegateSignature::QuestItemDef' has a wrong offset!");

// Function QuestMiniTile.QuestMiniTile_C.HandleQuestTileUnhovered__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct QuestMiniTile_C_HandleQuestTileUnhovered__DelegateSignature final
{
public:
	class UFortQuestItemDefinition*               QuestItemDef;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestMiniTile_C_HandleQuestTileUnhovered__DelegateSignature) == 0x000008, "Wrong alignment on QuestMiniTile_C_HandleQuestTileUnhovered__DelegateSignature");
static_assert(sizeof(QuestMiniTile_C_HandleQuestTileUnhovered__DelegateSignature) == 0x000008, "Wrong size on QuestMiniTile_C_HandleQuestTileUnhovered__DelegateSignature");
static_assert(offsetof(QuestMiniTile_C_HandleQuestTileUnhovered__DelegateSignature, QuestItemDef) == 0x000000, "Member 'QuestMiniTile_C_HandleQuestTileUnhovered__DelegateSignature::QuestItemDef' has a wrong offset!");

// Function QuestMiniTile.QuestMiniTile_C.ExecuteUbergraph_QuestMiniTile
// 0x0050 (0x0050 - 0x0000)
struct QuestMiniTile_C_ExecuteUbergraph_QuestMiniTile final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonInputSubsystem*                  CallFunc_GetContext_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButton*                          K2Node_ComponentBoundEvent_Button3;                // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButton*                          K2Node_ComponentBoundEvent_Button2;                // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonButton*                          K2Node_ComponentBoundEvent_Button1;                // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButton*                          K2Node_ComponentBoundEvent_Button;                 // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_Selected;               // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(QuestMiniTile_C_ExecuteUbergraph_QuestMiniTile) == 0x000008, "Wrong alignment on QuestMiniTile_C_ExecuteUbergraph_QuestMiniTile");
static_assert(sizeof(QuestMiniTile_C_ExecuteUbergraph_QuestMiniTile) == 0x000050, "Wrong size on QuestMiniTile_C_ExecuteUbergraph_QuestMiniTile");
static_assert(offsetof(QuestMiniTile_C_ExecuteUbergraph_QuestMiniTile, EntryPoint) == 0x000000, "Member 'QuestMiniTile_C_ExecuteUbergraph_QuestMiniTile::EntryPoint' has a wrong offset!");
static_assert(offsetof(QuestMiniTile_C_ExecuteUbergraph_QuestMiniTile, CallFunc_GetContext_ReturnValue) == 0x000008, "Member 'QuestMiniTile_C_ExecuteUbergraph_QuestMiniTile::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestMiniTile_C_ExecuteUbergraph_QuestMiniTile, CallFunc_GetCurrentInputType_ReturnValue) == 0x000010, "Member 'QuestMiniTile_C_ExecuteUbergraph_QuestMiniTile::CallFunc_GetCurrentInputType_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestMiniTile_C_ExecuteUbergraph_QuestMiniTile, K2Node_ComponentBoundEvent_Button3) == 0x000018, "Member 'QuestMiniTile_C_ExecuteUbergraph_QuestMiniTile::K2Node_ComponentBoundEvent_Button3' has a wrong offset!");
static_assert(offsetof(QuestMiniTile_C_ExecuteUbergraph_QuestMiniTile, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000020, "Member 'QuestMiniTile_C_ExecuteUbergraph_QuestMiniTile::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestMiniTile_C_ExecuteUbergraph_QuestMiniTile, K2Node_ComponentBoundEvent_Button2) == 0x000028, "Member 'QuestMiniTile_C_ExecuteUbergraph_QuestMiniTile::K2Node_ComponentBoundEvent_Button2' has a wrong offset!");
static_assert(offsetof(QuestMiniTile_C_ExecuteUbergraph_QuestMiniTile, K2Node_ComponentBoundEvent_Button1) == 0x000030, "Member 'QuestMiniTile_C_ExecuteUbergraph_QuestMiniTile::K2Node_ComponentBoundEvent_Button1' has a wrong offset!");
static_assert(offsetof(QuestMiniTile_C_ExecuteUbergraph_QuestMiniTile, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'QuestMiniTile_C_ExecuteUbergraph_QuestMiniTile::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestMiniTile_C_ExecuteUbergraph_QuestMiniTile, K2Node_Event_IsDesignTime) == 0x000039, "Member 'QuestMiniTile_C_ExecuteUbergraph_QuestMiniTile::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(QuestMiniTile_C_ExecuteUbergraph_QuestMiniTile, K2Node_ComponentBoundEvent_Button) == 0x000040, "Member 'QuestMiniTile_C_ExecuteUbergraph_QuestMiniTile::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(QuestMiniTile_C_ExecuteUbergraph_QuestMiniTile, K2Node_ComponentBoundEvent_Selected) == 0x000048, "Member 'QuestMiniTile_C_ExecuteUbergraph_QuestMiniTile::K2Node_ComponentBoundEvent_Selected' has a wrong offset!");

// Function QuestMiniTile.QuestMiniTile_C.BndEvt__ButtonQuest_K2Node_ComponentBoundEvent_4_CommonSelectedStateChanged__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct QuestMiniTile_C_BndEvt__ButtonQuest_K2Node_ComponentBoundEvent_4_CommonSelectedStateChanged__DelegateSignature final
{
public:
	class UCommonButton*                          Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Selected;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(QuestMiniTile_C_BndEvt__ButtonQuest_K2Node_ComponentBoundEvent_4_CommonSelectedStateChanged__DelegateSignature) == 0x000008, "Wrong alignment on QuestMiniTile_C_BndEvt__ButtonQuest_K2Node_ComponentBoundEvent_4_CommonSelectedStateChanged__DelegateSignature");
static_assert(sizeof(QuestMiniTile_C_BndEvt__ButtonQuest_K2Node_ComponentBoundEvent_4_CommonSelectedStateChanged__DelegateSignature) == 0x000010, "Wrong size on QuestMiniTile_C_BndEvt__ButtonQuest_K2Node_ComponentBoundEvent_4_CommonSelectedStateChanged__DelegateSignature");
static_assert(offsetof(QuestMiniTile_C_BndEvt__ButtonQuest_K2Node_ComponentBoundEvent_4_CommonSelectedStateChanged__DelegateSignature, Button) == 0x000000, "Member 'QuestMiniTile_C_BndEvt__ButtonQuest_K2Node_ComponentBoundEvent_4_CommonSelectedStateChanged__DelegateSignature::Button' has a wrong offset!");
static_assert(offsetof(QuestMiniTile_C_BndEvt__ButtonQuest_K2Node_ComponentBoundEvent_4_CommonSelectedStateChanged__DelegateSignature, Selected) == 0x000008, "Member 'QuestMiniTile_C_BndEvt__ButtonQuest_K2Node_ComponentBoundEvent_4_CommonSelectedStateChanged__DelegateSignature::Selected' has a wrong offset!");

// Function QuestMiniTile.QuestMiniTile_C.BndEvt__ButtonQuest_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct QuestMiniTile_C_BndEvt__ButtonQuest_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature final
{
public:
	class UCommonButton*                          Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestMiniTile_C_BndEvt__ButtonQuest_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on QuestMiniTile_C_BndEvt__ButtonQuest_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature");
static_assert(sizeof(QuestMiniTile_C_BndEvt__ButtonQuest_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong size on QuestMiniTile_C_BndEvt__ButtonQuest_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature");
static_assert(offsetof(QuestMiniTile_C_BndEvt__ButtonQuest_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature, Button) == 0x000000, "Member 'QuestMiniTile_C_BndEvt__ButtonQuest_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature::Button' has a wrong offset!");

// Function QuestMiniTile.QuestMiniTile_C.BndEvt__ButtonQuest_K2Node_ComponentBoundEvent_126_CommonButtonClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct QuestMiniTile_C_BndEvt__ButtonQuest_K2Node_ComponentBoundEvent_126_CommonButtonClicked__DelegateSignature final
{
public:
	class UCommonButton*                          Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestMiniTile_C_BndEvt__ButtonQuest_K2Node_ComponentBoundEvent_126_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on QuestMiniTile_C_BndEvt__ButtonQuest_K2Node_ComponentBoundEvent_126_CommonButtonClicked__DelegateSignature");
static_assert(sizeof(QuestMiniTile_C_BndEvt__ButtonQuest_K2Node_ComponentBoundEvent_126_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong size on QuestMiniTile_C_BndEvt__ButtonQuest_K2Node_ComponentBoundEvent_126_CommonButtonClicked__DelegateSignature");
static_assert(offsetof(QuestMiniTile_C_BndEvt__ButtonQuest_K2Node_ComponentBoundEvent_126_CommonButtonClicked__DelegateSignature, Button) == 0x000000, "Member 'QuestMiniTile_C_BndEvt__ButtonQuest_K2Node_ComponentBoundEvent_126_CommonButtonClicked__DelegateSignature::Button' has a wrong offset!");

// Function QuestMiniTile.QuestMiniTile_C.BndEvt__ButtonQuest_K2Node_ComponentBoundEvent_113_CommonButtonClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct QuestMiniTile_C_BndEvt__ButtonQuest_K2Node_ComponentBoundEvent_113_CommonButtonClicked__DelegateSignature final
{
public:
	class UCommonButton*                          Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestMiniTile_C_BndEvt__ButtonQuest_K2Node_ComponentBoundEvent_113_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on QuestMiniTile_C_BndEvt__ButtonQuest_K2Node_ComponentBoundEvent_113_CommonButtonClicked__DelegateSignature");
static_assert(sizeof(QuestMiniTile_C_BndEvt__ButtonQuest_K2Node_ComponentBoundEvent_113_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong size on QuestMiniTile_C_BndEvt__ButtonQuest_K2Node_ComponentBoundEvent_113_CommonButtonClicked__DelegateSignature");
static_assert(offsetof(QuestMiniTile_C_BndEvt__ButtonQuest_K2Node_ComponentBoundEvent_113_CommonButtonClicked__DelegateSignature, Button) == 0x000000, "Member 'QuestMiniTile_C_BndEvt__ButtonQuest_K2Node_ComponentBoundEvent_113_CommonButtonClicked__DelegateSignature::Button' has a wrong offset!");

// Function QuestMiniTile.QuestMiniTile_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct QuestMiniTile_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(QuestMiniTile_C_PreConstruct) == 0x000001, "Wrong alignment on QuestMiniTile_C_PreConstruct");
static_assert(sizeof(QuestMiniTile_C_PreConstruct) == 0x000001, "Wrong size on QuestMiniTile_C_PreConstruct");
static_assert(offsetof(QuestMiniTile_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'QuestMiniTile_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function QuestMiniTile.QuestMiniTile_C.Init
// 0x0060 (0x0060 - 0x0000)
struct QuestMiniTile_C_Init final
{
public:
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable1;                               // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              CallFunc_GetLargePreviewImage_ReturnValue;         // 0x0008(0x0028)(HasGetValueTypeHash)
	class FText                                   CallFunc_GetDisplayName_ReturnValue;               // 0x0030(0x0018)()
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(QuestMiniTile_C_Init) == 0x000008, "Wrong alignment on QuestMiniTile_C_Init");
static_assert(sizeof(QuestMiniTile_C_Init) == 0x000060, "Wrong size on QuestMiniTile_C_Init");
static_assert(offsetof(QuestMiniTile_C_Init, Temp_byte_Variable) == 0x000000, "Member 'QuestMiniTile_C_Init::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(QuestMiniTile_C_Init, Temp_byte_Variable1) == 0x000001, "Member 'QuestMiniTile_C_Init::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(QuestMiniTile_C_Init, Temp_bool_Variable) == 0x000002, "Member 'QuestMiniTile_C_Init::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(QuestMiniTile_C_Init, K2Node_Select_Default) == 0x000003, "Member 'QuestMiniTile_C_Init::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(QuestMiniTile_C_Init, CallFunc_GetLargePreviewImage_ReturnValue) == 0x000008, "Member 'QuestMiniTile_C_Init::CallFunc_GetLargePreviewImage_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestMiniTile_C_Init, CallFunc_GetDisplayName_ReturnValue) == 0x000030, "Member 'QuestMiniTile_C_Init::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestMiniTile_C_Init, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000048, "Member 'QuestMiniTile_C_Init::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestMiniTile_C_Init, K2Node_DynamicCast_AsTexture_2D) == 0x000050, "Member 'QuestMiniTile_C_Init::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(QuestMiniTile_C_Init, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'QuestMiniTile_C_Init::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function QuestMiniTile.QuestMiniTile_C.SetState
// 0x0058 (0x0058 - 0x0000)
struct QuestMiniTile_C_SetState final
{
public:
	class UFortQuestItem*                         InCurrentQuest;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          QuestFound;                                        // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItemDefinition*                    CallFunc_GetItemDefinitionBP_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationTimeRange_ReturnValue;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationTimeRange_ReturnValue1;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortQuestManager*                      CallFunc_GetQuestManager_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasCompletedQuest_ReturnValue;            // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortQuestItem*                         CallFunc_GetQuestWithDefinition_ReturnValue;       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(QuestMiniTile_C_SetState) == 0x000008, "Wrong alignment on QuestMiniTile_C_SetState");
static_assert(sizeof(QuestMiniTile_C_SetState) == 0x000058, "Wrong size on QuestMiniTile_C_SetState");
static_assert(offsetof(QuestMiniTile_C_SetState, InCurrentQuest) == 0x000000, "Member 'QuestMiniTile_C_SetState::InCurrentQuest' has a wrong offset!");
static_assert(offsetof(QuestMiniTile_C_SetState, QuestFound) == 0x000008, "Member 'QuestMiniTile_C_SetState::QuestFound' has a wrong offset!");
static_assert(offsetof(QuestMiniTile_C_SetState, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'QuestMiniTile_C_SetState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestMiniTile_C_SetState, CallFunc_GetItemDefinitionBP_ReturnValue) == 0x000010, "Member 'QuestMiniTile_C_SetState::CallFunc_GetItemDefinitionBP_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestMiniTile_C_SetState, CallFunc_PlayAnimationTimeRange_ReturnValue) == 0x000018, "Member 'QuestMiniTile_C_SetState::CallFunc_PlayAnimationTimeRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestMiniTile_C_SetState, CallFunc_PlayAnimationTimeRange_ReturnValue1) == 0x000020, "Member 'QuestMiniTile_C_SetState::CallFunc_PlayAnimationTimeRange_ReturnValue1' has a wrong offset!");
static_assert(offsetof(QuestMiniTile_C_SetState, CallFunc_PlayAnimation_ReturnValue) == 0x000028, "Member 'QuestMiniTile_C_SetState::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestMiniTile_C_SetState, CallFunc_GetContext_ReturnValue) == 0x000030, "Member 'QuestMiniTile_C_SetState::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestMiniTile_C_SetState, CallFunc_GetQuestManager_ReturnValue) == 0x000038, "Member 'QuestMiniTile_C_SetState::CallFunc_GetQuestManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestMiniTile_C_SetState, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000040, "Member 'QuestMiniTile_C_SetState::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestMiniTile_C_SetState, CallFunc_HasCompletedQuest_ReturnValue) == 0x000041, "Member 'QuestMiniTile_C_SetState::CallFunc_HasCompletedQuest_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestMiniTile_C_SetState, CallFunc_GetQuestWithDefinition_ReturnValue) == 0x000048, "Member 'QuestMiniTile_C_SetState::CallFunc_GetQuestWithDefinition_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestMiniTile_C_SetState, CallFunc_IsValid_ReturnValue1) == 0x000050, "Member 'QuestMiniTile_C_SetState::CallFunc_IsValid_ReturnValue1' has a wrong offset!");

// Function QuestMiniTile.QuestMiniTile_C.ToggleCurrentQuestTileTimer
// 0x0020 (0x0020 - 0x0000)
struct QuestMiniTile_C_ToggleCurrentQuestTileTimer final
{
public:
	bool                                          IsEnabled;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestMiniTile_C_ToggleCurrentQuestTileTimer) == 0x000008, "Wrong alignment on QuestMiniTile_C_ToggleCurrentQuestTileTimer");
static_assert(sizeof(QuestMiniTile_C_ToggleCurrentQuestTileTimer) == 0x000020, "Wrong size on QuestMiniTile_C_ToggleCurrentQuestTileTimer");
static_assert(offsetof(QuestMiniTile_C_ToggleCurrentQuestTileTimer, IsEnabled) == 0x000000, "Member 'QuestMiniTile_C_ToggleCurrentQuestTileTimer::IsEnabled' has a wrong offset!");
static_assert(offsetof(QuestMiniTile_C_ToggleCurrentQuestTileTimer, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'QuestMiniTile_C_ToggleCurrentQuestTileTimer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(QuestMiniTile_C_ToggleCurrentQuestTileTimer, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'QuestMiniTile_C_ToggleCurrentQuestTileTimer::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function QuestMiniTile.QuestMiniTile_C.PlayTileAnimation
// 0x0008 (0x0008 - 0x0000)
struct QuestMiniTile_C_PlayTileAnimation final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestMiniTile_C_PlayTileAnimation) == 0x000008, "Wrong alignment on QuestMiniTile_C_PlayTileAnimation");
static_assert(sizeof(QuestMiniTile_C_PlayTileAnimation) == 0x000008, "Wrong size on QuestMiniTile_C_PlayTileAnimation");
static_assert(offsetof(QuestMiniTile_C_PlayTileAnimation, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'QuestMiniTile_C_PlayTileAnimation::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function QuestMiniTile.QuestMiniTile_C.SetStateAndFindIncompleteQuest
// 0x0040 (0x0040 - 0x0000)
struct QuestMiniTile_C_SetStateAndFindIncompleteQuest final
{
public:
	bool                                          QuestFound;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationTimeRange_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationTimeRange_ReturnValue1;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortQuestManager*                      CallFunc_GetQuestManager_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortQuestItem*                         CallFunc_GetQuestWithDefinition_ReturnValue;       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasCompletedQuest_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(QuestMiniTile_C_SetStateAndFindIncompleteQuest) == 0x000008, "Wrong alignment on QuestMiniTile_C_SetStateAndFindIncompleteQuest");
static_assert(sizeof(QuestMiniTile_C_SetStateAndFindIncompleteQuest) == 0x000040, "Wrong size on QuestMiniTile_C_SetStateAndFindIncompleteQuest");
static_assert(offsetof(QuestMiniTile_C_SetStateAndFindIncompleteQuest, QuestFound) == 0x000000, "Member 'QuestMiniTile_C_SetStateAndFindIncompleteQuest::QuestFound' has a wrong offset!");
static_assert(offsetof(QuestMiniTile_C_SetStateAndFindIncompleteQuest, CallFunc_PlayAnimationTimeRange_ReturnValue) == 0x000008, "Member 'QuestMiniTile_C_SetStateAndFindIncompleteQuest::CallFunc_PlayAnimationTimeRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestMiniTile_C_SetStateAndFindIncompleteQuest, CallFunc_PlayAnimationTimeRange_ReturnValue1) == 0x000010, "Member 'QuestMiniTile_C_SetStateAndFindIncompleteQuest::CallFunc_PlayAnimationTimeRange_ReturnValue1' has a wrong offset!");
static_assert(offsetof(QuestMiniTile_C_SetStateAndFindIncompleteQuest, CallFunc_GetContext_ReturnValue) == 0x000018, "Member 'QuestMiniTile_C_SetStateAndFindIncompleteQuest::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestMiniTile_C_SetStateAndFindIncompleteQuest, CallFunc_PlayAnimation_ReturnValue) == 0x000020, "Member 'QuestMiniTile_C_SetStateAndFindIncompleteQuest::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestMiniTile_C_SetStateAndFindIncompleteQuest, CallFunc_GetQuestManager_ReturnValue) == 0x000028, "Member 'QuestMiniTile_C_SetStateAndFindIncompleteQuest::CallFunc_GetQuestManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestMiniTile_C_SetStateAndFindIncompleteQuest, CallFunc_GetQuestWithDefinition_ReturnValue) == 0x000030, "Member 'QuestMiniTile_C_SetStateAndFindIncompleteQuest::CallFunc_GetQuestWithDefinition_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestMiniTile_C_SetStateAndFindIncompleteQuest, CallFunc_HasCompletedQuest_ReturnValue) == 0x000038, "Member 'QuestMiniTile_C_SetStateAndFindIncompleteQuest::CallFunc_HasCompletedQuest_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestMiniTile_C_SetStateAndFindIncompleteQuest, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'QuestMiniTile_C_SetStateAndFindIncompleteQuest::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

