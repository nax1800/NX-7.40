#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaChallengesTab

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass AthenaChallengesTab.AthenaChallengesTab_C
// 0x0088 (0x0438 - 0x03B0)
class UAthenaChallengesTab_C final : public UAthenaChallengeBundleScheduleScreenBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UButton*                                BackgroundButton;                                  // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonBorder*                          BorderBackground;                                  // 0x03C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTreeView*                        ChallangeTreeView;                                 // 0x03C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_0;                                           // 0x03D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        OutOfSeasonSwitcher;                               // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USafeZone*                              SafeZone_1;                                        // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USafeZone*                              SafeZone_ChallengeContainer;                       // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonBorder*                          SafeZoneCB;                                        // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_Challenges;                                // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Title;                                             // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class UFortChallengeBundleScheduleDefinition*> UnlockableBundles;                                 // 0x0408(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class UFortChallengeBundleScheduleItem*> ActiveBundles;                                     // 0x0418(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	bool                                          DoInitialSelection;                                // 0x0428(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          DEVisInGame;                                       // 0x0429(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42A[0x6];                                      // 0x042A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortTimerTimespanDataSource*           TimerTimespanSource;                               // 0x0430(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_AthenaChallengesTab(int32 EntryPoint);
	void BndEvt__BackgroundButton_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature();
	void OnInitialized();
	void PreConstruct(bool IsDesignTime);
	void OnRefreshNavigation();
	void OnChallengesChanged();
	void BndEvt__ChallangeTreeView_K2Node_ComponentBoundEvent_0_OnListViewItemClicked__DelegateSignature(class UObject* Item);
	void OnDeactivated();
	void OnActivated();
	void Construct();
	void BndEvt__ChallangeTreeView_K2Node_ComponentBoundEvent_40_OnListEntryGeneratedDynamic__DelegateSignature(class UUserWidget* Widget);
	void HandleChallengesChanged();
	void UpdateChallengeViews();
	void SetupViewedItemData(class UFortItem* Item);
	TArray<class UObject*> TreeViewGetChildrenForCategory(class UObject* Item);
	void SelectFirstBundle();
	void SetBackground(bool IsInGame);
	void OnBack(bool* PassThrough);
	void InitializeInput();
	void SetupFrontendInfo();
	void SetupChallengeBundleInfo(class UChallengeBundlePage_C* InChallengeBundlePageWidget);
	void ConstructTimespanSource(class UFortTimerTimespanDataSource** NewObject);
	void GetAthenaEventTime(struct FTimespan* Result);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AthenaChallengesTab_C">();
	}
	static class UAthenaChallengesTab_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAthenaChallengesTab_C>();
	}
};
static_assert(alignof(UAthenaChallengesTab_C) == 0x000008, "Wrong alignment on UAthenaChallengesTab_C");
static_assert(sizeof(UAthenaChallengesTab_C) == 0x000438, "Wrong size on UAthenaChallengesTab_C");
static_assert(offsetof(UAthenaChallengesTab_C, UberGraphFrame) == 0x0003B0, "Member 'UAthenaChallengesTab_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAthenaChallengesTab_C, BackgroundButton) == 0x0003B8, "Member 'UAthenaChallengesTab_C::BackgroundButton' has a wrong offset!");
static_assert(offsetof(UAthenaChallengesTab_C, BorderBackground) == 0x0003C0, "Member 'UAthenaChallengesTab_C::BorderBackground' has a wrong offset!");
static_assert(offsetof(UAthenaChallengesTab_C, ChallangeTreeView) == 0x0003C8, "Member 'UAthenaChallengesTab_C::ChallangeTreeView' has a wrong offset!");
static_assert(offsetof(UAthenaChallengesTab_C, Image_0) == 0x0003D0, "Member 'UAthenaChallengesTab_C::Image_0' has a wrong offset!");
static_assert(offsetof(UAthenaChallengesTab_C, OutOfSeasonSwitcher) == 0x0003D8, "Member 'UAthenaChallengesTab_C::OutOfSeasonSwitcher' has a wrong offset!");
static_assert(offsetof(UAthenaChallengesTab_C, SafeZone_1) == 0x0003E0, "Member 'UAthenaChallengesTab_C::SafeZone_1' has a wrong offset!");
static_assert(offsetof(UAthenaChallengesTab_C, SafeZone_ChallengeContainer) == 0x0003E8, "Member 'UAthenaChallengesTab_C::SafeZone_ChallengeContainer' has a wrong offset!");
static_assert(offsetof(UAthenaChallengesTab_C, SafeZoneCB) == 0x0003F0, "Member 'UAthenaChallengesTab_C::SafeZoneCB' has a wrong offset!");
static_assert(offsetof(UAthenaChallengesTab_C, SizeBox_Challenges) == 0x0003F8, "Member 'UAthenaChallengesTab_C::SizeBox_Challenges' has a wrong offset!");
static_assert(offsetof(UAthenaChallengesTab_C, Title) == 0x000400, "Member 'UAthenaChallengesTab_C::Title' has a wrong offset!");
static_assert(offsetof(UAthenaChallengesTab_C, UnlockableBundles) == 0x000408, "Member 'UAthenaChallengesTab_C::UnlockableBundles' has a wrong offset!");
static_assert(offsetof(UAthenaChallengesTab_C, ActiveBundles) == 0x000418, "Member 'UAthenaChallengesTab_C::ActiveBundles' has a wrong offset!");
static_assert(offsetof(UAthenaChallengesTab_C, DoInitialSelection) == 0x000428, "Member 'UAthenaChallengesTab_C::DoInitialSelection' has a wrong offset!");
static_assert(offsetof(UAthenaChallengesTab_C, DEVisInGame) == 0x000429, "Member 'UAthenaChallengesTab_C::DEVisInGame' has a wrong offset!");
static_assert(offsetof(UAthenaChallengesTab_C, TimerTimespanSource) == 0x000430, "Member 'UAthenaChallengesTab_C::TimerTimespanSource' has a wrong offset!");

}

