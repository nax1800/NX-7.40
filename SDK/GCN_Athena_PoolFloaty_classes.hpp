#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GCN_Athena_PoolFloaty

#include "Basic.hpp"

#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GCN_Athena_PoolFloaty.GCN_Athena_PoolFloaty_C
// 0x0020 (0x0448 - 0x0428)
class AGCN_Athena_PoolFloaty_C final : public AFortGameplayCueNotify_Looping
{
public:
	class UArrowComponent*                        Arrow;                                             // 0x0428(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x0430(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 PlayerPawn;                                        // 0x0438(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsActive;                                          // 0x0440(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void UserConstructionScript();
	bool OnRemove(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	bool WhileActive(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	void Activated(class AActor* Param_PlayerPawn);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GCN_Athena_PoolFloaty_C">();
	}
	static class AGCN_Athena_PoolFloaty_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGCN_Athena_PoolFloaty_C>();
	}
};
static_assert(alignof(AGCN_Athena_PoolFloaty_C) == 0x000008, "Wrong alignment on AGCN_Athena_PoolFloaty_C");
static_assert(sizeof(AGCN_Athena_PoolFloaty_C) == 0x000448, "Wrong size on AGCN_Athena_PoolFloaty_C");
static_assert(offsetof(AGCN_Athena_PoolFloaty_C, Arrow) == 0x000428, "Member 'AGCN_Athena_PoolFloaty_C::Arrow' has a wrong offset!");
static_assert(offsetof(AGCN_Athena_PoolFloaty_C, StaticMesh) == 0x000430, "Member 'AGCN_Athena_PoolFloaty_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(AGCN_Athena_PoolFloaty_C, PlayerPawn) == 0x000438, "Member 'AGCN_Athena_PoolFloaty_C::PlayerPawn' has a wrong offset!");
static_assert(offsetof(AGCN_Athena_PoolFloaty_C, IsActive) == 0x000440, "Member 'AGCN_Athena_PoolFloaty_C::IsActive' has a wrong offset!");

}

