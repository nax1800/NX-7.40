#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OptionsMenuHudRotator

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function OptionsMenuHudRotator.OptionsMenuHudRotator_C.Selection Changed__DelegateSignature
// 0x000C (0x000C - 0x0000)
struct OptionsMenuHudRotator_C_Selection_Changed__DelegateSignature final
{
public:
	int32                                         Selected_Index;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Param_Gameplay_Tag;                                // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsMenuHudRotator_C_Selection_Changed__DelegateSignature) == 0x000004, "Wrong alignment on OptionsMenuHudRotator_C_Selection_Changed__DelegateSignature");
static_assert(sizeof(OptionsMenuHudRotator_C_Selection_Changed__DelegateSignature) == 0x00000C, "Wrong size on OptionsMenuHudRotator_C_Selection_Changed__DelegateSignature");
static_assert(offsetof(OptionsMenuHudRotator_C_Selection_Changed__DelegateSignature, Selected_Index) == 0x000000, "Member 'OptionsMenuHudRotator_C_Selection_Changed__DelegateSignature::Selected_Index' has a wrong offset!");
static_assert(offsetof(OptionsMenuHudRotator_C_Selection_Changed__DelegateSignature, Param_Gameplay_Tag) == 0x000004, "Member 'OptionsMenuHudRotator_C_Selection_Changed__DelegateSignature::Param_Gameplay_Tag' has a wrong offset!");

// Function OptionsMenuHudRotator.OptionsMenuHudRotator_C.ExecuteUbergraph_OptionsMenuHudRotator
// 0x0170 (0x0170 - 0x0000)
struct OptionsMenuHudRotator_C_ExecuteUbergraph_OptionsMenuHudRotator final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsExpanded;                          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bIsSelected;                          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          K2Node_Event_MouseEvent1;                          // 0x0008(0x0070)(ConstParm)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0078(0x0038)(IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x00B0(0x0070)(ConstParm)
	int32                                         K2Node_ComponentBoundEvent_Value;                  // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Event_ListItemObject;                       // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortHUDVisibilityData*                 K2Node_DynamicCast_AsFort_HUDVisibility_Data;      // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x3];                                      // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_BoolToInt_ReturnValue;               // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FText>                           K2Node_MakeArray_Array;                            // 0x0140(0x0010)(ZeroConstructor, ReferenceParm)
	class UCommonButton*                          K2Node_ComponentBoundEvent_Button1;                // 0x0150(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonButton*                          K2Node_ComponentBoundEvent_Button;                 // 0x0158(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0160(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OptionsMenuHudRotator_C_ExecuteUbergraph_OptionsMenuHudRotator) == 0x000008, "Wrong alignment on OptionsMenuHudRotator_C_ExecuteUbergraph_OptionsMenuHudRotator");
static_assert(sizeof(OptionsMenuHudRotator_C_ExecuteUbergraph_OptionsMenuHudRotator) == 0x000170, "Wrong size on OptionsMenuHudRotator_C_ExecuteUbergraph_OptionsMenuHudRotator");
static_assert(offsetof(OptionsMenuHudRotator_C_ExecuteUbergraph_OptionsMenuHudRotator, EntryPoint) == 0x000000, "Member 'OptionsMenuHudRotator_C_ExecuteUbergraph_OptionsMenuHudRotator::EntryPoint' has a wrong offset!");
static_assert(offsetof(OptionsMenuHudRotator_C_ExecuteUbergraph_OptionsMenuHudRotator, K2Node_Event_bIsExpanded) == 0x000004, "Member 'OptionsMenuHudRotator_C_ExecuteUbergraph_OptionsMenuHudRotator::K2Node_Event_bIsExpanded' has a wrong offset!");
static_assert(offsetof(OptionsMenuHudRotator_C_ExecuteUbergraph_OptionsMenuHudRotator, K2Node_Event_bIsSelected) == 0x000005, "Member 'OptionsMenuHudRotator_C_ExecuteUbergraph_OptionsMenuHudRotator::K2Node_Event_bIsSelected' has a wrong offset!");
static_assert(offsetof(OptionsMenuHudRotator_C_ExecuteUbergraph_OptionsMenuHudRotator, K2Node_Event_MouseEvent1) == 0x000008, "Member 'OptionsMenuHudRotator_C_ExecuteUbergraph_OptionsMenuHudRotator::K2Node_Event_MouseEvent1' has a wrong offset!");
static_assert(offsetof(OptionsMenuHudRotator_C_ExecuteUbergraph_OptionsMenuHudRotator, K2Node_Event_MyGeometry) == 0x000078, "Member 'OptionsMenuHudRotator_C_ExecuteUbergraph_OptionsMenuHudRotator::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(OptionsMenuHudRotator_C_ExecuteUbergraph_OptionsMenuHudRotator, K2Node_Event_MouseEvent) == 0x0000B0, "Member 'OptionsMenuHudRotator_C_ExecuteUbergraph_OptionsMenuHudRotator::K2Node_Event_MouseEvent' has a wrong offset!");
static_assert(offsetof(OptionsMenuHudRotator_C_ExecuteUbergraph_OptionsMenuHudRotator, K2Node_ComponentBoundEvent_Value) == 0x000120, "Member 'OptionsMenuHudRotator_C_ExecuteUbergraph_OptionsMenuHudRotator::K2Node_ComponentBoundEvent_Value' has a wrong offset!");
static_assert(offsetof(OptionsMenuHudRotator_C_ExecuteUbergraph_OptionsMenuHudRotator, K2Node_Event_ListItemObject) == 0x000128, "Member 'OptionsMenuHudRotator_C_ExecuteUbergraph_OptionsMenuHudRotator::K2Node_Event_ListItemObject' has a wrong offset!");
static_assert(offsetof(OptionsMenuHudRotator_C_ExecuteUbergraph_OptionsMenuHudRotator, K2Node_DynamicCast_AsFort_HUDVisibility_Data) == 0x000130, "Member 'OptionsMenuHudRotator_C_ExecuteUbergraph_OptionsMenuHudRotator::K2Node_DynamicCast_AsFort_HUDVisibility_Data' has a wrong offset!");
static_assert(offsetof(OptionsMenuHudRotator_C_ExecuteUbergraph_OptionsMenuHudRotator, K2Node_DynamicCast_bSuccess) == 0x000138, "Member 'OptionsMenuHudRotator_C_ExecuteUbergraph_OptionsMenuHudRotator::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(OptionsMenuHudRotator_C_ExecuteUbergraph_OptionsMenuHudRotator, CallFunc_Conv_BoolToInt_ReturnValue) == 0x00013C, "Member 'OptionsMenuHudRotator_C_ExecuteUbergraph_OptionsMenuHudRotator::CallFunc_Conv_BoolToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsMenuHudRotator_C_ExecuteUbergraph_OptionsMenuHudRotator, K2Node_MakeArray_Array) == 0x000140, "Member 'OptionsMenuHudRotator_C_ExecuteUbergraph_OptionsMenuHudRotator::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(OptionsMenuHudRotator_C_ExecuteUbergraph_OptionsMenuHudRotator, K2Node_ComponentBoundEvent_Button1) == 0x000150, "Member 'OptionsMenuHudRotator_C_ExecuteUbergraph_OptionsMenuHudRotator::K2Node_ComponentBoundEvent_Button1' has a wrong offset!");
static_assert(offsetof(OptionsMenuHudRotator_C_ExecuteUbergraph_OptionsMenuHudRotator, K2Node_ComponentBoundEvent_Button) == 0x000158, "Member 'OptionsMenuHudRotator_C_ExecuteUbergraph_OptionsMenuHudRotator::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(OptionsMenuHudRotator_C_ExecuteUbergraph_OptionsMenuHudRotator, CallFunc_K2_SetTimer_ReturnValue) == 0x000160, "Member 'OptionsMenuHudRotator_C_ExecuteUbergraph_OptionsMenuHudRotator::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsMenuHudRotator_C_ExecuteUbergraph_OptionsMenuHudRotator, CallFunc_TextIsEmpty_ReturnValue) == 0x000168, "Member 'OptionsMenuHudRotator_C_ExecuteUbergraph_OptionsMenuHudRotator::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");

// Function OptionsMenuHudRotator.OptionsMenuHudRotator_C.BndEvt__ButtonRight_K2Node_ComponentBoundEvent_15_CommonButtonClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct OptionsMenuHudRotator_C_BndEvt__ButtonRight_K2Node_ComponentBoundEvent_15_CommonButtonClicked__DelegateSignature final
{
public:
	class UCommonButton*                          Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsMenuHudRotator_C_BndEvt__ButtonRight_K2Node_ComponentBoundEvent_15_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on OptionsMenuHudRotator_C_BndEvt__ButtonRight_K2Node_ComponentBoundEvent_15_CommonButtonClicked__DelegateSignature");
static_assert(sizeof(OptionsMenuHudRotator_C_BndEvt__ButtonRight_K2Node_ComponentBoundEvent_15_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong size on OptionsMenuHudRotator_C_BndEvt__ButtonRight_K2Node_ComponentBoundEvent_15_CommonButtonClicked__DelegateSignature");
static_assert(offsetof(OptionsMenuHudRotator_C_BndEvt__ButtonRight_K2Node_ComponentBoundEvent_15_CommonButtonClicked__DelegateSignature, Button) == 0x000000, "Member 'OptionsMenuHudRotator_C_BndEvt__ButtonRight_K2Node_ComponentBoundEvent_15_CommonButtonClicked__DelegateSignature::Button' has a wrong offset!");

// Function OptionsMenuHudRotator.OptionsMenuHudRotator_C.BndEvt__ButtonLeft_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct OptionsMenuHudRotator_C_BndEvt__ButtonLeft_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature final
{
public:
	class UCommonButton*                          Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsMenuHudRotator_C_BndEvt__ButtonLeft_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on OptionsMenuHudRotator_C_BndEvt__ButtonLeft_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature");
static_assert(sizeof(OptionsMenuHudRotator_C_BndEvt__ButtonLeft_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong size on OptionsMenuHudRotator_C_BndEvt__ButtonLeft_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature");
static_assert(offsetof(OptionsMenuHudRotator_C_BndEvt__ButtonLeft_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature, Button) == 0x000000, "Member 'OptionsMenuHudRotator_C_BndEvt__ButtonLeft_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature::Button' has a wrong offset!");

// Function OptionsMenuHudRotator.OptionsMenuHudRotator_C.OnListItemObjectSet
// 0x0008 (0x0008 - 0x0000)
struct OptionsMenuHudRotator_C_OnListItemObjectSet final
{
public:
	class UObject*                                ListItemObject;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsMenuHudRotator_C_OnListItemObjectSet) == 0x000008, "Wrong alignment on OptionsMenuHudRotator_C_OnListItemObjectSet");
static_assert(sizeof(OptionsMenuHudRotator_C_OnListItemObjectSet) == 0x000008, "Wrong size on OptionsMenuHudRotator_C_OnListItemObjectSet");
static_assert(offsetof(OptionsMenuHudRotator_C_OnListItemObjectSet, ListItemObject) == 0x000000, "Member 'OptionsMenuHudRotator_C_OnListItemObjectSet::ListItemObject' has a wrong offset!");

// Function OptionsMenuHudRotator.OptionsMenuHudRotator_C.BndEvt__TextRotator_K2Node_ComponentBoundEvent_5_OnRotated__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct OptionsMenuHudRotator_C_BndEvt__TextRotator_K2Node_ComponentBoundEvent_5_OnRotated__DelegateSignature final
{
public:
	int32                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsMenuHudRotator_C_BndEvt__TextRotator_K2Node_ComponentBoundEvent_5_OnRotated__DelegateSignature) == 0x000004, "Wrong alignment on OptionsMenuHudRotator_C_BndEvt__TextRotator_K2Node_ComponentBoundEvent_5_OnRotated__DelegateSignature");
static_assert(sizeof(OptionsMenuHudRotator_C_BndEvt__TextRotator_K2Node_ComponentBoundEvent_5_OnRotated__DelegateSignature) == 0x000004, "Wrong size on OptionsMenuHudRotator_C_BndEvt__TextRotator_K2Node_ComponentBoundEvent_5_OnRotated__DelegateSignature");
static_assert(offsetof(OptionsMenuHudRotator_C_BndEvt__TextRotator_K2Node_ComponentBoundEvent_5_OnRotated__DelegateSignature, Value) == 0x000000, "Member 'OptionsMenuHudRotator_C_BndEvt__TextRotator_K2Node_ComponentBoundEvent_5_OnRotated__DelegateSignature::Value' has a wrong offset!");

// Function OptionsMenuHudRotator.OptionsMenuHudRotator_C.OnMouseEnter
// 0x00A8 (0x00A8 - 0x0000)
struct OptionsMenuHudRotator_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(OptionsMenuHudRotator_C_OnMouseEnter) == 0x000008, "Wrong alignment on OptionsMenuHudRotator_C_OnMouseEnter");
static_assert(sizeof(OptionsMenuHudRotator_C_OnMouseEnter) == 0x0000A8, "Wrong size on OptionsMenuHudRotator_C_OnMouseEnter");
static_assert(offsetof(OptionsMenuHudRotator_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'OptionsMenuHudRotator_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(OptionsMenuHudRotator_C_OnMouseEnter, MouseEvent) == 0x000038, "Member 'OptionsMenuHudRotator_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function OptionsMenuHudRotator.OptionsMenuHudRotator_C.OnMouseLeave
// 0x0070 (0x0070 - 0x0000)
struct OptionsMenuHudRotator_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(OptionsMenuHudRotator_C_OnMouseLeave) == 0x000008, "Wrong alignment on OptionsMenuHudRotator_C_OnMouseLeave");
static_assert(sizeof(OptionsMenuHudRotator_C_OnMouseLeave) == 0x000070, "Wrong size on OptionsMenuHudRotator_C_OnMouseLeave");
static_assert(offsetof(OptionsMenuHudRotator_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'OptionsMenuHudRotator_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function OptionsMenuHudRotator.OptionsMenuHudRotator_C.BP_OnItemSelectionChanged
// 0x0001 (0x0001 - 0x0000)
struct OptionsMenuHudRotator_C_BP_OnItemSelectionChanged final
{
public:
	bool                                          bIsSelected;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OptionsMenuHudRotator_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong alignment on OptionsMenuHudRotator_C_BP_OnItemSelectionChanged");
static_assert(sizeof(OptionsMenuHudRotator_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong size on OptionsMenuHudRotator_C_BP_OnItemSelectionChanged");
static_assert(offsetof(OptionsMenuHudRotator_C_BP_OnItemSelectionChanged, bIsSelected) == 0x000000, "Member 'OptionsMenuHudRotator_C_BP_OnItemSelectionChanged::bIsSelected' has a wrong offset!");

// Function OptionsMenuHudRotator.OptionsMenuHudRotator_C.BP_OnItemExpansionChanged
// 0x0001 (0x0001 - 0x0000)
struct OptionsMenuHudRotator_C_BP_OnItemExpansionChanged final
{
public:
	bool                                          bIsExpanded;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OptionsMenuHudRotator_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong alignment on OptionsMenuHudRotator_C_BP_OnItemExpansionChanged");
static_assert(sizeof(OptionsMenuHudRotator_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong size on OptionsMenuHudRotator_C_BP_OnItemExpansionChanged");
static_assert(offsetof(OptionsMenuHudRotator_C_BP_OnItemExpansionChanged, bIsExpanded) == 0x000000, "Member 'OptionsMenuHudRotator_C_BP_OnItemExpansionChanged::bIsExpanded' has a wrong offset!");

// Function OptionsMenuHudRotator.OptionsMenuHudRotator_C.Update Row Selector
// 0x0004 (0x0004 - 0x0000)
struct OptionsMenuHudRotator_C_Update_Row_Selector final
{
public:
	int32                                         Currently_Selected;                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsMenuHudRotator_C_Update_Row_Selector) == 0x000004, "Wrong alignment on OptionsMenuHudRotator_C_Update_Row_Selector");
static_assert(sizeof(OptionsMenuHudRotator_C_Update_Row_Selector) == 0x000004, "Wrong size on OptionsMenuHudRotator_C_Update_Row_Selector");
static_assert(offsetof(OptionsMenuHudRotator_C_Update_Row_Selector, Currently_Selected) == 0x000000, "Member 'OptionsMenuHudRotator_C_Update_Row_Selector::Currently_Selected' has a wrong offset!");

// Function OptionsMenuHudRotator.OptionsMenuHudRotator_C.Center on Widget
// 0x0008 (0x0008 - 0x0000)
struct OptionsMenuHudRotator_C_Center_on_Widget final
{
public:
	class UFortUINavigationManager*               CallFunc_GetUINavigationManager_ReturnValue;       // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsMenuHudRotator_C_Center_on_Widget) == 0x000008, "Wrong alignment on OptionsMenuHudRotator_C_Center_on_Widget");
static_assert(sizeof(OptionsMenuHudRotator_C_Center_on_Widget) == 0x000008, "Wrong size on OptionsMenuHudRotator_C_Center_on_Widget");
static_assert(offsetof(OptionsMenuHudRotator_C_Center_on_Widget, CallFunc_GetUINavigationManager_ReturnValue) == 0x000000, "Member 'OptionsMenuHudRotator_C_Center_on_Widget::CallFunc_GetUINavigationManager_ReturnValue' has a wrong offset!");

// Function OptionsMenuHudRotator.OptionsMenuHudRotator_C.Update Options
// 0x0010 (0x0010 - 0x0000)
struct OptionsMenuHudRotator_C_Update_Options final
{
public:
	TArray<class FText>                           NewParam;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
};
static_assert(alignof(OptionsMenuHudRotator_C_Update_Options) == 0x000008, "Wrong alignment on OptionsMenuHudRotator_C_Update_Options");
static_assert(sizeof(OptionsMenuHudRotator_C_Update_Options) == 0x000010, "Wrong size on OptionsMenuHudRotator_C_Update_Options");
static_assert(offsetof(OptionsMenuHudRotator_C_Update_Options, NewParam) == 0x000000, "Member 'OptionsMenuHudRotator_C_Update_Options::NewParam' has a wrong offset!");

// Function OptionsMenuHudRotator.OptionsMenuHudRotator_C.UpdateSize
// 0x0158 (0x0158 - 0x0000)
struct OptionsMenuHudRotator_C_UpdateSize final
{
public:
	struct FVector2D                              LargeSize;                                         // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              SmallSize;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable;                               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable1;                               // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMobileGame_ReturnValue;                 // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMobileGame_ReturnValue1;                // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                              K2Node_Select_Default;                             // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable1;                              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select1_Default;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable2;                               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_Select2_Default;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0048(0x0088)()
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush1;                     // 0x00D0(0x0088)()
};
static_assert(alignof(OptionsMenuHudRotator_C_UpdateSize) == 0x000008, "Wrong alignment on OptionsMenuHudRotator_C_UpdateSize");
static_assert(sizeof(OptionsMenuHudRotator_C_UpdateSize) == 0x000158, "Wrong size on OptionsMenuHudRotator_C_UpdateSize");
static_assert(offsetof(OptionsMenuHudRotator_C_UpdateSize, LargeSize) == 0x000000, "Member 'OptionsMenuHudRotator_C_UpdateSize::LargeSize' has a wrong offset!");
static_assert(offsetof(OptionsMenuHudRotator_C_UpdateSize, SmallSize) == 0x000008, "Member 'OptionsMenuHudRotator_C_UpdateSize::SmallSize' has a wrong offset!");
static_assert(offsetof(OptionsMenuHudRotator_C_UpdateSize, Temp_class_Variable) == 0x000010, "Member 'OptionsMenuHudRotator_C_UpdateSize::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(OptionsMenuHudRotator_C_UpdateSize, Temp_bool_Variable) == 0x000018, "Member 'OptionsMenuHudRotator_C_UpdateSize::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(OptionsMenuHudRotator_C_UpdateSize, Temp_bool_Variable1) == 0x000019, "Member 'OptionsMenuHudRotator_C_UpdateSize::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(OptionsMenuHudRotator_C_UpdateSize, CallFunc_IsMobileGame_ReturnValue) == 0x00001A, "Member 'OptionsMenuHudRotator_C_UpdateSize::CallFunc_IsMobileGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsMenuHudRotator_C_UpdateSize, CallFunc_IsMobileGame_ReturnValue1) == 0x00001B, "Member 'OptionsMenuHudRotator_C_UpdateSize::CallFunc_IsMobileGame_ReturnValue1' has a wrong offset!");
static_assert(offsetof(OptionsMenuHudRotator_C_UpdateSize, K2Node_Select_Default) == 0x00001C, "Member 'OptionsMenuHudRotator_C_UpdateSize::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(OptionsMenuHudRotator_C_UpdateSize, Temp_class_Variable1) == 0x000028, "Member 'OptionsMenuHudRotator_C_UpdateSize::Temp_class_Variable1' has a wrong offset!");
static_assert(offsetof(OptionsMenuHudRotator_C_UpdateSize, K2Node_Select1_Default) == 0x000030, "Member 'OptionsMenuHudRotator_C_UpdateSize::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(OptionsMenuHudRotator_C_UpdateSize, Temp_bool_Variable2) == 0x000038, "Member 'OptionsMenuHudRotator_C_UpdateSize::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(OptionsMenuHudRotator_C_UpdateSize, K2Node_Select2_Default) == 0x000040, "Member 'OptionsMenuHudRotator_C_UpdateSize::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(OptionsMenuHudRotator_C_UpdateSize, K2Node_MakeStruct_SlateBrush) == 0x000048, "Member 'OptionsMenuHudRotator_C_UpdateSize::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(OptionsMenuHudRotator_C_UpdateSize, K2Node_MakeStruct_SlateBrush1) == 0x0000D0, "Member 'OptionsMenuHudRotator_C_UpdateSize::K2Node_MakeStruct_SlateBrush1' has a wrong offset!");

// Function OptionsMenuHudRotator.OptionsMenuHudRotator_C.OnGetMenuContent
// 0x0030 (0x0030 - 0x0000)
struct OptionsMenuHudRotator_C_OnGetMenuContent final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0008(0x0018)()
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTooltipMinusBasicMinusS_C*             CallFunc_Create_ReturnValue;                       // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsMenuHudRotator_C_OnGetMenuContent) == 0x000008, "Wrong alignment on OptionsMenuHudRotator_C_OnGetMenuContent");
static_assert(sizeof(OptionsMenuHudRotator_C_OnGetMenuContent) == 0x000030, "Wrong size on OptionsMenuHudRotator_C_OnGetMenuContent");
static_assert(offsetof(OptionsMenuHudRotator_C_OnGetMenuContent, ReturnValue) == 0x000000, "Member 'OptionsMenuHudRotator_C_OnGetMenuContent::ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsMenuHudRotator_C_OnGetMenuContent, CallFunc_GetText_ReturnValue) == 0x000008, "Member 'OptionsMenuHudRotator_C_OnGetMenuContent::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsMenuHudRotator_C_OnGetMenuContent, CallFunc_GetOwningPlayer_ReturnValue) == 0x000020, "Member 'OptionsMenuHudRotator_C_OnGetMenuContent::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsMenuHudRotator_C_OnGetMenuContent, CallFunc_Create_ReturnValue) == 0x000028, "Member 'OptionsMenuHudRotator_C_OnGetMenuContent::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function OptionsMenuHudRotator.OptionsMenuHudRotator_C.GetListItemObject
// 0x0008 (0x0008 - 0x0000)
struct OptionsMenuHudRotator_C_GetListItemObject final
{
public:
	class UObject*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsMenuHudRotator_C_GetListItemObject) == 0x000008, "Wrong alignment on OptionsMenuHudRotator_C_GetListItemObject");
static_assert(sizeof(OptionsMenuHudRotator_C_GetListItemObject) == 0x000008, "Wrong size on OptionsMenuHudRotator_C_GetListItemObject");
static_assert(offsetof(OptionsMenuHudRotator_C_GetListItemObject, ReturnValue) == 0x000000, "Member 'OptionsMenuHudRotator_C_GetListItemObject::ReturnValue' has a wrong offset!");

}

