#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GamepadKeyTextButton

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "InputCore_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass GamepadKeyTextButton.GamepadKeyTextButton_C
// 0x0150 (0x0C88 - 0x0B38)
class UGamepadKeyTextButton_C final : public UFortGamepadCustomListItem
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0B38(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UKeybindWidget_C*                       BoundKey;                                          // 0x0B40(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                ContentBorder;                                     // 0x0B48(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFortRichTextBlock*                     FortRichTextBlock_Desc;                            // 0x0B50(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFortRichTextBlock*                     FortRichTextBlock_NoKey;                           // 0x0B58(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_Nokey;                                     // 0x0B60(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   ButtonText;                                        // 0x0B68(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	struct FSlateBrush                            IconBrush;                                         // 0x0B80(0x0088)(Edit, BlueprintVisible, ExposeOnSpawn)
	class UClass*                                 ControllerInputStyle;                              // 0x0C08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FDataTableRowHandle                    ButtonClickAction;                                 // 0x0C10(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	EHorizontalAlignment                          ContentAlignment;                                  // 0x0C20(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C21[0x7];                                      // 0x0C21(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	UMulticastDelegateProperty_                   ChangeTheBinding_Button;                           // 0x0C28(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class FName                                   ActionNameData;                                    // 0x0C38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   KeyData;                                           // 0x0C40(0x0018)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class FText                                   TextData;                                          // 0x0C58(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FKey                                   KeyNone;                                           // 0x0C70(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void ChangeTheBinding_Button__DelegateSignature(class FName ActionName, const struct FKey& Key);
	void ExecuteUbergraph_GamepadKeyTextButton(int32 EntryPoint);
	void SetTabLabelInfo(const struct FFortTabButtonLabelInfo& TabLabelInfo);
	void UpdateButton(class UGamepadKeyTextButton_C* Button);
	void SetDataAndUpdateButton(const struct FKey& Key, const class FText& DescText, class FName ActionName);
	void PreConstruct(bool IsDesignTime);
	void SetData(const struct FKey& Key, const class FText& DescText, class FName ActionName);
	void OnListItemObjectSet(class UObject* ListItemObject);
	void UpdateContentAlignment();
	void SetContentAlignment(EHorizontalAlignment Param_ContentAlignment);
	void SetNonInteractableStyle();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GamepadKeyTextButton_C">();
	}
	static class UGamepadKeyTextButton_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGamepadKeyTextButton_C>();
	}
};
static_assert(alignof(UGamepadKeyTextButton_C) == 0x000008, "Wrong alignment on UGamepadKeyTextButton_C");
static_assert(sizeof(UGamepadKeyTextButton_C) == 0x000C88, "Wrong size on UGamepadKeyTextButton_C");
static_assert(offsetof(UGamepadKeyTextButton_C, UberGraphFrame) == 0x000B38, "Member 'UGamepadKeyTextButton_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGamepadKeyTextButton_C, BoundKey) == 0x000B40, "Member 'UGamepadKeyTextButton_C::BoundKey' has a wrong offset!");
static_assert(offsetof(UGamepadKeyTextButton_C, ContentBorder) == 0x000B48, "Member 'UGamepadKeyTextButton_C::ContentBorder' has a wrong offset!");
static_assert(offsetof(UGamepadKeyTextButton_C, FortRichTextBlock_Desc) == 0x000B50, "Member 'UGamepadKeyTextButton_C::FortRichTextBlock_Desc' has a wrong offset!");
static_assert(offsetof(UGamepadKeyTextButton_C, FortRichTextBlock_NoKey) == 0x000B58, "Member 'UGamepadKeyTextButton_C::FortRichTextBlock_NoKey' has a wrong offset!");
static_assert(offsetof(UGamepadKeyTextButton_C, SizeBox_Nokey) == 0x000B60, "Member 'UGamepadKeyTextButton_C::SizeBox_Nokey' has a wrong offset!");
static_assert(offsetof(UGamepadKeyTextButton_C, ButtonText) == 0x000B68, "Member 'UGamepadKeyTextButton_C::ButtonText' has a wrong offset!");
static_assert(offsetof(UGamepadKeyTextButton_C, IconBrush) == 0x000B80, "Member 'UGamepadKeyTextButton_C::IconBrush' has a wrong offset!");
static_assert(offsetof(UGamepadKeyTextButton_C, ControllerInputStyle) == 0x000C08, "Member 'UGamepadKeyTextButton_C::ControllerInputStyle' has a wrong offset!");
static_assert(offsetof(UGamepadKeyTextButton_C, ButtonClickAction) == 0x000C10, "Member 'UGamepadKeyTextButton_C::ButtonClickAction' has a wrong offset!");
static_assert(offsetof(UGamepadKeyTextButton_C, ContentAlignment) == 0x000C20, "Member 'UGamepadKeyTextButton_C::ContentAlignment' has a wrong offset!");
static_assert(offsetof(UGamepadKeyTextButton_C, ChangeTheBinding_Button) == 0x000C28, "Member 'UGamepadKeyTextButton_C::ChangeTheBinding_Button' has a wrong offset!");
static_assert(offsetof(UGamepadKeyTextButton_C, ActionNameData) == 0x000C38, "Member 'UGamepadKeyTextButton_C::ActionNameData' has a wrong offset!");
static_assert(offsetof(UGamepadKeyTextButton_C, KeyData) == 0x000C40, "Member 'UGamepadKeyTextButton_C::KeyData' has a wrong offset!");
static_assert(offsetof(UGamepadKeyTextButton_C, TextData) == 0x000C58, "Member 'UGamepadKeyTextButton_C::TextData' has a wrong offset!");
static_assert(offsetof(UGamepadKeyTextButton_C, KeyNone) == 0x000C70, "Member 'UGamepadKeyTextButton_C::KeyNone' has a wrong offset!");

}

