#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Frontend_Manage

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Frontend_Manage.Frontend_Manage_C
// 0x0088 (0x03D0 - 0x0348)
class AFrontend_Manage_C final : public AFortLevelScriptActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0348(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         CameraReturnTimeline_Time_0D4667ED46305C38079A1CBC63370268; // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            CameraReturnTimeline__Direction_0D4667ED46305C38079A1CBC63370268; // 0x0354(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_355[0x3];                                      // 0x0355(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     CameraReturnTimeline;                              // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CameraLerpTimeline_Time_7CA36CE24B5A1E4FAE3F248C4EAB6495; // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            CameraLerpTimeline__Direction_7CA36CE24B5A1E4FAE3F248C4EAB6495; // 0x0364(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_365[0x3];                                      // 0x0365(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     CameraLerpTimeline;                                // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFrontend_Manage_Camera_C*              Camera;                                            // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_378[0x8];                                      // 0x0378(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CameraStartingTransform;                           // 0x0380(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FTimerHandle                           CameraReturnTimer;                                 // 0x03B0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CAMERA_Sensei_ExecuteUbergraph_Frontend_Manage_RefProperty; // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CAMERA_Director_ExecuteUbergraph_Frontend_Manage_RefProperty; // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Frontend_Manage(int32 EntryPoint);
	void ReceiveBeginPlay();
	void CameraDeselected();
	void LerpCamera(bool IsSensei);
	void CameraReturn();
	void ManageCameraSelected(bool IsSensei);
	void CameraLerpTimeline__FinishedFunc();
	void CameraLerpTimeline__UpdateFunc();
	void CameraReturnTimeline__FinishedFunc();
	void CameraReturnTimeline__UpdateFunc();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Frontend_Manage_C">();
	}
	static class AFrontend_Manage_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFrontend_Manage_C>();
	}
};
static_assert(alignof(AFrontend_Manage_C) == 0x000010, "Wrong alignment on AFrontend_Manage_C");
static_assert(sizeof(AFrontend_Manage_C) == 0x0003D0, "Wrong size on AFrontend_Manage_C");
static_assert(offsetof(AFrontend_Manage_C, UberGraphFrame) == 0x000348, "Member 'AFrontend_Manage_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AFrontend_Manage_C, CameraReturnTimeline_Time_0D4667ED46305C38079A1CBC63370268) == 0x000350, "Member 'AFrontend_Manage_C::CameraReturnTimeline_Time_0D4667ED46305C38079A1CBC63370268' has a wrong offset!");
static_assert(offsetof(AFrontend_Manage_C, CameraReturnTimeline__Direction_0D4667ED46305C38079A1CBC63370268) == 0x000354, "Member 'AFrontend_Manage_C::CameraReturnTimeline__Direction_0D4667ED46305C38079A1CBC63370268' has a wrong offset!");
static_assert(offsetof(AFrontend_Manage_C, CameraReturnTimeline) == 0x000358, "Member 'AFrontend_Manage_C::CameraReturnTimeline' has a wrong offset!");
static_assert(offsetof(AFrontend_Manage_C, CameraLerpTimeline_Time_7CA36CE24B5A1E4FAE3F248C4EAB6495) == 0x000360, "Member 'AFrontend_Manage_C::CameraLerpTimeline_Time_7CA36CE24B5A1E4FAE3F248C4EAB6495' has a wrong offset!");
static_assert(offsetof(AFrontend_Manage_C, CameraLerpTimeline__Direction_7CA36CE24B5A1E4FAE3F248C4EAB6495) == 0x000364, "Member 'AFrontend_Manage_C::CameraLerpTimeline__Direction_7CA36CE24B5A1E4FAE3F248C4EAB6495' has a wrong offset!");
static_assert(offsetof(AFrontend_Manage_C, CameraLerpTimeline) == 0x000368, "Member 'AFrontend_Manage_C::CameraLerpTimeline' has a wrong offset!");
static_assert(offsetof(AFrontend_Manage_C, Camera) == 0x000370, "Member 'AFrontend_Manage_C::Camera' has a wrong offset!");
static_assert(offsetof(AFrontend_Manage_C, CameraStartingTransform) == 0x000380, "Member 'AFrontend_Manage_C::CameraStartingTransform' has a wrong offset!");
static_assert(offsetof(AFrontend_Manage_C, CameraReturnTimer) == 0x0003B0, "Member 'AFrontend_Manage_C::CameraReturnTimer' has a wrong offset!");
static_assert(offsetof(AFrontend_Manage_C, CAMERA_Sensei_ExecuteUbergraph_Frontend_Manage_RefProperty) == 0x0003B8, "Member 'AFrontend_Manage_C::CAMERA_Sensei_ExecuteUbergraph_Frontend_Manage_RefProperty' has a wrong offset!");
static_assert(offsetof(AFrontend_Manage_C, CAMERA_Director_ExecuteUbergraph_Frontend_Manage_RefProperty) == 0x0003C0, "Member 'AFrontend_Manage_C::CAMERA_Director_ExecuteUbergraph_Frontend_Manage_RefProperty' has a wrong offset!");

}

