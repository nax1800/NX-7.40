#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Perk_H_FeelTheBASE_DeathListener

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function GA_Perk_H_FeelTheBASE_DeathListener.GA_Perk_H_FeelTheBASE_DeathListener_C.ExecuteUbergraph_GA_Perk_H_FeelTheBASE_DeathListener
// 0x0138 (0x0138 - 0x0000)
struct GA_Perk_H_FeelTheBASE_DeathListener_C_ExecuteUbergraph_GA_Perk_H_FeelTheBASE_DeathListener final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEffectSpecHandle              CallFunc_MakeOutgoingGameplayEffectSpec_ReturnValue; // 0x0008(0x0010)()
	struct FGameplayEffectContextHandle           CallFunc_GetGrantedByEffectContext_ReturnValue;    // 0x0018(0x0018)()
	struct FGameplayEventData                     K2Node_Event_EventData;                            // 0x0030(0x00A8)(ConstParm)
	class AActor*                                 CallFunc_EffectContextGetInstigatorActor_ReturnValue; // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AB_Perk_C_Constructor_BASE_C*           K2Node_DynamicCast_AsB_Perk_C_Constructor_BASE;    // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayAbilityTargetDataHandle       CallFunc_AbilityTargetDataFromActor_ReturnValue;   // 0x00F8(0x0020)()
	int32                                         CallFunc_GetGameplayEffectCount_ReturnValue;       // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_K2_ApplyGameplayEffectSpecToTarget_ReturnValue; // 0x0120(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_ExecuteGC_Overflow;                       // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Perk_H_FeelTheBASE_DeathListener_C_ExecuteUbergraph_GA_Perk_H_FeelTheBASE_DeathListener) == 0x000008, "Wrong alignment on GA_Perk_H_FeelTheBASE_DeathListener_C_ExecuteUbergraph_GA_Perk_H_FeelTheBASE_DeathListener");
static_assert(sizeof(GA_Perk_H_FeelTheBASE_DeathListener_C_ExecuteUbergraph_GA_Perk_H_FeelTheBASE_DeathListener) == 0x000138, "Wrong size on GA_Perk_H_FeelTheBASE_DeathListener_C_ExecuteUbergraph_GA_Perk_H_FeelTheBASE_DeathListener");
static_assert(offsetof(GA_Perk_H_FeelTheBASE_DeathListener_C_ExecuteUbergraph_GA_Perk_H_FeelTheBASE_DeathListener, EntryPoint) == 0x000000, "Member 'GA_Perk_H_FeelTheBASE_DeathListener_C_ExecuteUbergraph_GA_Perk_H_FeelTheBASE_DeathListener::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Perk_H_FeelTheBASE_DeathListener_C_ExecuteUbergraph_GA_Perk_H_FeelTheBASE_DeathListener, CallFunc_MakeOutgoingGameplayEffectSpec_ReturnValue) == 0x000008, "Member 'GA_Perk_H_FeelTheBASE_DeathListener_C_ExecuteUbergraph_GA_Perk_H_FeelTheBASE_DeathListener::CallFunc_MakeOutgoingGameplayEffectSpec_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Perk_H_FeelTheBASE_DeathListener_C_ExecuteUbergraph_GA_Perk_H_FeelTheBASE_DeathListener, CallFunc_GetGrantedByEffectContext_ReturnValue) == 0x000018, "Member 'GA_Perk_H_FeelTheBASE_DeathListener_C_ExecuteUbergraph_GA_Perk_H_FeelTheBASE_DeathListener::CallFunc_GetGrantedByEffectContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Perk_H_FeelTheBASE_DeathListener_C_ExecuteUbergraph_GA_Perk_H_FeelTheBASE_DeathListener, K2Node_Event_EventData) == 0x000030, "Member 'GA_Perk_H_FeelTheBASE_DeathListener_C_ExecuteUbergraph_GA_Perk_H_FeelTheBASE_DeathListener::K2Node_Event_EventData' has a wrong offset!");
static_assert(offsetof(GA_Perk_H_FeelTheBASE_DeathListener_C_ExecuteUbergraph_GA_Perk_H_FeelTheBASE_DeathListener, CallFunc_EffectContextGetInstigatorActor_ReturnValue) == 0x0000D8, "Member 'GA_Perk_H_FeelTheBASE_DeathListener_C_ExecuteUbergraph_GA_Perk_H_FeelTheBASE_DeathListener::CallFunc_EffectContextGetInstigatorActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Perk_H_FeelTheBASE_DeathListener_C_ExecuteUbergraph_GA_Perk_H_FeelTheBASE_DeathListener, K2Node_DynamicCast_AsB_Perk_C_Constructor_BASE) == 0x0000E0, "Member 'GA_Perk_H_FeelTheBASE_DeathListener_C_ExecuteUbergraph_GA_Perk_H_FeelTheBASE_DeathListener::K2Node_DynamicCast_AsB_Perk_C_Constructor_BASE' has a wrong offset!");
static_assert(offsetof(GA_Perk_H_FeelTheBASE_DeathListener_C_ExecuteUbergraph_GA_Perk_H_FeelTheBASE_DeathListener, K2Node_DynamicCast_bSuccess) == 0x0000E8, "Member 'GA_Perk_H_FeelTheBASE_DeathListener_C_ExecuteUbergraph_GA_Perk_H_FeelTheBASE_DeathListener::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Perk_H_FeelTheBASE_DeathListener_C_ExecuteUbergraph_GA_Perk_H_FeelTheBASE_DeathListener, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x0000F0, "Member 'GA_Perk_H_FeelTheBASE_DeathListener_C_ExecuteUbergraph_GA_Perk_H_FeelTheBASE_DeathListener::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Perk_H_FeelTheBASE_DeathListener_C_ExecuteUbergraph_GA_Perk_H_FeelTheBASE_DeathListener, CallFunc_AbilityTargetDataFromActor_ReturnValue) == 0x0000F8, "Member 'GA_Perk_H_FeelTheBASE_DeathListener_C_ExecuteUbergraph_GA_Perk_H_FeelTheBASE_DeathListener::CallFunc_AbilityTargetDataFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Perk_H_FeelTheBASE_DeathListener_C_ExecuteUbergraph_GA_Perk_H_FeelTheBASE_DeathListener, CallFunc_GetGameplayEffectCount_ReturnValue) == 0x000118, "Member 'GA_Perk_H_FeelTheBASE_DeathListener_C_ExecuteUbergraph_GA_Perk_H_FeelTheBASE_DeathListener::CallFunc_GetGameplayEffectCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Perk_H_FeelTheBASE_DeathListener_C_ExecuteUbergraph_GA_Perk_H_FeelTheBASE_DeathListener, CallFunc_K2_ApplyGameplayEffectSpecToTarget_ReturnValue) == 0x000120, "Member 'GA_Perk_H_FeelTheBASE_DeathListener_C_ExecuteUbergraph_GA_Perk_H_FeelTheBASE_DeathListener::CallFunc_K2_ApplyGameplayEffectSpecToTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Perk_H_FeelTheBASE_DeathListener_C_ExecuteUbergraph_GA_Perk_H_FeelTheBASE_DeathListener, CallFunc_ExecuteGC_Overflow) == 0x000130, "Member 'GA_Perk_H_FeelTheBASE_DeathListener_C_ExecuteUbergraph_GA_Perk_H_FeelTheBASE_DeathListener::CallFunc_ExecuteGC_Overflow' has a wrong offset!");

// Function GA_Perk_H_FeelTheBASE_DeathListener.GA_Perk_H_FeelTheBASE_DeathListener_C.ExecuteGC
// 0x0100 (0x0100 - 0x0000)
struct GA_Perk_H_FeelTheBASE_DeathListener_C_ExecuteGC final
{
public:
	class AB_Perk_C_Constructor_BASE_C*           BaseReference;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Overflow;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAllMatchingGameplayTags_TagContainerInterface_CastInput; // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAllMatchingGameplayTags_ReturnValue;   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector_NetQuantize10                  K2Node_MakeStruct_Vector_NetQuantize10;            // 0x0038(0x000C)(NoDestructor)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 K2Node_MakeStruct_GameplayCueParameters;           // 0x0048(0x00B8)(ContainsInstancedReference)
};
static_assert(alignof(GA_Perk_H_FeelTheBASE_DeathListener_C_ExecuteGC) == 0x000008, "Wrong alignment on GA_Perk_H_FeelTheBASE_DeathListener_C_ExecuteGC");
static_assert(sizeof(GA_Perk_H_FeelTheBASE_DeathListener_C_ExecuteGC) == 0x000100, "Wrong size on GA_Perk_H_FeelTheBASE_DeathListener_C_ExecuteGC");
static_assert(offsetof(GA_Perk_H_FeelTheBASE_DeathListener_C_ExecuteGC, BaseReference) == 0x000000, "Member 'GA_Perk_H_FeelTheBASE_DeathListener_C_ExecuteGC::BaseReference' has a wrong offset!");
static_assert(offsetof(GA_Perk_H_FeelTheBASE_DeathListener_C_ExecuteGC, Overflow) == 0x000008, "Member 'GA_Perk_H_FeelTheBASE_DeathListener_C_ExecuteGC::Overflow' has a wrong offset!");
static_assert(offsetof(GA_Perk_H_FeelTheBASE_DeathListener_C_ExecuteGC, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00000C, "Member 'GA_Perk_H_FeelTheBASE_DeathListener_C_ExecuteGC::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Perk_H_FeelTheBASE_DeathListener_C_ExecuteGC, CallFunc_HasAllMatchingGameplayTags_TagContainerInterface_CastInput) == 0x000018, "Member 'GA_Perk_H_FeelTheBASE_DeathListener_C_ExecuteGC::CallFunc_HasAllMatchingGameplayTags_TagContainerInterface_CastInput' has a wrong offset!");
static_assert(offsetof(GA_Perk_H_FeelTheBASE_DeathListener_C_ExecuteGC, CallFunc_HasAllMatchingGameplayTags_ReturnValue) == 0x000028, "Member 'GA_Perk_H_FeelTheBASE_DeathListener_C_ExecuteGC::CallFunc_HasAllMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Perk_H_FeelTheBASE_DeathListener_C_ExecuteGC, CallFunc_BreakVector_X) == 0x00002C, "Member 'GA_Perk_H_FeelTheBASE_DeathListener_C_ExecuteGC::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(GA_Perk_H_FeelTheBASE_DeathListener_C_ExecuteGC, CallFunc_BreakVector_Y) == 0x000030, "Member 'GA_Perk_H_FeelTheBASE_DeathListener_C_ExecuteGC::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(GA_Perk_H_FeelTheBASE_DeathListener_C_ExecuteGC, CallFunc_BreakVector_Z) == 0x000034, "Member 'GA_Perk_H_FeelTheBASE_DeathListener_C_ExecuteGC::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(GA_Perk_H_FeelTheBASE_DeathListener_C_ExecuteGC, K2Node_MakeStruct_Vector_NetQuantize10) == 0x000038, "Member 'GA_Perk_H_FeelTheBASE_DeathListener_C_ExecuteGC::K2Node_MakeStruct_Vector_NetQuantize10' has a wrong offset!");
static_assert(offsetof(GA_Perk_H_FeelTheBASE_DeathListener_C_ExecuteGC, K2Node_MakeStruct_GameplayCueParameters) == 0x000048, "Member 'GA_Perk_H_FeelTheBASE_DeathListener_C_ExecuteGC::K2Node_MakeStruct_GameplayCueParameters' has a wrong offset!");

// Function GA_Perk_H_FeelTheBASE_DeathListener.GA_Perk_H_FeelTheBASE_DeathListener_C.ActivateBaseStacks
// 0x0018 (0x0018 - 0x0000)
struct GA_Perk_H_FeelTheBASE_DeathListener_C_ActivateBaseStacks final
{
public:
	int32                                         Stack_Count;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_Perk_C_Constructor_BASE_C*           BaseReference;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue1;           // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue2;           // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Perk_H_FeelTheBASE_DeathListener_C_ActivateBaseStacks) == 0x000008, "Wrong alignment on GA_Perk_H_FeelTheBASE_DeathListener_C_ActivateBaseStacks");
static_assert(sizeof(GA_Perk_H_FeelTheBASE_DeathListener_C_ActivateBaseStacks) == 0x000018, "Wrong size on GA_Perk_H_FeelTheBASE_DeathListener_C_ActivateBaseStacks");
static_assert(offsetof(GA_Perk_H_FeelTheBASE_DeathListener_C_ActivateBaseStacks, Stack_Count) == 0x000000, "Member 'GA_Perk_H_FeelTheBASE_DeathListener_C_ActivateBaseStacks::Stack_Count' has a wrong offset!");
static_assert(offsetof(GA_Perk_H_FeelTheBASE_DeathListener_C_ActivateBaseStacks, BaseReference) == 0x000008, "Member 'GA_Perk_H_FeelTheBASE_DeathListener_C_ActivateBaseStacks::BaseReference' has a wrong offset!");
static_assert(offsetof(GA_Perk_H_FeelTheBASE_DeathListener_C_ActivateBaseStacks, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000010, "Member 'GA_Perk_H_FeelTheBASE_DeathListener_C_ActivateBaseStacks::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Perk_H_FeelTheBASE_DeathListener_C_ActivateBaseStacks, CallFunc_EqualEqual_IntInt_ReturnValue1) == 0x000011, "Member 'GA_Perk_H_FeelTheBASE_DeathListener_C_ActivateBaseStacks::CallFunc_EqualEqual_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(GA_Perk_H_FeelTheBASE_DeathListener_C_ActivateBaseStacks, CallFunc_EqualEqual_IntInt_ReturnValue2) == 0x000012, "Member 'GA_Perk_H_FeelTheBASE_DeathListener_C_ActivateBaseStacks::CallFunc_EqualEqual_IntInt_ReturnValue2' has a wrong offset!");

// Function GA_Perk_H_FeelTheBASE_DeathListener.GA_Perk_H_FeelTheBASE_DeathListener_C.K2_ActivateAbilityFromEvent
// 0x00A8 (0x00A8 - 0x0000)
struct GA_Perk_H_FeelTheBASE_DeathListener_C_K2_ActivateAbilityFromEvent final
{
public:
	struct FGameplayEventData                     Param_EventData;                                   // 0x0000(0x00A8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GA_Perk_H_FeelTheBASE_DeathListener_C_K2_ActivateAbilityFromEvent) == 0x000008, "Wrong alignment on GA_Perk_H_FeelTheBASE_DeathListener_C_K2_ActivateAbilityFromEvent");
static_assert(sizeof(GA_Perk_H_FeelTheBASE_DeathListener_C_K2_ActivateAbilityFromEvent) == 0x0000A8, "Wrong size on GA_Perk_H_FeelTheBASE_DeathListener_C_K2_ActivateAbilityFromEvent");
static_assert(offsetof(GA_Perk_H_FeelTheBASE_DeathListener_C_K2_ActivateAbilityFromEvent, Param_EventData) == 0x000000, "Member 'GA_Perk_H_FeelTheBASE_DeathListener_C_K2_ActivateAbilityFromEvent::Param_EventData' has a wrong offset!");

}

