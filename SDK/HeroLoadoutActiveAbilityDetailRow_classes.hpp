#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HeroLoadoutActiveAbilityDetailRow

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "CommonUI_classes.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass HeroLoadoutActiveAbilityDetailRow.HeroLoadoutActiveAbilityDetailRow_C
// 0x0098 (0x02D0 - 0x0238)
class UHeroLoadoutActiveAbilityDetailRow_C final : public UCommonUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0238(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCommonBorder*                          Border_Body;                                       // 0x0240(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ImageLockPerk;                                     // 0x0248(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ImagePerkIcon;                                     // 0x0250(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonWidgetSwitcher*                  InfoSwitcher;                                      // 0x0258(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               LargeInfo;                                         // 0x0260(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       LargeName;                                         // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               PerkIconSizeBox;                                   // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       SmallDescription;                                  // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           SmallInfo;                                         // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       SmallName;                                         // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          IncludeName;                                       // 0x0290(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IncludeDescription;                                // 0x0291(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          UseVerboseDescription;                             // 0x0292(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_293[0x5];                                      // 0x0293(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 UnlockedDisplayNameTextStyle;                      // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 LockedDisplayNameTextStyle;                        // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 UnlockedDescriptionTextStyle;                      // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 LockedDescriptionTextStyle;                        // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortBrushSize                                Icon_Size;                                         // 0x02B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B9[0x7];                                      // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortHero*                              Host_Hero;                                         // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UFortAbilityKit*                        AbilityKit;                                        // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_HeroLoadoutActiveAbilityDetailRow(int32 EntryPoint);
	void Construct();
	void PreConstruct(bool IsDesignTime);
	void UpdateFromStyle();
	void UpdateFromState();
	void UpdateTextStyles();
	void SetHero(class UFortHero* Hero);
	class UFortAbilityKit* GetAbilityKit();
	bool IsAbilityUnlocked();
	void SetAbilityKit(class UFortAbilityKit* Param_AbilityKit);
	void SetDisplayState(bool ShowName, bool ShowDescription, bool Param_UseVerboseDescription);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"HeroLoadoutActiveAbilityDetailRow_C">();
	}
	static class UHeroLoadoutActiveAbilityDetailRow_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHeroLoadoutActiveAbilityDetailRow_C>();
	}
};
static_assert(alignof(UHeroLoadoutActiveAbilityDetailRow_C) == 0x000008, "Wrong alignment on UHeroLoadoutActiveAbilityDetailRow_C");
static_assert(sizeof(UHeroLoadoutActiveAbilityDetailRow_C) == 0x0002D0, "Wrong size on UHeroLoadoutActiveAbilityDetailRow_C");
static_assert(offsetof(UHeroLoadoutActiveAbilityDetailRow_C, UberGraphFrame) == 0x000238, "Member 'UHeroLoadoutActiveAbilityDetailRow_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutActiveAbilityDetailRow_C, Border_Body) == 0x000240, "Member 'UHeroLoadoutActiveAbilityDetailRow_C::Border_Body' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutActiveAbilityDetailRow_C, ImageLockPerk) == 0x000248, "Member 'UHeroLoadoutActiveAbilityDetailRow_C::ImageLockPerk' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutActiveAbilityDetailRow_C, ImagePerkIcon) == 0x000250, "Member 'UHeroLoadoutActiveAbilityDetailRow_C::ImagePerkIcon' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutActiveAbilityDetailRow_C, InfoSwitcher) == 0x000258, "Member 'UHeroLoadoutActiveAbilityDetailRow_C::InfoSwitcher' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutActiveAbilityDetailRow_C, LargeInfo) == 0x000260, "Member 'UHeroLoadoutActiveAbilityDetailRow_C::LargeInfo' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutActiveAbilityDetailRow_C, LargeName) == 0x000268, "Member 'UHeroLoadoutActiveAbilityDetailRow_C::LargeName' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutActiveAbilityDetailRow_C, PerkIconSizeBox) == 0x000270, "Member 'UHeroLoadoutActiveAbilityDetailRow_C::PerkIconSizeBox' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutActiveAbilityDetailRow_C, SmallDescription) == 0x000278, "Member 'UHeroLoadoutActiveAbilityDetailRow_C::SmallDescription' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutActiveAbilityDetailRow_C, SmallInfo) == 0x000280, "Member 'UHeroLoadoutActiveAbilityDetailRow_C::SmallInfo' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutActiveAbilityDetailRow_C, SmallName) == 0x000288, "Member 'UHeroLoadoutActiveAbilityDetailRow_C::SmallName' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutActiveAbilityDetailRow_C, IncludeName) == 0x000290, "Member 'UHeroLoadoutActiveAbilityDetailRow_C::IncludeName' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutActiveAbilityDetailRow_C, IncludeDescription) == 0x000291, "Member 'UHeroLoadoutActiveAbilityDetailRow_C::IncludeDescription' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutActiveAbilityDetailRow_C, UseVerboseDescription) == 0x000292, "Member 'UHeroLoadoutActiveAbilityDetailRow_C::UseVerboseDescription' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutActiveAbilityDetailRow_C, UnlockedDisplayNameTextStyle) == 0x000298, "Member 'UHeroLoadoutActiveAbilityDetailRow_C::UnlockedDisplayNameTextStyle' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutActiveAbilityDetailRow_C, LockedDisplayNameTextStyle) == 0x0002A0, "Member 'UHeroLoadoutActiveAbilityDetailRow_C::LockedDisplayNameTextStyle' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutActiveAbilityDetailRow_C, UnlockedDescriptionTextStyle) == 0x0002A8, "Member 'UHeroLoadoutActiveAbilityDetailRow_C::UnlockedDescriptionTextStyle' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutActiveAbilityDetailRow_C, LockedDescriptionTextStyle) == 0x0002B0, "Member 'UHeroLoadoutActiveAbilityDetailRow_C::LockedDescriptionTextStyle' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutActiveAbilityDetailRow_C, Icon_Size) == 0x0002B8, "Member 'UHeroLoadoutActiveAbilityDetailRow_C::Icon_Size' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutActiveAbilityDetailRow_C, Host_Hero) == 0x0002C0, "Member 'UHeroLoadoutActiveAbilityDetailRow_C::Host_Hero' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutActiveAbilityDetailRow_C, AbilityKit) == 0x0002C8, "Member 'UHeroLoadoutActiveAbilityDetailRow_C::AbilityKit' has a wrong offset!");

}

