#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Athena_VendingMachine

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function B_Athena_VendingMachine.B_Athena_VendingMachine_C.ExecuteUbergraph_B_Athena_VendingMachine
// 0x0200 (0x0200 - 0x0000)
struct B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_RLerp_ReturnValue;                        // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   Temp_name_Variable;                                // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable1;                               // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable1;                               // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	const class AFortPawn*                        K2Node_Event_InteractingPawn;                      // 0x0028(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0030(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         K2Node_Event_StartingSeedValue;                    // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortWorldItemDefinition*               K2Node_Event_InputItem;                            // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               K2Node_Event_InputTexture;                         // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_CurrentGoal;                          // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_CurrentCollectedAmount;               // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_CurrentCaptureCount;                  // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               K2Node_Event_OutputTexture;                        // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue1;         // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue2;         // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue1;     // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11A[0x2];                                      // 0x011A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue3;         // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default;                             // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue1; // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue1;                 // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x014C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult1;   // 0x0158(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_GetTimeSeconds_ReturnValue;               // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_EvaluateCurveTableRow_OutXY;              // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EvaluateCurveTableRow_ReturnValue;        // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E9[0x3];                                      // 0x01E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_EvaluateCurveTableRow_OutXY1;             // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EvaluateCurveTableRow_ReturnValue1;       // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortRarity                                   CallFunc_GetOverrideRarity_Rarity;                 // 0x01F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetOverrideRarity_ReturnValue;            // 0x01F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select1_Default;                            // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x01FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine) == 0x000008, "Wrong alignment on B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine");
static_assert(sizeof(B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine) == 0x000200, "Wrong size on B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine");
static_assert(offsetof(B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine, EntryPoint) == 0x000000, "Member 'B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine, Temp_bool_Variable) == 0x000004, "Member 'B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine, CallFunc_RLerp_ReturnValue) == 0x000008, "Member 'B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine::CallFunc_RLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine, Temp_name_Variable) == 0x000014, "Member 'B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine, Temp_name_Variable1) == 0x00001C, "Member 'B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine::Temp_name_Variable1' has a wrong offset!");
static_assert(offsetof(B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine, Temp_bool_Variable1) == 0x000024, "Member 'B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine, K2Node_Event_InteractingPawn) == 0x000028, "Member 'B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine::K2Node_Event_InteractingPawn' has a wrong offset!");
static_assert(offsetof(B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000030, "Member 'B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine, K2Node_Event_StartingSeedValue) == 0x0000B8, "Member 'B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine::K2Node_Event_StartingSeedValue' has a wrong offset!");
static_assert(offsetof(B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine, K2Node_Event_InputItem) == 0x0000C0, "Member 'B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine::K2Node_Event_InputItem' has a wrong offset!");
static_assert(offsetof(B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine, K2Node_Event_InputTexture) == 0x0000C8, "Member 'B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine::K2Node_Event_InputTexture' has a wrong offset!");
static_assert(offsetof(B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine, K2Node_Event_CurrentGoal) == 0x0000D0, "Member 'B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine::K2Node_Event_CurrentGoal' has a wrong offset!");
static_assert(offsetof(B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine, K2Node_Event_CurrentCollectedAmount) == 0x0000D4, "Member 'B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine::K2Node_Event_CurrentCollectedAmount' has a wrong offset!");
static_assert(offsetof(B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine, K2Node_Event_CurrentCaptureCount) == 0x0000D8, "Member 'B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine::K2Node_Event_CurrentCaptureCount' has a wrong offset!");
static_assert(offsetof(B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine, K2Node_Event_OutputTexture) == 0x0000E0, "Member 'B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine::K2Node_Event_OutputTexture' has a wrong offset!");
static_assert(offsetof(B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine, CallFunc_IsValid_ReturnValue) == 0x0000E8, "Member 'B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine, CallFunc_Add_IntInt_ReturnValue) == 0x0000EC, "Member 'B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0000F0, "Member 'B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000F4, "Member 'B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine, CallFunc_K2_GetActorLocation_ReturnValue1) == 0x000100, "Member 'B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine::CallFunc_K2_GetActorLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine, CallFunc_K2_GetActorLocation_ReturnValue2) == 0x00010C, "Member 'B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine::CallFunc_K2_GetActorLocation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000118, "Member 'B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine, CallFunc_EqualEqual_ObjectObject_ReturnValue1) == 0x000119, "Member 'B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine::CallFunc_EqualEqual_ObjectObject_ReturnValue1' has a wrong offset!");
static_assert(offsetof(B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine, CallFunc_K2_GetActorLocation_ReturnValue3) == 0x00011C, "Member 'B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine::CallFunc_K2_GetActorLocation_ReturnValue3' has a wrong offset!");
static_assert(offsetof(B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine, K2Node_Select_Default) == 0x000128, "Member 'B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine, CallFunc_SelectFloat_ReturnValue) == 0x000130, "Member 'B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000138, "Member 'B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine, CallFunc_CreateDynamicMaterialInstance_ReturnValue1) == 0x000140, "Member 'B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine::CallFunc_CreateDynamicMaterialInstance_ReturnValue1' has a wrong offset!");
static_assert(offsetof(B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine, CallFunc_SelectFloat_ReturnValue1) == 0x000148, "Member 'B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine::CallFunc_SelectFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine, CallFunc_MakeRotator_ReturnValue) == 0x00014C, "Member 'B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine, CallFunc_K2_SetRelativeRotation_SweepHitResult1) == 0x000158, "Member 'B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine::CallFunc_K2_SetRelativeRotation_SweepHitResult1' has a wrong offset!");
static_assert(offsetof(B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine, CallFunc_GetTimeSeconds_ReturnValue) == 0x0001E0, "Member 'B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine, CallFunc_EvaluateCurveTableRow_OutXY) == 0x0001E4, "Member 'B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine::CallFunc_EvaluateCurveTableRow_OutXY' has a wrong offset!");
static_assert(offsetof(B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine, CallFunc_EvaluateCurveTableRow_ReturnValue) == 0x0001E8, "Member 'B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine::CallFunc_EvaluateCurveTableRow_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine, CallFunc_EvaluateCurveTableRow_OutXY1) == 0x0001EC, "Member 'B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine::CallFunc_EvaluateCurveTableRow_OutXY1' has a wrong offset!");
static_assert(offsetof(B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine, CallFunc_EvaluateCurveTableRow_ReturnValue1) == 0x0001F0, "Member 'B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine::CallFunc_EvaluateCurveTableRow_ReturnValue1' has a wrong offset!");
static_assert(offsetof(B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x0001F1, "Member 'B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine, CallFunc_GetOverrideRarity_Rarity) == 0x0001F2, "Member 'B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine::CallFunc_GetOverrideRarity_Rarity' has a wrong offset!");
static_assert(offsetof(B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine, CallFunc_GetOverrideRarity_ReturnValue) == 0x0001F3, "Member 'B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine::CallFunc_GetOverrideRarity_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine, CallFunc_Conv_ByteToInt_ReturnValue) == 0x0001F4, "Member 'B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine, K2Node_Select1_Default) == 0x0001F8, "Member 'B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine, K2Node_SwitchInteger_CmpSuccess) == 0x0001FC, "Member 'B_Athena_VendingMachine_C_ExecuteUbergraph_B_Athena_VendingMachine::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function B_Athena_VendingMachine.B_Athena_VendingMachine_C.UpdateCollectorsActiveItem
// 0x0030 (0x0030 - 0x0000)
struct B_Athena_VendingMachine_C_UpdateCollectorsActiveItem final
{
public:
	int32                                         StartingSeedValue;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortWorldItemDefinition*               InputItem;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               InputTexture;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentGoal;                                       // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentCollectedAmount;                            // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_CurrentCaptureCount;                         // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               OutputTexture;                                     // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Athena_VendingMachine_C_UpdateCollectorsActiveItem) == 0x000008, "Wrong alignment on B_Athena_VendingMachine_C_UpdateCollectorsActiveItem");
static_assert(sizeof(B_Athena_VendingMachine_C_UpdateCollectorsActiveItem) == 0x000030, "Wrong size on B_Athena_VendingMachine_C_UpdateCollectorsActiveItem");
static_assert(offsetof(B_Athena_VendingMachine_C_UpdateCollectorsActiveItem, StartingSeedValue) == 0x000000, "Member 'B_Athena_VendingMachine_C_UpdateCollectorsActiveItem::StartingSeedValue' has a wrong offset!");
static_assert(offsetof(B_Athena_VendingMachine_C_UpdateCollectorsActiveItem, InputItem) == 0x000008, "Member 'B_Athena_VendingMachine_C_UpdateCollectorsActiveItem::InputItem' has a wrong offset!");
static_assert(offsetof(B_Athena_VendingMachine_C_UpdateCollectorsActiveItem, InputTexture) == 0x000010, "Member 'B_Athena_VendingMachine_C_UpdateCollectorsActiveItem::InputTexture' has a wrong offset!");
static_assert(offsetof(B_Athena_VendingMachine_C_UpdateCollectorsActiveItem, CurrentGoal) == 0x000018, "Member 'B_Athena_VendingMachine_C_UpdateCollectorsActiveItem::CurrentGoal' has a wrong offset!");
static_assert(offsetof(B_Athena_VendingMachine_C_UpdateCollectorsActiveItem, CurrentCollectedAmount) == 0x00001C, "Member 'B_Athena_VendingMachine_C_UpdateCollectorsActiveItem::CurrentCollectedAmount' has a wrong offset!");
static_assert(offsetof(B_Athena_VendingMachine_C_UpdateCollectorsActiveItem, Param_CurrentCaptureCount) == 0x000020, "Member 'B_Athena_VendingMachine_C_UpdateCollectorsActiveItem::Param_CurrentCaptureCount' has a wrong offset!");
static_assert(offsetof(B_Athena_VendingMachine_C_UpdateCollectorsActiveItem, OutputTexture) == 0x000028, "Member 'B_Athena_VendingMachine_C_UpdateCollectorsActiveItem::OutputTexture' has a wrong offset!");

// Function B_Athena_VendingMachine.B_Athena_VendingMachine_C.BlueprintOnInteract
// 0x0008 (0x0008 - 0x0000)
struct B_Athena_VendingMachine_C_BlueprintOnInteract final
{
public:
	const class AFortPawn*                        InteractingPawn;                                   // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Athena_VendingMachine_C_BlueprintOnInteract) == 0x000008, "Wrong alignment on B_Athena_VendingMachine_C_BlueprintOnInteract");
static_assert(sizeof(B_Athena_VendingMachine_C_BlueprintOnInteract) == 0x000008, "Wrong size on B_Athena_VendingMachine_C_BlueprintOnInteract");
static_assert(offsetof(B_Athena_VendingMachine_C_BlueprintOnInteract, InteractingPawn) == 0x000000, "Member 'B_Athena_VendingMachine_C_BlueprintOnInteract::InteractingPawn' has a wrong offset!");

// Function B_Athena_VendingMachine.B_Athena_VendingMachine_C.SetRarityColors
// 0x0010 (0x0010 - 0x0000)
struct B_Athena_VendingMachine_C_SetRarityColors final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Athena_VendingMachine_C_SetRarityColors) == 0x000004, "Wrong alignment on B_Athena_VendingMachine_C_SetRarityColors");
static_assert(sizeof(B_Athena_VendingMachine_C_SetRarityColors) == 0x000010, "Wrong size on B_Athena_VendingMachine_C_SetRarityColors");
static_assert(offsetof(B_Athena_VendingMachine_C_SetRarityColors, Color) == 0x000000, "Member 'B_Athena_VendingMachine_C_SetRarityColors::Color' has a wrong offset!");

// Function B_Athena_VendingMachine.B_Athena_VendingMachine_C.BlueprintGetInteractionString
// 0x0088 (0x0088 - 0x0000)
struct B_Athena_VendingMachine_C_BlueprintGetInteractionString final
{
public:
	const class AFortPawn*                        InteractingPawn;                                   // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue1;               // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue2;               // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0070(0x0018)()
};
static_assert(alignof(B_Athena_VendingMachine_C_BlueprintGetInteractionString) == 0x000008, "Wrong alignment on B_Athena_VendingMachine_C_BlueprintGetInteractionString");
static_assert(sizeof(B_Athena_VendingMachine_C_BlueprintGetInteractionString) == 0x000088, "Wrong size on B_Athena_VendingMachine_C_BlueprintGetInteractionString");
static_assert(offsetof(B_Athena_VendingMachine_C_BlueprintGetInteractionString, InteractingPawn) == 0x000000, "Member 'B_Athena_VendingMachine_C_BlueprintGetInteractionString::InteractingPawn' has a wrong offset!");
static_assert(offsetof(B_Athena_VendingMachine_C_BlueprintGetInteractionString, ReturnValue) == 0x000008, "Member 'B_Athena_VendingMachine_C_BlueprintGetInteractionString::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Athena_VendingMachine_C_BlueprintGetInteractionString, CallFunc_Conv_IntToString_ReturnValue) == 0x000020, "Member 'B_Athena_VendingMachine_C_BlueprintGetInteractionString::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Athena_VendingMachine_C_BlueprintGetInteractionString, CallFunc_Conv_TextToString_ReturnValue) == 0x000030, "Member 'B_Athena_VendingMachine_C_BlueprintGetInteractionString::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Athena_VendingMachine_C_BlueprintGetInteractionString, CallFunc_Concat_StrStr_ReturnValue) == 0x000040, "Member 'B_Athena_VendingMachine_C_BlueprintGetInteractionString::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Athena_VendingMachine_C_BlueprintGetInteractionString, CallFunc_Concat_StrStr_ReturnValue1) == 0x000050, "Member 'B_Athena_VendingMachine_C_BlueprintGetInteractionString::CallFunc_Concat_StrStr_ReturnValue1' has a wrong offset!");
static_assert(offsetof(B_Athena_VendingMachine_C_BlueprintGetInteractionString, CallFunc_Concat_StrStr_ReturnValue2) == 0x000060, "Member 'B_Athena_VendingMachine_C_BlueprintGetInteractionString::CallFunc_Concat_StrStr_ReturnValue2' has a wrong offset!");
static_assert(offsetof(B_Athena_VendingMachine_C_BlueprintGetInteractionString, CallFunc_Conv_StringToText_ReturnValue) == 0x000070, "Member 'B_Athena_VendingMachine_C_BlueprintGetInteractionString::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function B_Athena_VendingMachine.B_Athena_VendingMachine_C.GetOverrideRarity
// 0x0006 (0x0006 - 0x0000)
struct B_Athena_VendingMachine_C_GetOverrideRarity final
{
public:
	EFortRarity                                   Rarity;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          bHasOverride;                                      // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortRarity                                   NewRarity;                                         // 0x0003(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortRarity                                   CallFunc_GetOverrideRarity_Rarity;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetOverrideRarity_ReturnValue;            // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_Athena_VendingMachine_C_GetOverrideRarity) == 0x000001, "Wrong alignment on B_Athena_VendingMachine_C_GetOverrideRarity");
static_assert(sizeof(B_Athena_VendingMachine_C_GetOverrideRarity) == 0x000006, "Wrong size on B_Athena_VendingMachine_C_GetOverrideRarity");
static_assert(offsetof(B_Athena_VendingMachine_C_GetOverrideRarity, Rarity) == 0x000000, "Member 'B_Athena_VendingMachine_C_GetOverrideRarity::Rarity' has a wrong offset!");
static_assert(offsetof(B_Athena_VendingMachine_C_GetOverrideRarity, ReturnValue) == 0x000001, "Member 'B_Athena_VendingMachine_C_GetOverrideRarity::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Athena_VendingMachine_C_GetOverrideRarity, bHasOverride) == 0x000002, "Member 'B_Athena_VendingMachine_C_GetOverrideRarity::bHasOverride' has a wrong offset!");
static_assert(offsetof(B_Athena_VendingMachine_C_GetOverrideRarity, NewRarity) == 0x000003, "Member 'B_Athena_VendingMachine_C_GetOverrideRarity::NewRarity' has a wrong offset!");
static_assert(offsetof(B_Athena_VendingMachine_C_GetOverrideRarity, CallFunc_GetOverrideRarity_Rarity) == 0x000004, "Member 'B_Athena_VendingMachine_C_GetOverrideRarity::CallFunc_GetOverrideRarity_Rarity' has a wrong offset!");
static_assert(offsetof(B_Athena_VendingMachine_C_GetOverrideRarity, CallFunc_GetOverrideRarity_ReturnValue) == 0x000005, "Member 'B_Athena_VendingMachine_C_GetOverrideRarity::CallFunc_GetOverrideRarity_ReturnValue' has a wrong offset!");

}

