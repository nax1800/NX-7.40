#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Perk_H_FrozenCastle_FreezeOnHit

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "GAT_GenericTriggeredAbility_Perk_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Perk_H_FrozenCastle_FreezeOnHit.GA_Perk_H_FrozenCastle_FreezeOnHit_C
// 0x00A8 (0x0B18 - 0x0A70)
class UGA_Perk_H_FrozenCastle_FreezeOnHit_C final : public UGAT_GenericTriggeredAbility_Perk_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_GA_Perk_H_FrozenCastle_FreezeOnHit_C; // 0x0A70(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UClass*                                 GE_Freeze;                                         // 0x0A78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  TC_FrozenCastle_Cooldown_Tag;                      // 0x0A80(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTag                           TC_Fire_NPC;                                       // 0x0AA0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           TC_Lightning_NPC;                                  // 0x0AA8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         FreezeDurationModifier;                            // 0x0AB0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FreezeVulnerabilityModifier;                       // 0x0AB4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         FreezeDurationDefault;                             // 0x0AB8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         FreezeVulnerabilityDefault;                        // 0x0AD8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  TC_Melee_Tag;                                      // 0x0AF8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_GA_Perk_H_FrozenCastle_FreezeOnHit(int32 EntryPoint);
	void K2_ActivateAbilityFromEvent(const struct FGameplayEventData& Param_EventData);

	bool K2_ShouldAbilityRespondToEvent(const struct FGameplayAbilityActorInfo& ActorInfo, const struct FGameplayEventData& Payload) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Perk_H_FrozenCastle_FreezeOnHit_C">();
	}
	static class UGA_Perk_H_FrozenCastle_FreezeOnHit_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Perk_H_FrozenCastle_FreezeOnHit_C>();
	}
};
static_assert(alignof(UGA_Perk_H_FrozenCastle_FreezeOnHit_C) == 0x000008, "Wrong alignment on UGA_Perk_H_FrozenCastle_FreezeOnHit_C");
static_assert(sizeof(UGA_Perk_H_FrozenCastle_FreezeOnHit_C) == 0x000B18, "Wrong size on UGA_Perk_H_FrozenCastle_FreezeOnHit_C");
static_assert(offsetof(UGA_Perk_H_FrozenCastle_FreezeOnHit_C, UberGraphFrame_GA_Perk_H_FrozenCastle_FreezeOnHit_C) == 0x000A70, "Member 'UGA_Perk_H_FrozenCastle_FreezeOnHit_C::UberGraphFrame_GA_Perk_H_FrozenCastle_FreezeOnHit_C' has a wrong offset!");
static_assert(offsetof(UGA_Perk_H_FrozenCastle_FreezeOnHit_C, GE_Freeze) == 0x000A78, "Member 'UGA_Perk_H_FrozenCastle_FreezeOnHit_C::GE_Freeze' has a wrong offset!");
static_assert(offsetof(UGA_Perk_H_FrozenCastle_FreezeOnHit_C, TC_FrozenCastle_Cooldown_Tag) == 0x000A80, "Member 'UGA_Perk_H_FrozenCastle_FreezeOnHit_C::TC_FrozenCastle_Cooldown_Tag' has a wrong offset!");
static_assert(offsetof(UGA_Perk_H_FrozenCastle_FreezeOnHit_C, TC_Fire_NPC) == 0x000AA0, "Member 'UGA_Perk_H_FrozenCastle_FreezeOnHit_C::TC_Fire_NPC' has a wrong offset!");
static_assert(offsetof(UGA_Perk_H_FrozenCastle_FreezeOnHit_C, TC_Lightning_NPC) == 0x000AA8, "Member 'UGA_Perk_H_FrozenCastle_FreezeOnHit_C::TC_Lightning_NPC' has a wrong offset!");
static_assert(offsetof(UGA_Perk_H_FrozenCastle_FreezeOnHit_C, FreezeDurationModifier) == 0x000AB0, "Member 'UGA_Perk_H_FrozenCastle_FreezeOnHit_C::FreezeDurationModifier' has a wrong offset!");
static_assert(offsetof(UGA_Perk_H_FrozenCastle_FreezeOnHit_C, FreezeVulnerabilityModifier) == 0x000AB4, "Member 'UGA_Perk_H_FrozenCastle_FreezeOnHit_C::FreezeVulnerabilityModifier' has a wrong offset!");
static_assert(offsetof(UGA_Perk_H_FrozenCastle_FreezeOnHit_C, FreezeDurationDefault) == 0x000AB8, "Member 'UGA_Perk_H_FrozenCastle_FreezeOnHit_C::FreezeDurationDefault' has a wrong offset!");
static_assert(offsetof(UGA_Perk_H_FrozenCastle_FreezeOnHit_C, FreezeVulnerabilityDefault) == 0x000AD8, "Member 'UGA_Perk_H_FrozenCastle_FreezeOnHit_C::FreezeVulnerabilityDefault' has a wrong offset!");
static_assert(offsetof(UGA_Perk_H_FrozenCastle_FreezeOnHit_C, TC_Melee_Tag) == 0x000AF8, "Member 'UGA_Perk_H_FrozenCastle_FreezeOnHit_C::TC_Melee_Tag' has a wrong offset!");

}

