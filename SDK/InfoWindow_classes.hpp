#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: InfoWindow

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass InfoWindow.InfoWindow_C
// 0x0048 (0x0398 - 0x0350)
class UInfoWindow_C final : public UFortInfoWindow
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UIconTextButton_C*                      CloseButton;                                       // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFortItemIcon*                          EntryIcon;                                         // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       EntryText;                                         // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULightbox_C*                            Lightbox;                                          // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_1;                                         // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Title;                                             // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	UMulticastDelegateProperty_                   OnInfoIndowClosed;                                 // 0x0388(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void OnInfoIndowClosed__DelegateSignature();
	void ExecuteUbergraph_InfoWindow(int32 EntryPoint);
	void Set_Info(class UFortItemDefinition* Entry_Item_Definition);
	void BndEvt__InfoButtons_K2Node_ComponentBoundEvent_212_OnListViewItemWidgetCreated__DelegateSignature(class UUserWidget* Widget);
	void OnBeginIntro();
	void OnBeginOutro();
	void BndEvt__Lightbox_K2Node_ComponentBoundEvent_1_OutroEnded__DelegateSignature();
	void BndEvt__Lightbox_K2Node_ComponentBoundEvent_0_IntroEnded__DelegateSignature();
	void Destruct();
	void Construct();
	void BndEvt__IconTextButton_K2Node_ComponentBoundEvent_37_CommonButtonClicked__DelegateSignature(class UCommonButton* Button);
	void AddInfo(TArray<class UFortItemDefinition*>& Info_Items, const class FText& Param_Title);
	void Initialize();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"InfoWindow_C">();
	}
	static class UInfoWindow_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInfoWindow_C>();
	}
};
static_assert(alignof(UInfoWindow_C) == 0x000008, "Wrong alignment on UInfoWindow_C");
static_assert(sizeof(UInfoWindow_C) == 0x000398, "Wrong size on UInfoWindow_C");
static_assert(offsetof(UInfoWindow_C, UberGraphFrame) == 0x000350, "Member 'UInfoWindow_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UInfoWindow_C, CloseButton) == 0x000358, "Member 'UInfoWindow_C::CloseButton' has a wrong offset!");
static_assert(offsetof(UInfoWindow_C, EntryIcon) == 0x000360, "Member 'UInfoWindow_C::EntryIcon' has a wrong offset!");
static_assert(offsetof(UInfoWindow_C, EntryText) == 0x000368, "Member 'UInfoWindow_C::EntryText' has a wrong offset!");
static_assert(offsetof(UInfoWindow_C, Lightbox) == 0x000370, "Member 'UInfoWindow_C::Lightbox' has a wrong offset!");
static_assert(offsetof(UInfoWindow_C, SizeBox_1) == 0x000378, "Member 'UInfoWindow_C::SizeBox_1' has a wrong offset!");
static_assert(offsetof(UInfoWindow_C, Title) == 0x000380, "Member 'UInfoWindow_C::Title' has a wrong offset!");
static_assert(offsetof(UInfoWindow_C, OnInfoIndowClosed) == 0x000388, "Member 'UInfoWindow_C::OnInfoIndowClosed' has a wrong offset!");

}

