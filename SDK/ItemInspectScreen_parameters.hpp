#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ItemInspectScreen

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "CommonUI_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function ItemInspectScreen.ItemInspectScreen_C.ExecuteUbergraph_ItemInspectScreen
// 0x0228 (0x0228 - 0x0000)
struct ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortDialogResult                             Temp_byte_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortGlobalUIContext*                   CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UItemInspectRefundRayImage_C*           CallFunc_Create_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UItemInspectRefundRayImage_C*           CallFunc_Create_ReturnValue1;                      // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortDialogResult                             K2Node_CustomEvent_Result;                         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_ResultName;                     // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EFortDialogResult Result, class FName ResultName)> K2Node_CreateDelegate_OutputDelegate;              // 0x0034(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable1;                               // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortDialogResult                             Temp_byte_Variable1;                               // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HandleBack_Passthrough;                   // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F[0x1];                                       // 0x004F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItem*                              K2Node_ComponentBoundEvent_Item1;                  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_RecipeIndex1;           // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetLevel_ReturnValue;                     // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMaxLevel_ReturnValue;                  // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortDialogResult                             K2Node_CustomEvent_Result1;                        // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66[0x2];                                       // 0x0066(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_ResultName1;                    // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_ComponentBoundEvent_TabId;                  // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonButton*                          K2Node_ComponentBoundEvent_TabButton;              // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bUsingGamepad;                        // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItemInspectCycleWidget*            CallFunc_GetCycleWidget_ReturnValue;               // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UFortItem* NewItemToRepresent)> K2Node_CreateDelegate_OutputDelegate1;             // 0x0090(0x0010)(ZeroConstructor, NoDestructor)
	class UFortItemInspectCycleWidget*            CallFunc_GetCycleWidget_ReturnValue1;              // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UFortItem* NewItemToRepresent)> K2Node_CreateDelegate_OutputDelegate2;             // 0x00A8(0x0010)(ZeroConstructor, NoDestructor)
	class UFortItem*                              K2Node_ComponentBoundEvent_ItemToEvolve;           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_EvolutionIndex;         // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EFortDialogResult Result, class FName ResultName)> K2Node_CreateDelegate_OutputDelegate3;             // 0x00C4(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItem*                              K2Node_ComponentBoundEvent_Item;                   // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_RecipeIndex;            // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItemInspectCycleWidget*            CallFunc_GetCycleWidget_ReturnValue2;              // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortMcpContext*                        CallFunc_GetContext_ReturnValue;                   // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortMcpContext*                        CallFunc_GetContext_ReturnValue1;                  // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_GetWindowTitleBarVisibility_ReturnValue;  // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_102[0x6];                                      // 0x0102(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortFrontEndContext*                   CallFunc_GetContext_ReturnValue2;                  // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HandleBack_PassThrough1;                  // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAsyncAction_MCPContextUpgradeItem* CallFunc_UpgradeItem_ReturnValue;                  // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_122[0x6];                                      // 0x0122(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAccountItem*                       K2Node_CustomEvent_ItemToRefund;                   // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldShowRefundMessage_ShouldShowRefundMessage; // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_ShouldShowRefundMessage_RefundDescriptionText; // 0x0138(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0150(0x0040)(HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate4;             // 0x0190(0x0010)(ZeroConstructor, NoDestructor)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01A0(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01B0(0x0018)()
	class UFortAsyncAction_ShowConfirmation_NUI*  CallFunc_ShowSimpleConfirmationDialog_CustomInput_ReturnValue; // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortRuntimeOptions*                    CallFunc_GetRuntimeOptions_ReturnValue;            // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D9[0x7];                                      // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortMcpContext*                        CallFunc_GetContext_ReturnValue3;                  // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FConfirmationDialogAction>      CallFunc_GetRefundHelpActions_ConfirmActions;      // 0x01E8(0x0010)(ZeroConstructor, ReferenceParm)
	class FName                                   CallFunc_GetRefundHelpActions_DeclineAction;       // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortFrontEndContext*                   CallFunc_GetContext_ReturnValue4;                  // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortAsyncAction_ShowConfirmation_NUI*  CallFunc_ShowConfirmationDialog_NUI_ReturnValue;   // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_211[0x7];                                      // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortFrontEndContext*                   CallFunc_GetContext_ReturnValue5;                  // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortMcpContext*                        CallFunc_GetContext_ReturnValue6;                  // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen) == 0x000008, "Wrong alignment on ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen");
static_assert(sizeof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen) == 0x000228, "Wrong size on ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, EntryPoint) == 0x000000, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::EntryPoint' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, Temp_name_Variable) == 0x000004, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, Temp_byte_Variable) == 0x00000C, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, CallFunc_EqualEqual_NameName_ReturnValue) == 0x00000D, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000010, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, CallFunc_Create_ReturnValue) == 0x000018, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, CallFunc_Create_ReturnValue1) == 0x000020, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::CallFunc_Create_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, K2Node_CustomEvent_Result) == 0x000028, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::K2Node_CustomEvent_Result' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, K2Node_CustomEvent_ResultName) == 0x00002C, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::K2Node_CustomEvent_ResultName' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, K2Node_CreateDelegate_OutputDelegate) == 0x000034, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, Temp_name_Variable1) == 0x000044, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::Temp_name_Variable1' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, Temp_byte_Variable1) == 0x00004C, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00004D, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, CallFunc_HandleBack_Passthrough) == 0x00004E, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::CallFunc_HandleBack_Passthrough' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, K2Node_ComponentBoundEvent_Item1) == 0x000050, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::K2Node_ComponentBoundEvent_Item1' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, K2Node_ComponentBoundEvent_RecipeIndex1) == 0x000058, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::K2Node_ComponentBoundEvent_RecipeIndex1' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, CallFunc_GetLevel_ReturnValue) == 0x00005C, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::CallFunc_GetLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, CallFunc_GetMaxLevel_ReturnValue) == 0x000060, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::CallFunc_GetMaxLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, CallFunc_Less_IntInt_ReturnValue) == 0x000064, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, K2Node_CustomEvent_Result1) == 0x000065, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::K2Node_CustomEvent_Result1' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, K2Node_CustomEvent_ResultName1) == 0x000068, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::K2Node_CustomEvent_ResultName1' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, K2Node_ComponentBoundEvent_TabId) == 0x000070, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::K2Node_ComponentBoundEvent_TabId' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, K2Node_ComponentBoundEvent_TabButton) == 0x000078, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::K2Node_ComponentBoundEvent_TabButton' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, K2Node_Event_bUsingGamepad) == 0x000080, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::K2Node_Event_bUsingGamepad' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, CallFunc_GetCycleWidget_ReturnValue) == 0x000088, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::CallFunc_GetCycleWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, K2Node_CreateDelegate_OutputDelegate1) == 0x000090, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, CallFunc_GetCycleWidget_ReturnValue1) == 0x0000A0, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::CallFunc_GetCycleWidget_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, K2Node_CreateDelegate_OutputDelegate2) == 0x0000A8, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, K2Node_ComponentBoundEvent_ItemToEvolve) == 0x0000B8, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::K2Node_ComponentBoundEvent_ItemToEvolve' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, K2Node_ComponentBoundEvent_EvolutionIndex) == 0x0000C0, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::K2Node_ComponentBoundEvent_EvolutionIndex' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, K2Node_CreateDelegate_OutputDelegate3) == 0x0000C4, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, K2Node_ComponentBoundEvent_Item) == 0x0000D8, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::K2Node_ComponentBoundEvent_Item' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, K2Node_ComponentBoundEvent_RecipeIndex) == 0x0000E0, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::K2Node_ComponentBoundEvent_RecipeIndex' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, CallFunc_GetCycleWidget_ReturnValue2) == 0x0000E8, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::CallFunc_GetCycleWidget_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, CallFunc_GetContext_ReturnValue) == 0x0000F0, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, CallFunc_GetContext_ReturnValue1) == 0x0000F8, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::CallFunc_GetContext_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, CallFunc_IsValid_ReturnValue) == 0x000100, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, CallFunc_GetWindowTitleBarVisibility_ReturnValue) == 0x000101, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::CallFunc_GetWindowTitleBarVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, CallFunc_GetContext_ReturnValue2) == 0x000108, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::CallFunc_GetContext_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, CallFunc_HandleBack_PassThrough1) == 0x000110, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::CallFunc_HandleBack_PassThrough1' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, CallFunc_UpgradeItem_ReturnValue) == 0x000118, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::CallFunc_UpgradeItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, CallFunc_IsValid_ReturnValue1) == 0x000120, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, K2Node_SwitchEnum_CmpSuccess) == 0x000121, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, K2Node_CustomEvent_ItemToRefund) == 0x000128, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::K2Node_CustomEvent_ItemToRefund' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, CallFunc_ShouldShowRefundMessage_ShouldShowRefundMessage) == 0x000130, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::CallFunc_ShouldShowRefundMessage_ShouldShowRefundMessage' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, CallFunc_ShouldShowRefundMessage_RefundDescriptionText) == 0x000138, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::CallFunc_ShouldShowRefundMessage_RefundDescriptionText' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, K2Node_MakeStruct_FormatArgumentData) == 0x000150, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, K2Node_CreateDelegate_OutputDelegate4) == 0x000190, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::K2Node_CreateDelegate_OutputDelegate4' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, K2Node_MakeArray_Array) == 0x0001A0, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, CallFunc_Format_ReturnValue) == 0x0001B0, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, CallFunc_ShowSimpleConfirmationDialog_CustomInput_ReturnValue) == 0x0001C8, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::CallFunc_ShowSimpleConfirmationDialog_CustomInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, CallFunc_GetRuntimeOptions_ReturnValue) == 0x0001D0, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::CallFunc_GetRuntimeOptions_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, CallFunc_IsValid_ReturnValue2) == 0x0001D8, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, CallFunc_GetContext_ReturnValue3) == 0x0001E0, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::CallFunc_GetContext_ReturnValue3' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, CallFunc_GetRefundHelpActions_ConfirmActions) == 0x0001E8, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::CallFunc_GetRefundHelpActions_ConfirmActions' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, CallFunc_GetRefundHelpActions_DeclineAction) == 0x0001F8, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::CallFunc_GetRefundHelpActions_DeclineAction' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, CallFunc_GetContext_ReturnValue4) == 0x000200, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::CallFunc_GetContext_ReturnValue4' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, CallFunc_ShowConfirmationDialog_NUI_ReturnValue) == 0x000208, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::CallFunc_ShowConfirmationDialog_NUI_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, CallFunc_IsValid_ReturnValue3) == 0x000210, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, CallFunc_GetContext_ReturnValue5) == 0x000218, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::CallFunc_GetContext_ReturnValue5' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, CallFunc_GetContext_ReturnValue6) == 0x000220, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::CallFunc_GetContext_ReturnValue6' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.OnRefundItemConfirmed
// 0x0008 (0x0008 - 0x0000)
struct ItemInspectScreen_C_OnRefundItemConfirmed final
{
public:
	class UFortAccountItem*                       ItemToRefund;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemInspectScreen_C_OnRefundItemConfirmed) == 0x000008, "Wrong alignment on ItemInspectScreen_C_OnRefundItemConfirmed");
static_assert(sizeof(ItemInspectScreen_C_OnRefundItemConfirmed) == 0x000008, "Wrong size on ItemInspectScreen_C_OnRefundItemConfirmed");
static_assert(offsetof(ItemInspectScreen_C_OnRefundItemConfirmed, ItemToRefund) == 0x000000, "Member 'ItemInspectScreen_C_OnRefundItemConfirmed::ItemToRefund' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.BndEvt__ItemInspectEvolveRarityConfirmation_K2Node_ComponentBoundEvent_2_OnEvolutionOptionSelected__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ItemInspectScreen_C_BndEvt__ItemInspectEvolveRarityConfirmation_K2Node_ComponentBoundEvent_2_OnEvolutionOptionSelected__DelegateSignature final
{
public:
	class UFortItem*                              Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RecipeIndex;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemInspectScreen_C_BndEvt__ItemInspectEvolveRarityConfirmation_K2Node_ComponentBoundEvent_2_OnEvolutionOptionSelected__DelegateSignature) == 0x000008, "Wrong alignment on ItemInspectScreen_C_BndEvt__ItemInspectEvolveRarityConfirmation_K2Node_ComponentBoundEvent_2_OnEvolutionOptionSelected__DelegateSignature");
static_assert(sizeof(ItemInspectScreen_C_BndEvt__ItemInspectEvolveRarityConfirmation_K2Node_ComponentBoundEvent_2_OnEvolutionOptionSelected__DelegateSignature) == 0x000010, "Wrong size on ItemInspectScreen_C_BndEvt__ItemInspectEvolveRarityConfirmation_K2Node_ComponentBoundEvent_2_OnEvolutionOptionSelected__DelegateSignature");
static_assert(offsetof(ItemInspectScreen_C_BndEvt__ItemInspectEvolveRarityConfirmation_K2Node_ComponentBoundEvent_2_OnEvolutionOptionSelected__DelegateSignature, Item) == 0x000000, "Member 'ItemInspectScreen_C_BndEvt__ItemInspectEvolveRarityConfirmation_K2Node_ComponentBoundEvent_2_OnEvolutionOptionSelected__DelegateSignature::Item' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_BndEvt__ItemInspectEvolveRarityConfirmation_K2Node_ComponentBoundEvent_2_OnEvolutionOptionSelected__DelegateSignature, RecipeIndex) == 0x000008, "Member 'ItemInspectScreen_C_BndEvt__ItemInspectEvolveRarityConfirmation_K2Node_ComponentBoundEvent_2_OnEvolutionOptionSelected__DelegateSignature::RecipeIndex' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.BndEvt__ItemInspectEvolutionConfirmation_K2Node_ComponentBoundEvent_4_OnEvolutionConfirm__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ItemInspectScreen_C_BndEvt__ItemInspectEvolutionConfirmation_K2Node_ComponentBoundEvent_4_OnEvolutionConfirm__DelegateSignature final
{
public:
	class UFortItem*                              ItemToEvolve;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         EvolutionIndex;                                    // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemInspectScreen_C_BndEvt__ItemInspectEvolutionConfirmation_K2Node_ComponentBoundEvent_4_OnEvolutionConfirm__DelegateSignature) == 0x000008, "Wrong alignment on ItemInspectScreen_C_BndEvt__ItemInspectEvolutionConfirmation_K2Node_ComponentBoundEvent_4_OnEvolutionConfirm__DelegateSignature");
static_assert(sizeof(ItemInspectScreen_C_BndEvt__ItemInspectEvolutionConfirmation_K2Node_ComponentBoundEvent_4_OnEvolutionConfirm__DelegateSignature) == 0x000010, "Wrong size on ItemInspectScreen_C_BndEvt__ItemInspectEvolutionConfirmation_K2Node_ComponentBoundEvent_4_OnEvolutionConfirm__DelegateSignature");
static_assert(offsetof(ItemInspectScreen_C_BndEvt__ItemInspectEvolutionConfirmation_K2Node_ComponentBoundEvent_4_OnEvolutionConfirm__DelegateSignature, ItemToEvolve) == 0x000000, "Member 'ItemInspectScreen_C_BndEvt__ItemInspectEvolutionConfirmation_K2Node_ComponentBoundEvent_4_OnEvolutionConfirm__DelegateSignature::ItemToEvolve' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_BndEvt__ItemInspectEvolutionConfirmation_K2Node_ComponentBoundEvent_4_OnEvolutionConfirm__DelegateSignature, EvolutionIndex) == 0x000008, "Member 'ItemInspectScreen_C_BndEvt__ItemInspectEvolutionConfirmation_K2Node_ComponentBoundEvent_4_OnEvolutionConfirm__DelegateSignature::EvolutionIndex' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.OnInputModeChanged
// 0x0001 (0x0001 - 0x0000)
struct ItemInspectScreen_C_OnInputModeChanged final
{
public:
	bool                                          bUsingGamepad;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemInspectScreen_C_OnInputModeChanged) == 0x000001, "Wrong alignment on ItemInspectScreen_C_OnInputModeChanged");
static_assert(sizeof(ItemInspectScreen_C_OnInputModeChanged) == 0x000001, "Wrong size on ItemInspectScreen_C_OnInputModeChanged");
static_assert(offsetof(ItemInspectScreen_C_OnInputModeChanged, bUsingGamepad) == 0x000000, "Member 'ItemInspectScreen_C_OnInputModeChanged::bUsingGamepad' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.BndEvt__DetailPanelTabList-PC_K2Node_ComponentBoundEvent_385_OnTabButtonCreated__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ItemInspectScreen_C_BndEvt__DetailPanelTabListMinusPC_K2Node_ComponentBoundEvent_385_OnTabButtonCreated__DelegateSignature final
{
public:
	class FName                                   TabId;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonButton*                          TabButton;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemInspectScreen_C_BndEvt__DetailPanelTabListMinusPC_K2Node_ComponentBoundEvent_385_OnTabButtonCreated__DelegateSignature) == 0x000008, "Wrong alignment on ItemInspectScreen_C_BndEvt__DetailPanelTabListMinusPC_K2Node_ComponentBoundEvent_385_OnTabButtonCreated__DelegateSignature");
static_assert(sizeof(ItemInspectScreen_C_BndEvt__DetailPanelTabListMinusPC_K2Node_ComponentBoundEvent_385_OnTabButtonCreated__DelegateSignature) == 0x000010, "Wrong size on ItemInspectScreen_C_BndEvt__DetailPanelTabListMinusPC_K2Node_ComponentBoundEvent_385_OnTabButtonCreated__DelegateSignature");
static_assert(offsetof(ItemInspectScreen_C_BndEvt__DetailPanelTabListMinusPC_K2Node_ComponentBoundEvent_385_OnTabButtonCreated__DelegateSignature, TabId) == 0x000000, "Member 'ItemInspectScreen_C_BndEvt__DetailPanelTabListMinusPC_K2Node_ComponentBoundEvent_385_OnTabButtonCreated__DelegateSignature::TabId' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_BndEvt__DetailPanelTabListMinusPC_K2Node_ComponentBoundEvent_385_OnTabButtonCreated__DelegateSignature, TabButton) == 0x000008, "Member 'ItemInspectScreen_C_BndEvt__DetailPanelTabListMinusPC_K2Node_ComponentBoundEvent_385_OnTabButtonCreated__DelegateSignature::TabButton' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.BndEvt__ItemInspectEvolutionConfirmation_K2Node_ComponentBoundEvent_2_OnEvolutionOptionSelected__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ItemInspectScreen_C_BndEvt__ItemInspectEvolutionConfirmation_K2Node_ComponentBoundEvent_2_OnEvolutionOptionSelected__DelegateSignature final
{
public:
	class UFortItem*                              Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RecipeIndex;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemInspectScreen_C_BndEvt__ItemInspectEvolutionConfirmation_K2Node_ComponentBoundEvent_2_OnEvolutionOptionSelected__DelegateSignature) == 0x000008, "Wrong alignment on ItemInspectScreen_C_BndEvt__ItemInspectEvolutionConfirmation_K2Node_ComponentBoundEvent_2_OnEvolutionOptionSelected__DelegateSignature");
static_assert(sizeof(ItemInspectScreen_C_BndEvt__ItemInspectEvolutionConfirmation_K2Node_ComponentBoundEvent_2_OnEvolutionOptionSelected__DelegateSignature) == 0x000010, "Wrong size on ItemInspectScreen_C_BndEvt__ItemInspectEvolutionConfirmation_K2Node_ComponentBoundEvent_2_OnEvolutionOptionSelected__DelegateSignature");
static_assert(offsetof(ItemInspectScreen_C_BndEvt__ItemInspectEvolutionConfirmation_K2Node_ComponentBoundEvent_2_OnEvolutionOptionSelected__DelegateSignature, Item) == 0x000000, "Member 'ItemInspectScreen_C_BndEvt__ItemInspectEvolutionConfirmation_K2Node_ComponentBoundEvent_2_OnEvolutionOptionSelected__DelegateSignature::Item' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_BndEvt__ItemInspectEvolutionConfirmation_K2Node_ComponentBoundEvent_2_OnEvolutionOptionSelected__DelegateSignature, RecipeIndex) == 0x000008, "Member 'ItemInspectScreen_C_BndEvt__ItemInspectEvolutionConfirmation_K2Node_ComponentBoundEvent_2_OnEvolutionOptionSelected__DelegateSignature::RecipeIndex' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.DialogResult_3D444D7245BFED3F760CE49A5698A308
// 0x000C (0x000C - 0x0000)
struct ItemInspectScreen_C_DialogResult_3D444D7245BFED3F760CE49A5698A308 final
{
public:
	EFortDialogResult                             Result;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ResultName;                                        // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemInspectScreen_C_DialogResult_3D444D7245BFED3F760CE49A5698A308) == 0x000004, "Wrong alignment on ItemInspectScreen_C_DialogResult_3D444D7245BFED3F760CE49A5698A308");
static_assert(sizeof(ItemInspectScreen_C_DialogResult_3D444D7245BFED3F760CE49A5698A308) == 0x00000C, "Wrong size on ItemInspectScreen_C_DialogResult_3D444D7245BFED3F760CE49A5698A308");
static_assert(offsetof(ItemInspectScreen_C_DialogResult_3D444D7245BFED3F760CE49A5698A308, Result) == 0x000000, "Member 'ItemInspectScreen_C_DialogResult_3D444D7245BFED3F760CE49A5698A308::Result' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_DialogResult_3D444D7245BFED3F760CE49A5698A308, ResultName) == 0x000004, "Member 'ItemInspectScreen_C_DialogResult_3D444D7245BFED3F760CE49A5698A308::ResultName' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.DialogResult_7EB32ED049ED082854D5738A81CFCAA2
// 0x000C (0x000C - 0x0000)
struct ItemInspectScreen_C_DialogResult_7EB32ED049ED082854D5738A81CFCAA2 final
{
public:
	EFortDialogResult                             Result;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ResultName;                                        // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemInspectScreen_C_DialogResult_7EB32ED049ED082854D5738A81CFCAA2) == 0x000004, "Wrong alignment on ItemInspectScreen_C_DialogResult_7EB32ED049ED082854D5738A81CFCAA2");
static_assert(sizeof(ItemInspectScreen_C_DialogResult_7EB32ED049ED082854D5738A81CFCAA2) == 0x00000C, "Wrong size on ItemInspectScreen_C_DialogResult_7EB32ED049ED082854D5738A81CFCAA2");
static_assert(offsetof(ItemInspectScreen_C_DialogResult_7EB32ED049ED082854D5738A81CFCAA2, Result) == 0x000000, "Member 'ItemInspectScreen_C_DialogResult_7EB32ED049ED082854D5738A81CFCAA2::Result' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_DialogResult_7EB32ED049ED082854D5738A81CFCAA2, ResultName) == 0x000004, "Member 'ItemInspectScreen_C_DialogResult_7EB32ED049ED082854D5738A81CFCAA2::ResultName' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.HandleBack
// 0x0010 (0x0010 - 0x0000)
struct ItemInspectScreen_C_HandleBack final
{
public:
	bool                                          PassThrough;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortUIManagerWidget_NUI*               CallFunc_GetUIManagerWidget_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemInspectScreen_C_HandleBack) == 0x000008, "Wrong alignment on ItemInspectScreen_C_HandleBack");
static_assert(sizeof(ItemInspectScreen_C_HandleBack) == 0x000010, "Wrong size on ItemInspectScreen_C_HandleBack");
static_assert(offsetof(ItemInspectScreen_C_HandleBack, PassThrough) == 0x000000, "Member 'ItemInspectScreen_C_HandleBack::PassThrough' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleBack, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'ItemInspectScreen_C_HandleBack::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleBack, CallFunc_GetUIManagerWidget_ReturnValue) == 0x000008, "Member 'ItemInspectScreen_C_HandleBack::CallFunc_GetUIManagerWidget_ReturnValue' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.HandleFavorite
// 0x0020 (0x0020 - 0x0000)
struct ItemInspectScreen_C_HandleFavorite final
{
public:
	bool                                          PassThrough;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortMcpContext*                        CallFunc_GetContext_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortAccountItem*                       K2Node_DynamicCast_AsFort_Account_Item;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFavorite_ReturnValue;                   // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemInspectScreen_C_HandleFavorite) == 0x000008, "Wrong alignment on ItemInspectScreen_C_HandleFavorite");
static_assert(sizeof(ItemInspectScreen_C_HandleFavorite) == 0x000020, "Wrong size on ItemInspectScreen_C_HandleFavorite");
static_assert(offsetof(ItemInspectScreen_C_HandleFavorite, PassThrough) == 0x000000, "Member 'ItemInspectScreen_C_HandleFavorite::PassThrough' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleFavorite, CallFunc_GetContext_ReturnValue) == 0x000008, "Member 'ItemInspectScreen_C_HandleFavorite::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleFavorite, K2Node_DynamicCast_AsFort_Account_Item) == 0x000010, "Member 'ItemInspectScreen_C_HandleFavorite::K2Node_DynamicCast_AsFort_Account_Item' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleFavorite, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'ItemInspectScreen_C_HandleFavorite::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleFavorite, CallFunc_IsFavorite_ReturnValue) == 0x000019, "Member 'ItemInspectScreen_C_HandleFavorite::CallFunc_IsFavorite_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleFavorite, CallFunc_Not_PreBool_ReturnValue) == 0x00001A, "Member 'ItemInspectScreen_C_HandleFavorite::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.HandleView
// 0x0001 (0x0001 - 0x0000)
struct ItemInspectScreen_C_HandleView final
{
public:
	bool                                          PassThrough;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemInspectScreen_C_HandleView) == 0x000001, "Wrong alignment on ItemInspectScreen_C_HandleView");
static_assert(sizeof(ItemInspectScreen_C_HandleView) == 0x000001, "Wrong size on ItemInspectScreen_C_HandleView");
static_assert(offsetof(ItemInspectScreen_C_HandleView, PassThrough) == 0x000000, "Member 'ItemInspectScreen_C_HandleView::PassThrough' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.HandleEvolutionChoiceHovered
// 0x0008 (0x0008 - 0x0000)
struct ItemInspectScreen_C_HandleEvolutionChoiceHovered final
{
public:
	class UFortItem*                              Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemInspectScreen_C_HandleEvolutionChoiceHovered) == 0x000008, "Wrong alignment on ItemInspectScreen_C_HandleEvolutionChoiceHovered");
static_assert(sizeof(ItemInspectScreen_C_HandleEvolutionChoiceHovered) == 0x000008, "Wrong size on ItemInspectScreen_C_HandleEvolutionChoiceHovered");
static_assert(offsetof(ItemInspectScreen_C_HandleEvolutionChoiceHovered, Item) == 0x000000, "Member 'ItemInspectScreen_C_HandleEvolutionChoiceHovered::Item' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.HandleEvolutionChoiceUnhovered
// 0x0008 (0x0008 - 0x0000)
struct ItemInspectScreen_C_HandleEvolutionChoiceUnhovered final
{
public:
	class UFortItem*                              Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemInspectScreen_C_HandleEvolutionChoiceUnhovered) == 0x000008, "Wrong alignment on ItemInspectScreen_C_HandleEvolutionChoiceUnhovered");
static_assert(sizeof(ItemInspectScreen_C_HandleEvolutionChoiceUnhovered) == 0x000008, "Wrong size on ItemInspectScreen_C_HandleEvolutionChoiceUnhovered");
static_assert(offsetof(ItemInspectScreen_C_HandleEvolutionChoiceUnhovered, Item) == 0x000000, "Member 'ItemInspectScreen_C_HandleEvolutionChoiceUnhovered::Item' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.HandleEvolutionChoiceSelected
// 0x0010 (0x0010 - 0x0000)
struct ItemInspectScreen_C_HandleEvolutionChoiceSelected final
{
public:
	class UFortItem*                              Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RecipeIndex;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemInspectScreen_C_HandleEvolutionChoiceSelected) == 0x000008, "Wrong alignment on ItemInspectScreen_C_HandleEvolutionChoiceSelected");
static_assert(sizeof(ItemInspectScreen_C_HandleEvolutionChoiceSelected) == 0x000010, "Wrong size on ItemInspectScreen_C_HandleEvolutionChoiceSelected");
static_assert(offsetof(ItemInspectScreen_C_HandleEvolutionChoiceSelected, Item) == 0x000000, "Member 'ItemInspectScreen_C_HandleEvolutionChoiceSelected::Item' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleEvolutionChoiceSelected, RecipeIndex) == 0x000008, "Member 'ItemInspectScreen_C_HandleEvolutionChoiceSelected::RecipeIndex' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.GetFirstEvolutionOption
// 0x0118 (0x0118 - 0x0000)
struct ItemInspectScreen_C_GetFirstEvolutionOption final
{
public:
	class UFortItem*                              EvolutionItem;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFortItemQuantityPair>          Results;                                           // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerController*                  K2Node_DynamicCast_AsFort_Player_Controller;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortInventoryContext*                  CallFunc_GetContext_ReturnValue;                   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortFrontEndContext*                   CallFunc_GetContext_ReturnValue1;                  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFortItemQuantityPair                  CallFunc_Array_Get_Item;                           // 0x0048(0x0040)()
	class UFortItemDefinition*                    CallFunc_GetItemDefinitionBP_ReturnValue;          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortItemDefinition*                    CallFunc_GetItemFromItemQuantityPair_ReturnValue;  // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FRecipe>                        CallFunc_GetConversionRecipesFromItemDefintion_ReturnValue; // 0x0098(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRecipe                                CallFunc_Array_Get_Item1;                          // 0x00B0(0x0058)()
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue1;              // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10D[0x3];                                      // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItem*                              CallFunc_CreateTemporaryItemInstanceBP_ReturnValue; // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemInspectScreen_C_GetFirstEvolutionOption) == 0x000008, "Wrong alignment on ItemInspectScreen_C_GetFirstEvolutionOption");
static_assert(sizeof(ItemInspectScreen_C_GetFirstEvolutionOption) == 0x000118, "Wrong size on ItemInspectScreen_C_GetFirstEvolutionOption");
static_assert(offsetof(ItemInspectScreen_C_GetFirstEvolutionOption, EvolutionItem) == 0x000000, "Member 'ItemInspectScreen_C_GetFirstEvolutionOption::EvolutionItem' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetFirstEvolutionOption, Results) == 0x000008, "Member 'ItemInspectScreen_C_GetFirstEvolutionOption::Results' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetFirstEvolutionOption, CallFunc_GetOwningPlayer_ReturnValue) == 0x000018, "Member 'ItemInspectScreen_C_GetFirstEvolutionOption::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetFirstEvolutionOption, K2Node_DynamicCast_AsFort_Player_Controller) == 0x000020, "Member 'ItemInspectScreen_C_GetFirstEvolutionOption::K2Node_DynamicCast_AsFort_Player_Controller' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetFirstEvolutionOption, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'ItemInspectScreen_C_GetFirstEvolutionOption::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetFirstEvolutionOption, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'ItemInspectScreen_C_GetFirstEvolutionOption::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetFirstEvolutionOption, CallFunc_GetContext_ReturnValue) == 0x000030, "Member 'ItemInspectScreen_C_GetFirstEvolutionOption::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetFirstEvolutionOption, CallFunc_Greater_IntInt_ReturnValue) == 0x000038, "Member 'ItemInspectScreen_C_GetFirstEvolutionOption::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetFirstEvolutionOption, CallFunc_GetContext_ReturnValue1) == 0x000040, "Member 'ItemInspectScreen_C_GetFirstEvolutionOption::CallFunc_GetContext_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetFirstEvolutionOption, CallFunc_Array_Get_Item) == 0x000048, "Member 'ItemInspectScreen_C_GetFirstEvolutionOption::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetFirstEvolutionOption, CallFunc_GetItemDefinitionBP_ReturnValue) == 0x000088, "Member 'ItemInspectScreen_C_GetFirstEvolutionOption::CallFunc_GetItemDefinitionBP_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetFirstEvolutionOption, CallFunc_GetItemFromItemQuantityPair_ReturnValue) == 0x000090, "Member 'ItemInspectScreen_C_GetFirstEvolutionOption::CallFunc_GetItemFromItemQuantityPair_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetFirstEvolutionOption, CallFunc_GetConversionRecipesFromItemDefintion_ReturnValue) == 0x000098, "Member 'ItemInspectScreen_C_GetFirstEvolutionOption::CallFunc_GetConversionRecipesFromItemDefintion_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetFirstEvolutionOption, CallFunc_IsValid_ReturnValue) == 0x0000A8, "Member 'ItemInspectScreen_C_GetFirstEvolutionOption::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetFirstEvolutionOption, CallFunc_Array_Get_Item1) == 0x0000B0, "Member 'ItemInspectScreen_C_GetFirstEvolutionOption::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetFirstEvolutionOption, CallFunc_Array_Length_ReturnValue1) == 0x000108, "Member 'ItemInspectScreen_C_GetFirstEvolutionOption::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetFirstEvolutionOption, CallFunc_Greater_IntInt_ReturnValue1) == 0x00010C, "Member 'ItemInspectScreen_C_GetFirstEvolutionOption::CallFunc_Greater_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetFirstEvolutionOption, CallFunc_CreateTemporaryItemInstanceBP_ReturnValue) == 0x000110, "Member 'ItemInspectScreen_C_GetFirstEvolutionOption::CallFunc_CreateTemporaryItemInstanceBP_ReturnValue' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.SetupActionHandlers
// 0x00C0 (0x00C0 - 0x0000)
struct ItemInspectScreen_C_SetupActionHandlers final
{
public:
	TDelegate<void(bool* bPassThrough)>           K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle;              // 0x0010(0x0010)(NoDestructor)
	TDelegate<void(bool* bPassThrough)>           K2Node_CreateDelegate_OutputDelegate1;             // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle1;             // 0x0030(0x0010)(NoDestructor)
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle2;             // 0x0040(0x0010)(NoDestructor)
	TDelegate<void(bool* bPassThrough)>           K2Node_CreateDelegate_OutputDelegate2;             // 0x0050(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(bool* bPassThrough)>           K2Node_CreateDelegate_OutputDelegate3;             // 0x0060(0x0010)(ZeroConstructor, NoDestructor)
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle3;             // 0x0070(0x0010)(NoDestructor)
	TDelegate<void(bool* bPassThrough)>           K2Node_CreateDelegate_OutputDelegate4;             // 0x0080(0x0010)(ZeroConstructor, NoDestructor)
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle4;             // 0x0090(0x0010)(NoDestructor)
	TDelegate<void(bool* bPassThrough)>           K2Node_CreateDelegate_OutputDelegate5;             // 0x00A0(0x0010)(ZeroConstructor, NoDestructor)
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle5;             // 0x00B0(0x0010)(NoDestructor)
};
static_assert(alignof(ItemInspectScreen_C_SetupActionHandlers) == 0x000008, "Wrong alignment on ItemInspectScreen_C_SetupActionHandlers");
static_assert(sizeof(ItemInspectScreen_C_SetupActionHandlers) == 0x0000C0, "Wrong size on ItemInspectScreen_C_SetupActionHandlers");
static_assert(offsetof(ItemInspectScreen_C_SetupActionHandlers, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'ItemInspectScreen_C_SetupActionHandlers::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SetupActionHandlers, K2Node_MakeStruct_DataTableRowHandle) == 0x000010, "Member 'ItemInspectScreen_C_SetupActionHandlers::K2Node_MakeStruct_DataTableRowHandle' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SetupActionHandlers, K2Node_CreateDelegate_OutputDelegate1) == 0x000020, "Member 'ItemInspectScreen_C_SetupActionHandlers::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SetupActionHandlers, K2Node_MakeStruct_DataTableRowHandle1) == 0x000030, "Member 'ItemInspectScreen_C_SetupActionHandlers::K2Node_MakeStruct_DataTableRowHandle1' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SetupActionHandlers, K2Node_MakeStruct_DataTableRowHandle2) == 0x000040, "Member 'ItemInspectScreen_C_SetupActionHandlers::K2Node_MakeStruct_DataTableRowHandle2' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SetupActionHandlers, K2Node_CreateDelegate_OutputDelegate2) == 0x000050, "Member 'ItemInspectScreen_C_SetupActionHandlers::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SetupActionHandlers, K2Node_CreateDelegate_OutputDelegate3) == 0x000060, "Member 'ItemInspectScreen_C_SetupActionHandlers::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SetupActionHandlers, K2Node_MakeStruct_DataTableRowHandle3) == 0x000070, "Member 'ItemInspectScreen_C_SetupActionHandlers::K2Node_MakeStruct_DataTableRowHandle3' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SetupActionHandlers, K2Node_CreateDelegate_OutputDelegate4) == 0x000080, "Member 'ItemInspectScreen_C_SetupActionHandlers::K2Node_CreateDelegate_OutputDelegate4' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SetupActionHandlers, K2Node_MakeStruct_DataTableRowHandle4) == 0x000090, "Member 'ItemInspectScreen_C_SetupActionHandlers::K2Node_MakeStruct_DataTableRowHandle4' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SetupActionHandlers, K2Node_CreateDelegate_OutputDelegate5) == 0x0000A0, "Member 'ItemInspectScreen_C_SetupActionHandlers::K2Node_CreateDelegate_OutputDelegate5' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SetupActionHandlers, K2Node_MakeStruct_DataTableRowHandle5) == 0x0000B0, "Member 'ItemInspectScreen_C_SetupActionHandlers::K2Node_MakeStruct_DataTableRowHandle5' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.HandleCursorModeChanging
// 0x0005 (0x0005 - 0x0000)
struct ItemInspectScreen_C_HandleCursorModeChanging final
{
public:
	bool                                          IsEnabled;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HandleBack_Passthrough;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActivated_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemInspectScreen_C_HandleCursorModeChanging) == 0x000001, "Wrong alignment on ItemInspectScreen_C_HandleCursorModeChanging");
static_assert(sizeof(ItemInspectScreen_C_HandleCursorModeChanging) == 0x000005, "Wrong size on ItemInspectScreen_C_HandleCursorModeChanging");
static_assert(offsetof(ItemInspectScreen_C_HandleCursorModeChanging, IsEnabled) == 0x000000, "Member 'ItemInspectScreen_C_HandleCursorModeChanging::IsEnabled' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleCursorModeChanging, CallFunc_HandleBack_Passthrough) == 0x000001, "Member 'ItemInspectScreen_C_HandleCursorModeChanging::CallFunc_HandleBack_Passthrough' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleCursorModeChanging, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'ItemInspectScreen_C_HandleCursorModeChanging::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleCursorModeChanging, CallFunc_IsActivated_ReturnValue) == 0x000003, "Member 'ItemInspectScreen_C_HandleCursorModeChanging::CallFunc_IsActivated_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleCursorModeChanging, CallFunc_BooleanAND_ReturnValue) == 0x000004, "Member 'ItemInspectScreen_C_HandleCursorModeChanging::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.HandleEvolutionComplete
// 0x0028 (0x0028 - 0x0000)
struct ItemInspectScreen_C_HandleEvolutionComplete final
{
public:
	TArray<struct FFortItemInstanceQuantityPair>  ResultingItems;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FFortItemInstanceQuantityPair          CallFunc_Array_Get_Item;                           // 0x0010(0x0010)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemInspectScreen_C_HandleEvolutionComplete) == 0x000008, "Wrong alignment on ItemInspectScreen_C_HandleEvolutionComplete");
static_assert(sizeof(ItemInspectScreen_C_HandleEvolutionComplete) == 0x000028, "Wrong size on ItemInspectScreen_C_HandleEvolutionComplete");
static_assert(offsetof(ItemInspectScreen_C_HandleEvolutionComplete, ResultingItems) == 0x000000, "Member 'ItemInspectScreen_C_HandleEvolutionComplete::ResultingItems' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleEvolutionComplete, CallFunc_Array_Get_Item) == 0x000010, "Member 'ItemInspectScreen_C_HandleEvolutionComplete::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleEvolutionComplete, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'ItemInspectScreen_C_HandleEvolutionComplete::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleEvolutionComplete, CallFunc_Greater_IntInt_ReturnValue) == 0x000024, "Member 'ItemInspectScreen_C_HandleEvolutionComplete::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.RefreshActionHandlers
// 0x0018 (0x0018 - 0x0000)
struct ItemInspectScreen_C_RefreshActionHandlers final
{
public:
	EInputActionState                             CallFunc_GetRefundPopupInputActionState_State;     // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetLevelUpVisibility_Return_Value;        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputActionState                             CallFunc_GetUpgradeItemInputActionState_Return_Value; // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetAlterationModifyVisibility_Return_Value; // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItemInspectCycleWidget*            CallFunc_GetCycleWidget_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetUpgradeRarityVisibility_ReturnValue;   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputActionState                             CallFunc_GetFavoriteInputState_ReturnValue;        // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetEvolutionVisibility_ReturnValue;       // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputActionState                             CallFunc_GetViewInputState_ReturnValue;            // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemInspectScreen_C_RefreshActionHandlers) == 0x000008, "Wrong alignment on ItemInspectScreen_C_RefreshActionHandlers");
static_assert(sizeof(ItemInspectScreen_C_RefreshActionHandlers) == 0x000018, "Wrong size on ItemInspectScreen_C_RefreshActionHandlers");
static_assert(offsetof(ItemInspectScreen_C_RefreshActionHandlers, CallFunc_GetRefundPopupInputActionState_State) == 0x000000, "Member 'ItemInspectScreen_C_RefreshActionHandlers::CallFunc_GetRefundPopupInputActionState_State' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_RefreshActionHandlers, CallFunc_GetLevelUpVisibility_Return_Value) == 0x000001, "Member 'ItemInspectScreen_C_RefreshActionHandlers::CallFunc_GetLevelUpVisibility_Return_Value' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_RefreshActionHandlers, CallFunc_GetUpgradeItemInputActionState_Return_Value) == 0x000002, "Member 'ItemInspectScreen_C_RefreshActionHandlers::CallFunc_GetUpgradeItemInputActionState_Return_Value' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_RefreshActionHandlers, CallFunc_GetAlterationModifyVisibility_Return_Value) == 0x000003, "Member 'ItemInspectScreen_C_RefreshActionHandlers::CallFunc_GetAlterationModifyVisibility_Return_Value' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_RefreshActionHandlers, CallFunc_GetCycleWidget_ReturnValue) == 0x000008, "Member 'ItemInspectScreen_C_RefreshActionHandlers::CallFunc_GetCycleWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_RefreshActionHandlers, CallFunc_GetUpgradeRarityVisibility_ReturnValue) == 0x000010, "Member 'ItemInspectScreen_C_RefreshActionHandlers::CallFunc_GetUpgradeRarityVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_RefreshActionHandlers, CallFunc_GetFavoriteInputState_ReturnValue) == 0x000011, "Member 'ItemInspectScreen_C_RefreshActionHandlers::CallFunc_GetFavoriteInputState_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_RefreshActionHandlers, CallFunc_GetEvolutionVisibility_ReturnValue) == 0x000012, "Member 'ItemInspectScreen_C_RefreshActionHandlers::CallFunc_GetEvolutionVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_RefreshActionHandlers, CallFunc_GetViewInputState_ReturnValue) == 0x000013, "Member 'ItemInspectScreen_C_RefreshActionHandlers::CallFunc_GetViewInputState_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_RefreshActionHandlers, K2Node_SwitchEnum_CmpSuccess) == 0x000014, "Member 'ItemInspectScreen_C_RefreshActionHandlers::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_RefreshActionHandlers, CallFunc_IsValid_ReturnValue) == 0x000015, "Member 'ItemInspectScreen_C_RefreshActionHandlers::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.RefreshCallout
// 0x0001 (0x0001 - 0x0000)
struct ItemInspectScreen_C_RefreshCallout final
{
public:
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemInspectScreen_C_RefreshCallout) == 0x000001, "Wrong alignment on ItemInspectScreen_C_RefreshCallout");
static_assert(sizeof(ItemInspectScreen_C_RefreshCallout) == 0x000001, "Wrong size on ItemInspectScreen_C_RefreshCallout");
static_assert(offsetof(ItemInspectScreen_C_RefreshCallout, CallFunc_BooleanAND_ReturnValue) == 0x000000, "Member 'ItemInspectScreen_C_RefreshCallout::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.ShowPreviewHeader
// 0x0005 (0x0005 - 0x0000)
struct ItemInspectScreen_C_ShowPreviewHeader final
{
public:
	bool                                          ShowPreviewLabel;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable1;                               // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemInspectScreen_C_ShowPreviewHeader) == 0x000001, "Wrong alignment on ItemInspectScreen_C_ShowPreviewHeader");
static_assert(sizeof(ItemInspectScreen_C_ShowPreviewHeader) == 0x000005, "Wrong size on ItemInspectScreen_C_ShowPreviewHeader");
static_assert(offsetof(ItemInspectScreen_C_ShowPreviewHeader, ShowPreviewLabel) == 0x000000, "Member 'ItemInspectScreen_C_ShowPreviewHeader::ShowPreviewLabel' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ShowPreviewHeader, Temp_bool_Variable) == 0x000001, "Member 'ItemInspectScreen_C_ShowPreviewHeader::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ShowPreviewHeader, Temp_byte_Variable) == 0x000002, "Member 'ItemInspectScreen_C_ShowPreviewHeader::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ShowPreviewHeader, Temp_byte_Variable1) == 0x000003, "Member 'ItemInspectScreen_C_ShowPreviewHeader::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ShowPreviewHeader, K2Node_Select_Default) == 0x000004, "Member 'ItemInspectScreen_C_ShowPreviewHeader::K2Node_Select_Default' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.SetTabButtonStyle
// 0x0018 (0x0018 - 0x0000)
struct ItemInspectScreen_C_SetTabButtonStyle final
{
public:
	class UObject*                                Object;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UIconTextButton_C*                      K2Node_DynamicCast_AsIcon_Text_Button;             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemInspectScreen_C_SetTabButtonStyle) == 0x000008, "Wrong alignment on ItemInspectScreen_C_SetTabButtonStyle");
static_assert(sizeof(ItemInspectScreen_C_SetTabButtonStyle) == 0x000018, "Wrong size on ItemInspectScreen_C_SetTabButtonStyle");
static_assert(offsetof(ItemInspectScreen_C_SetTabButtonStyle, Object) == 0x000000, "Member 'ItemInspectScreen_C_SetTabButtonStyle::Object' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SetTabButtonStyle, K2Node_DynamicCast_AsIcon_Text_Button) == 0x000008, "Member 'ItemInspectScreen_C_SetTabButtonStyle::K2Node_DynamicCast_AsIcon_Text_Button' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SetTabButtonStyle, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'ItemInspectScreen_C_SetTabButtonStyle::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.SetInspectModeForChildPanels
// 0x0001 (0x0001 - 0x0000)
struct ItemInspectScreen_C_SetInspectModeForChildPanels final
{
public:
	EFortItemInspectionMode                       NewInspectMode;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemInspectScreen_C_SetInspectModeForChildPanels) == 0x000001, "Wrong alignment on ItemInspectScreen_C_SetInspectModeForChildPanels");
static_assert(sizeof(ItemInspectScreen_C_SetInspectModeForChildPanels) == 0x000001, "Wrong size on ItemInspectScreen_C_SetInspectModeForChildPanels");
static_assert(offsetof(ItemInspectScreen_C_SetInspectModeForChildPanels, NewInspectMode) == 0x000000, "Member 'ItemInspectScreen_C_SetInspectModeForChildPanels::NewInspectMode' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.OnItemCycleChangedItem
// 0x0008 (0x0008 - 0x0000)
struct ItemInspectScreen_C_OnItemCycleChangedItem final
{
public:
	class UFortItem*                              NewItemToRepresent;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemInspectScreen_C_OnItemCycleChangedItem) == 0x000008, "Wrong alignment on ItemInspectScreen_C_OnItemCycleChangedItem");
static_assert(sizeof(ItemInspectScreen_C_OnItemCycleChangedItem) == 0x000008, "Wrong size on ItemInspectScreen_C_OnItemCycleChangedItem");
static_assert(offsetof(ItemInspectScreen_C_OnItemCycleChangedItem, NewItemToRepresent) == 0x000000, "Member 'ItemInspectScreen_C_OnItemCycleChangedItem::NewItemToRepresent' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.RefreshExtraDetailsTabs
// 0x0318 (0x0318 - 0x0000)
struct ItemInspectScreen_C_RefreshExtraDetailsTabs final
{
public:
	class FName                                   SelectedTabID;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTabCount_ReturnValue;                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetSelectedTabId_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SelectTabByID_ReturnValue;                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetTabIdAtIndex_ReturnValue;              // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SelectTabByID_ReturnValue1;               // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTabCount_ReturnValue1;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFortAlterationSlotStatus>      CallFunc_GetAlterationSlots_ReturnValue;           // 0x0030(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_Greater_IntInt_ReturnValue1;              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue2;              // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortHero*                              K2Node_DynamicCast_AsFort_Hero;                    // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortTabButtonLabelInfo                K2Node_MakeStruct_FortTabButtonLabelInfo;          // 0x0060(0x00A0)()
	bool                                          CallFunc_RegisterFortTab_ReturnValue;              // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortWorker*                            K2Node_DynamicCast_AsFort_Worker;                  // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortHero*                              K2Node_DynamicCast_AsFort_Hero1;                   // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSchematic_ReturnValue;                  // 0x0122(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_123[0x5];                                      // 0x0123(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortTabButtonLabelInfo                K2Node_MakeStruct_FortTabButtonLabelInfo1;         // 0x0128(0x00A0)()
	struct FFortTabButtonLabelInfo                K2Node_MakeStruct_FortTabButtonLabelInfo2;         // 0x01C8(0x00A0)()
	bool                                          CallFunc_RegisterFortTab_ReturnValue1;             // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_269[0x7];                                      // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortTabButtonLabelInfo                K2Node_MakeStruct_FortTabButtonLabelInfo3;         // 0x0270(0x00A0)()
	bool                                          CallFunc_RegisterFortTab_ReturnValue2;             // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RegisterFortTab_ReturnValue3;             // 0x0311(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemInspectScreen_C_RefreshExtraDetailsTabs) == 0x000008, "Wrong alignment on ItemInspectScreen_C_RefreshExtraDetailsTabs");
static_assert(sizeof(ItemInspectScreen_C_RefreshExtraDetailsTabs) == 0x000318, "Wrong size on ItemInspectScreen_C_RefreshExtraDetailsTabs");
static_assert(offsetof(ItemInspectScreen_C_RefreshExtraDetailsTabs, SelectedTabID) == 0x000000, "Member 'ItemInspectScreen_C_RefreshExtraDetailsTabs::SelectedTabID' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_RefreshExtraDetailsTabs, CallFunc_GetTabCount_ReturnValue) == 0x000008, "Member 'ItemInspectScreen_C_RefreshExtraDetailsTabs::CallFunc_GetTabCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_RefreshExtraDetailsTabs, CallFunc_Greater_IntInt_ReturnValue) == 0x00000C, "Member 'ItemInspectScreen_C_RefreshExtraDetailsTabs::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_RefreshExtraDetailsTabs, CallFunc_GetSelectedTabId_ReturnValue) == 0x000010, "Member 'ItemInspectScreen_C_RefreshExtraDetailsTabs::CallFunc_GetSelectedTabId_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_RefreshExtraDetailsTabs, CallFunc_SelectTabByID_ReturnValue) == 0x000018, "Member 'ItemInspectScreen_C_RefreshExtraDetailsTabs::CallFunc_SelectTabByID_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_RefreshExtraDetailsTabs, CallFunc_GetTabIdAtIndex_ReturnValue) == 0x00001C, "Member 'ItemInspectScreen_C_RefreshExtraDetailsTabs::CallFunc_GetTabIdAtIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_RefreshExtraDetailsTabs, CallFunc_SelectTabByID_ReturnValue1) == 0x000024, "Member 'ItemInspectScreen_C_RefreshExtraDetailsTabs::CallFunc_SelectTabByID_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_RefreshExtraDetailsTabs, CallFunc_GetTabCount_ReturnValue1) == 0x000028, "Member 'ItemInspectScreen_C_RefreshExtraDetailsTabs::CallFunc_GetTabCount_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_RefreshExtraDetailsTabs, CallFunc_GetAlterationSlots_ReturnValue) == 0x000030, "Member 'ItemInspectScreen_C_RefreshExtraDetailsTabs::CallFunc_GetAlterationSlots_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_RefreshExtraDetailsTabs, CallFunc_Greater_IntInt_ReturnValue1) == 0x000040, "Member 'ItemInspectScreen_C_RefreshExtraDetailsTabs::CallFunc_Greater_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_RefreshExtraDetailsTabs, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'ItemInspectScreen_C_RefreshExtraDetailsTabs::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_RefreshExtraDetailsTabs, CallFunc_Greater_IntInt_ReturnValue2) == 0x000048, "Member 'ItemInspectScreen_C_RefreshExtraDetailsTabs::CallFunc_Greater_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_RefreshExtraDetailsTabs, K2Node_DynamicCast_AsFort_Hero) == 0x000050, "Member 'ItemInspectScreen_C_RefreshExtraDetailsTabs::K2Node_DynamicCast_AsFort_Hero' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_RefreshExtraDetailsTabs, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'ItemInspectScreen_C_RefreshExtraDetailsTabs::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_RefreshExtraDetailsTabs, K2Node_MakeStruct_FortTabButtonLabelInfo) == 0x000060, "Member 'ItemInspectScreen_C_RefreshExtraDetailsTabs::K2Node_MakeStruct_FortTabButtonLabelInfo' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_RefreshExtraDetailsTabs, CallFunc_RegisterFortTab_ReturnValue) == 0x000100, "Member 'ItemInspectScreen_C_RefreshExtraDetailsTabs::CallFunc_RegisterFortTab_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_RefreshExtraDetailsTabs, K2Node_DynamicCast_AsFort_Worker) == 0x000108, "Member 'ItemInspectScreen_C_RefreshExtraDetailsTabs::K2Node_DynamicCast_AsFort_Worker' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_RefreshExtraDetailsTabs, K2Node_DynamicCast_bSuccess1) == 0x000110, "Member 'ItemInspectScreen_C_RefreshExtraDetailsTabs::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_RefreshExtraDetailsTabs, K2Node_DynamicCast_AsFort_Hero1) == 0x000118, "Member 'ItemInspectScreen_C_RefreshExtraDetailsTabs::K2Node_DynamicCast_AsFort_Hero1' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_RefreshExtraDetailsTabs, K2Node_DynamicCast_bSuccess2) == 0x000120, "Member 'ItemInspectScreen_C_RefreshExtraDetailsTabs::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_RefreshExtraDetailsTabs, CallFunc_IsValid_ReturnValue) == 0x000121, "Member 'ItemInspectScreen_C_RefreshExtraDetailsTabs::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_RefreshExtraDetailsTabs, CallFunc_IsSchematic_ReturnValue) == 0x000122, "Member 'ItemInspectScreen_C_RefreshExtraDetailsTabs::CallFunc_IsSchematic_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_RefreshExtraDetailsTabs, K2Node_MakeStruct_FortTabButtonLabelInfo1) == 0x000128, "Member 'ItemInspectScreen_C_RefreshExtraDetailsTabs::K2Node_MakeStruct_FortTabButtonLabelInfo1' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_RefreshExtraDetailsTabs, K2Node_MakeStruct_FortTabButtonLabelInfo2) == 0x0001C8, "Member 'ItemInspectScreen_C_RefreshExtraDetailsTabs::K2Node_MakeStruct_FortTabButtonLabelInfo2' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_RefreshExtraDetailsTabs, CallFunc_RegisterFortTab_ReturnValue1) == 0x000268, "Member 'ItemInspectScreen_C_RefreshExtraDetailsTabs::CallFunc_RegisterFortTab_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_RefreshExtraDetailsTabs, K2Node_MakeStruct_FortTabButtonLabelInfo3) == 0x000270, "Member 'ItemInspectScreen_C_RefreshExtraDetailsTabs::K2Node_MakeStruct_FortTabButtonLabelInfo3' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_RefreshExtraDetailsTabs, CallFunc_RegisterFortTab_ReturnValue2) == 0x000310, "Member 'ItemInspectScreen_C_RefreshExtraDetailsTabs::CallFunc_RegisterFortTab_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_RefreshExtraDetailsTabs, CallFunc_RegisterFortTab_ReturnValue3) == 0x000311, "Member 'ItemInspectScreen_C_RefreshExtraDetailsTabs::CallFunc_RegisterFortTab_ReturnValue3' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.SetAllInputActionStates
// 0x0001 (0x0001 - 0x0000)
struct ItemInspectScreen_C_SetAllInputActionStates final
{
public:
	EInputActionState                             InputActionState;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemInspectScreen_C_SetAllInputActionStates) == 0x000001, "Wrong alignment on ItemInspectScreen_C_SetAllInputActionStates");
static_assert(sizeof(ItemInspectScreen_C_SetAllInputActionStates) == 0x000001, "Wrong size on ItemInspectScreen_C_SetAllInputActionStates");
static_assert(offsetof(ItemInspectScreen_C_SetAllInputActionStates, InputActionState) == 0x000000, "Member 'ItemInspectScreen_C_SetAllInputActionStates::InputActionState' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.GetViewInputState
// 0x0018 (0x0018 - 0x0000)
struct ItemInspectScreen_C_GetViewInputState final
{
public:
	EInputActionState                             ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputActionState                             Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputActionState                             Temp_byte_Variable1;                               // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInZone_ReturnValue;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortItemType                                 CallFunc_GetType_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSchematicOrCraftedWeapon_ReturnValue;   // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EInputActionState                             K2Node_Select_Default;                             // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemInspectScreen_C_GetViewInputState) == 0x000008, "Wrong alignment on ItemInspectScreen_C_GetViewInputState");
static_assert(sizeof(ItemInspectScreen_C_GetViewInputState) == 0x000018, "Wrong size on ItemInspectScreen_C_GetViewInputState");
static_assert(offsetof(ItemInspectScreen_C_GetViewInputState, ReturnValue) == 0x000000, "Member 'ItemInspectScreen_C_GetViewInputState::ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetViewInputState, Temp_byte_Variable) == 0x000001, "Member 'ItemInspectScreen_C_GetViewInputState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetViewInputState, Temp_byte_Variable1) == 0x000002, "Member 'ItemInspectScreen_C_GetViewInputState::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetViewInputState, Temp_bool_Variable) == 0x000003, "Member 'ItemInspectScreen_C_GetViewInputState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetViewInputState, CallFunc_GetContext_ReturnValue) == 0x000008, "Member 'ItemInspectScreen_C_GetViewInputState::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetViewInputState, CallFunc_IsInZone_ReturnValue) == 0x000010, "Member 'ItemInspectScreen_C_GetViewInputState::CallFunc_IsInZone_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetViewInputState, CallFunc_GetType_ReturnValue) == 0x000011, "Member 'ItemInspectScreen_C_GetViewInputState::CallFunc_GetType_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetViewInputState, CallFunc_Not_PreBool_ReturnValue) == 0x000012, "Member 'ItemInspectScreen_C_GetViewInputState::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetViewInputState, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000013, "Member 'ItemInspectScreen_C_GetViewInputState::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetViewInputState, CallFunc_IsSchematicOrCraftedWeapon_ReturnValue) == 0x000014, "Member 'ItemInspectScreen_C_GetViewInputState::CallFunc_IsSchematicOrCraftedWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetViewInputState, CallFunc_BooleanOR_ReturnValue) == 0x000015, "Member 'ItemInspectScreen_C_GetViewInputState::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetViewInputState, CallFunc_BooleanAND_ReturnValue) == 0x000016, "Member 'ItemInspectScreen_C_GetViewInputState::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetViewInputState, K2Node_Select_Default) == 0x000017, "Member 'ItemInspectScreen_C_GetViewInputState::K2Node_Select_Default' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.GetEvolutionVisibility
// 0x0014 (0x0014 - 0x0000)
struct ItemInspectScreen_C_GetEvolutionVisibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable1;                               // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasEvolutions_ReturnValue;                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetMaxLevel_ReturnValue;                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetLevel_ReturnValue;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemInspectScreen_C_GetEvolutionVisibility) == 0x000004, "Wrong alignment on ItemInspectScreen_C_GetEvolutionVisibility");
static_assert(sizeof(ItemInspectScreen_C_GetEvolutionVisibility) == 0x000014, "Wrong size on ItemInspectScreen_C_GetEvolutionVisibility");
static_assert(offsetof(ItemInspectScreen_C_GetEvolutionVisibility, ReturnValue) == 0x000000, "Member 'ItemInspectScreen_C_GetEvolutionVisibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetEvolutionVisibility, Temp_bool_Variable) == 0x000001, "Member 'ItemInspectScreen_C_GetEvolutionVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetEvolutionVisibility, Temp_byte_Variable) == 0x000002, "Member 'ItemInspectScreen_C_GetEvolutionVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetEvolutionVisibility, Temp_byte_Variable1) == 0x000003, "Member 'ItemInspectScreen_C_GetEvolutionVisibility::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetEvolutionVisibility, CallFunc_HasEvolutions_ReturnValue) == 0x000004, "Member 'ItemInspectScreen_C_GetEvolutionVisibility::CallFunc_HasEvolutions_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetEvolutionVisibility, CallFunc_GetMaxLevel_ReturnValue) == 0x000008, "Member 'ItemInspectScreen_C_GetEvolutionVisibility::CallFunc_GetMaxLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetEvolutionVisibility, CallFunc_GetLevel_ReturnValue) == 0x00000C, "Member 'ItemInspectScreen_C_GetEvolutionVisibility::CallFunc_GetLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetEvolutionVisibility, CallFunc_Less_IntInt_ReturnValue) == 0x000010, "Member 'ItemInspectScreen_C_GetEvolutionVisibility::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetEvolutionVisibility, CallFunc_BooleanAND_ReturnValue) == 0x000011, "Member 'ItemInspectScreen_C_GetEvolutionVisibility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetEvolutionVisibility, CallFunc_BooleanAND_ReturnValue1) == 0x000012, "Member 'ItemInspectScreen_C_GetEvolutionVisibility::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetEvolutionVisibility, K2Node_Select_Default) == 0x000013, "Member 'ItemInspectScreen_C_GetEvolutionVisibility::K2Node_Select_Default' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.GetFavoriteInputState
// 0x0005 (0x0005 - 0x0000)
struct ItemInspectScreen_C_GetFavoriteInputState final
{
public:
	EInputActionState                             ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EInputActionState                             Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputActionState                             Temp_byte_Variable1;                               // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputActionState                             K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemInspectScreen_C_GetFavoriteInputState) == 0x000001, "Wrong alignment on ItemInspectScreen_C_GetFavoriteInputState");
static_assert(sizeof(ItemInspectScreen_C_GetFavoriteInputState) == 0x000005, "Wrong size on ItemInspectScreen_C_GetFavoriteInputState");
static_assert(offsetof(ItemInspectScreen_C_GetFavoriteInputState, ReturnValue) == 0x000000, "Member 'ItemInspectScreen_C_GetFavoriteInputState::ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetFavoriteInputState, Temp_bool_Variable) == 0x000001, "Member 'ItemInspectScreen_C_GetFavoriteInputState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetFavoriteInputState, Temp_byte_Variable) == 0x000002, "Member 'ItemInspectScreen_C_GetFavoriteInputState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetFavoriteInputState, Temp_byte_Variable1) == 0x000003, "Member 'ItemInspectScreen_C_GetFavoriteInputState::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetFavoriteInputState, K2Node_Select_Default) == 0x000004, "Member 'ItemInspectScreen_C_GetFavoriteInputState::K2Node_Select_Default' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.GetUpgradeRarityVisibility
// 0x0038 (0x0038 - 0x0000)
struct ItemInspectScreen_C_GetUpgradeRarityVisibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAlterableItem*                     AlterableItem;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable1;                               // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SchematicRequirementsMet_ReturnValue;     // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	EFortItemType                                 CallFunc_GetType_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInventoryOverflowItem_ReturnValue;      // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasRarityUpgrade_ReturnValue;             // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue3;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemInspectScreen_C_GetUpgradeRarityVisibility) == 0x000008, "Wrong alignment on ItemInspectScreen_C_GetUpgradeRarityVisibility");
static_assert(sizeof(ItemInspectScreen_C_GetUpgradeRarityVisibility) == 0x000038, "Wrong size on ItemInspectScreen_C_GetUpgradeRarityVisibility");
static_assert(offsetof(ItemInspectScreen_C_GetUpgradeRarityVisibility, ReturnValue) == 0x000000, "Member 'ItemInspectScreen_C_GetUpgradeRarityVisibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetUpgradeRarityVisibility, AlterableItem) == 0x000008, "Member 'ItemInspectScreen_C_GetUpgradeRarityVisibility::AlterableItem' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetUpgradeRarityVisibility, Temp_bool_Variable) == 0x000010, "Member 'ItemInspectScreen_C_GetUpgradeRarityVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetUpgradeRarityVisibility, Temp_byte_Variable) == 0x000011, "Member 'ItemInspectScreen_C_GetUpgradeRarityVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetUpgradeRarityVisibility, Temp_byte_Variable1) == 0x000012, "Member 'ItemInspectScreen_C_GetUpgradeRarityVisibility::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetUpgradeRarityVisibility, CallFunc_SchematicRequirementsMet_ReturnValue) == 0x000013, "Member 'ItemInspectScreen_C_GetUpgradeRarityVisibility::CallFunc_SchematicRequirementsMet_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetUpgradeRarityVisibility, CallFunc_Conv_BoolToString_ReturnValue) == 0x000018, "Member 'ItemInspectScreen_C_GetUpgradeRarityVisibility::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetUpgradeRarityVisibility, CallFunc_GetType_ReturnValue) == 0x000028, "Member 'ItemInspectScreen_C_GetUpgradeRarityVisibility::CallFunc_GetType_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetUpgradeRarityVisibility, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000029, "Member 'ItemInspectScreen_C_GetUpgradeRarityVisibility::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetUpgradeRarityVisibility, CallFunc_BooleanOR_ReturnValue) == 0x00002A, "Member 'ItemInspectScreen_C_GetUpgradeRarityVisibility::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetUpgradeRarityVisibility, CallFunc_IsInventoryOverflowItem_ReturnValue) == 0x00002B, "Member 'ItemInspectScreen_C_GetUpgradeRarityVisibility::CallFunc_IsInventoryOverflowItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetUpgradeRarityVisibility, CallFunc_Not_PreBool_ReturnValue) == 0x00002C, "Member 'ItemInspectScreen_C_GetUpgradeRarityVisibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetUpgradeRarityVisibility, CallFunc_HasRarityUpgrade_ReturnValue) == 0x00002D, "Member 'ItemInspectScreen_C_GetUpgradeRarityVisibility::CallFunc_HasRarityUpgrade_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetUpgradeRarityVisibility, CallFunc_BooleanAND_ReturnValue) == 0x00002E, "Member 'ItemInspectScreen_C_GetUpgradeRarityVisibility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetUpgradeRarityVisibility, CallFunc_BooleanAND_ReturnValue1) == 0x00002F, "Member 'ItemInspectScreen_C_GetUpgradeRarityVisibility::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetUpgradeRarityVisibility, CallFunc_BooleanAND_ReturnValue2) == 0x000030, "Member 'ItemInspectScreen_C_GetUpgradeRarityVisibility::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetUpgradeRarityVisibility, CallFunc_BooleanAND_ReturnValue3) == 0x000031, "Member 'ItemInspectScreen_C_GetUpgradeRarityVisibility::CallFunc_BooleanAND_ReturnValue3' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetUpgradeRarityVisibility, K2Node_Select_Default) == 0x000032, "Member 'ItemInspectScreen_C_GetUpgradeRarityVisibility::K2Node_Select_Default' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.Setup Evolution Selection for Comparisons
// 0x0010 (0x0010 - 0x0000)
struct ItemInspectScreen_C_Setup_Evolution_Selection_for_Comparisons final
{
public:
	class UFortItem*                              Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RecipeIndex;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemInspectScreen_C_Setup_Evolution_Selection_for_Comparisons) == 0x000008, "Wrong alignment on ItemInspectScreen_C_Setup_Evolution_Selection_for_Comparisons");
static_assert(sizeof(ItemInspectScreen_C_Setup_Evolution_Selection_for_Comparisons) == 0x000010, "Wrong size on ItemInspectScreen_C_Setup_Evolution_Selection_for_Comparisons");
static_assert(offsetof(ItemInspectScreen_C_Setup_Evolution_Selection_for_Comparisons, Item) == 0x000000, "Member 'ItemInspectScreen_C_Setup_Evolution_Selection_for_Comparisons::Item' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_Setup_Evolution_Selection_for_Comparisons, RecipeIndex) == 0x000008, "Member 'ItemInspectScreen_C_Setup_Evolution_Selection_for_Comparisons::RecipeIndex' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.RefreshItemViewHandlerStates
// 0x000A (0x000A - 0x0000)
struct ItemInspectScreen_C_RefreshItemViewHandlerStates final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EInputActionState                             Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputActionState                             Temp_byte_Variable1;                               // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable1;                               // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EInputActionState                             Temp_byte_Variable2;                               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputActionState                             Temp_byte_Variable3;                               // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MakeLiteralBool_ReturnValue;              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MakeLiteralBool_ReturnValue1;             // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EInputActionState                             K2Node_Select_Default;                             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputActionState                             K2Node_Select1_Default;                            // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemInspectScreen_C_RefreshItemViewHandlerStates) == 0x000001, "Wrong alignment on ItemInspectScreen_C_RefreshItemViewHandlerStates");
static_assert(sizeof(ItemInspectScreen_C_RefreshItemViewHandlerStates) == 0x00000A, "Wrong size on ItemInspectScreen_C_RefreshItemViewHandlerStates");
static_assert(offsetof(ItemInspectScreen_C_RefreshItemViewHandlerStates, Temp_bool_Variable) == 0x000000, "Member 'ItemInspectScreen_C_RefreshItemViewHandlerStates::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_RefreshItemViewHandlerStates, Temp_byte_Variable) == 0x000001, "Member 'ItemInspectScreen_C_RefreshItemViewHandlerStates::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_RefreshItemViewHandlerStates, Temp_byte_Variable1) == 0x000002, "Member 'ItemInspectScreen_C_RefreshItemViewHandlerStates::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_RefreshItemViewHandlerStates, Temp_bool_Variable1) == 0x000003, "Member 'ItemInspectScreen_C_RefreshItemViewHandlerStates::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_RefreshItemViewHandlerStates, Temp_byte_Variable2) == 0x000004, "Member 'ItemInspectScreen_C_RefreshItemViewHandlerStates::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_RefreshItemViewHandlerStates, Temp_byte_Variable3) == 0x000005, "Member 'ItemInspectScreen_C_RefreshItemViewHandlerStates::Temp_byte_Variable3' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_RefreshItemViewHandlerStates, CallFunc_MakeLiteralBool_ReturnValue) == 0x000006, "Member 'ItemInspectScreen_C_RefreshItemViewHandlerStates::CallFunc_MakeLiteralBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_RefreshItemViewHandlerStates, CallFunc_MakeLiteralBool_ReturnValue1) == 0x000007, "Member 'ItemInspectScreen_C_RefreshItemViewHandlerStates::CallFunc_MakeLiteralBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_RefreshItemViewHandlerStates, K2Node_Select_Default) == 0x000008, "Member 'ItemInspectScreen_C_RefreshItemViewHandlerStates::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_RefreshItemViewHandlerStates, K2Node_Select1_Default) == 0x000009, "Member 'ItemInspectScreen_C_RefreshItemViewHandlerStates::K2Node_Select1_Default' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.GetWidgetForFramingViewedItem
// 0x0018 (0x0018 - 0x0000)
struct ItemInspectScreen_C_GetWidgetForFramingViewedItem final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_Select_Default;                             // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemInspectScreen_C_GetWidgetForFramingViewedItem) == 0x000008, "Wrong alignment on ItemInspectScreen_C_GetWidgetForFramingViewedItem");
static_assert(sizeof(ItemInspectScreen_C_GetWidgetForFramingViewedItem) == 0x000018, "Wrong size on ItemInspectScreen_C_GetWidgetForFramingViewedItem");
static_assert(offsetof(ItemInspectScreen_C_GetWidgetForFramingViewedItem, ReturnValue) == 0x000000, "Member 'ItemInspectScreen_C_GetWidgetForFramingViewedItem::ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetWidgetForFramingViewedItem, Temp_bool_Variable) == 0x000008, "Member 'ItemInspectScreen_C_GetWidgetForFramingViewedItem::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetWidgetForFramingViewedItem, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000009, "Member 'ItemInspectScreen_C_GetWidgetForFramingViewedItem::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetWidgetForFramingViewedItem, K2Node_Select_Default) == 0x000010, "Member 'ItemInspectScreen_C_GetWidgetForFramingViewedItem::K2Node_Select_Default' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.BindDelegates
// 0x0048 (0x0048 - 0x0000)
struct ItemInspectScreen_C_BindDelegates final
{
public:
	TDelegate<void(TArray<struct FFortItemInstanceQuantityPair>& ItemsQuantities)> K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(TArray<struct FFortItemInstanceQuantityPair>& ItemsQuantities)> K2Node_CreateDelegate_OutputDelegate1;             // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(bool bCursorModeEnabled)>      K2Node_CreateDelegate_OutputDelegate2;             // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	class UFortHUDContext*                        CallFunc_GetContext_ReturnValue;                   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortMcpContext*                        CallFunc_GetContext_ReturnValue1;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortMcpContext*                        CallFunc_GetContext_ReturnValue2;                  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemInspectScreen_C_BindDelegates) == 0x000008, "Wrong alignment on ItemInspectScreen_C_BindDelegates");
static_assert(sizeof(ItemInspectScreen_C_BindDelegates) == 0x000048, "Wrong size on ItemInspectScreen_C_BindDelegates");
static_assert(offsetof(ItemInspectScreen_C_BindDelegates, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'ItemInspectScreen_C_BindDelegates::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_BindDelegates, K2Node_CreateDelegate_OutputDelegate1) == 0x000010, "Member 'ItemInspectScreen_C_BindDelegates::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_BindDelegates, K2Node_CreateDelegate_OutputDelegate2) == 0x000020, "Member 'ItemInspectScreen_C_BindDelegates::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_BindDelegates, CallFunc_GetContext_ReturnValue) == 0x000030, "Member 'ItemInspectScreen_C_BindDelegates::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_BindDelegates, CallFunc_GetContext_ReturnValue1) == 0x000038, "Member 'ItemInspectScreen_C_BindDelegates::CallFunc_GetContext_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_BindDelegates, CallFunc_GetContext_ReturnValue2) == 0x000040, "Member 'ItemInspectScreen_C_BindDelegates::CallFunc_GetContext_ReturnValue2' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.UnbindDelegates
// 0x0048 (0x0048 - 0x0000)
struct ItemInspectScreen_C_UnbindDelegates final
{
public:
	class UFortHUDContext*                        CallFunc_GetContext_ReturnValue;                   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortMcpContext*                        CallFunc_GetContext_ReturnValue1;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortMcpContext*                        CallFunc_GetContext_ReturnValue2;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(TArray<struct FFortItemInstanceQuantityPair>& ItemsQuantities)> K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(TArray<struct FFortItemInstanceQuantityPair>& ItemsQuantities)> K2Node_CreateDelegate_OutputDelegate1;             // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(bool bCursorModeEnabled)>      K2Node_CreateDelegate_OutputDelegate2;             // 0x0038(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(ItemInspectScreen_C_UnbindDelegates) == 0x000008, "Wrong alignment on ItemInspectScreen_C_UnbindDelegates");
static_assert(sizeof(ItemInspectScreen_C_UnbindDelegates) == 0x000048, "Wrong size on ItemInspectScreen_C_UnbindDelegates");
static_assert(offsetof(ItemInspectScreen_C_UnbindDelegates, CallFunc_GetContext_ReturnValue) == 0x000000, "Member 'ItemInspectScreen_C_UnbindDelegates::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_UnbindDelegates, CallFunc_GetContext_ReturnValue1) == 0x000008, "Member 'ItemInspectScreen_C_UnbindDelegates::CallFunc_GetContext_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_UnbindDelegates, CallFunc_GetContext_ReturnValue2) == 0x000010, "Member 'ItemInspectScreen_C_UnbindDelegates::CallFunc_GetContext_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_UnbindDelegates, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'ItemInspectScreen_C_UnbindDelegates::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_UnbindDelegates, K2Node_CreateDelegate_OutputDelegate1) == 0x000028, "Member 'ItemInspectScreen_C_UnbindDelegates::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_UnbindDelegates, K2Node_CreateDelegate_OutputDelegate2) == 0x000038, "Member 'ItemInspectScreen_C_UnbindDelegates::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.GetWindowTitleBarVisibility
// 0x0018 (0x0018 - 0x0000)
struct ItemInspectScreen_C_GetWindowTitleBarVisibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable1;                               // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInZone_ReturnValue;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemInspectScreen_C_GetWindowTitleBarVisibility) == 0x000008, "Wrong alignment on ItemInspectScreen_C_GetWindowTitleBarVisibility");
static_assert(sizeof(ItemInspectScreen_C_GetWindowTitleBarVisibility) == 0x000018, "Wrong size on ItemInspectScreen_C_GetWindowTitleBarVisibility");
static_assert(offsetof(ItemInspectScreen_C_GetWindowTitleBarVisibility, ReturnValue) == 0x000000, "Member 'ItemInspectScreen_C_GetWindowTitleBarVisibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetWindowTitleBarVisibility, Temp_bool_Variable) == 0x000001, "Member 'ItemInspectScreen_C_GetWindowTitleBarVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetWindowTitleBarVisibility, Temp_byte_Variable) == 0x000002, "Member 'ItemInspectScreen_C_GetWindowTitleBarVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetWindowTitleBarVisibility, Temp_byte_Variable1) == 0x000003, "Member 'ItemInspectScreen_C_GetWindowTitleBarVisibility::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetWindowTitleBarVisibility, CallFunc_GetContext_ReturnValue) == 0x000008, "Member 'ItemInspectScreen_C_GetWindowTitleBarVisibility::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetWindowTitleBarVisibility, CallFunc_IsInZone_ReturnValue) == 0x000010, "Member 'ItemInspectScreen_C_GetWindowTitleBarVisibility::CallFunc_IsInZone_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetWindowTitleBarVisibility, K2Node_Select_Default) == 0x000011, "Member 'ItemInspectScreen_C_GetWindowTitleBarVisibility::K2Node_Select_Default' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.UpdateInspectionMode
// 0x0010 (0x0010 - 0x0000)
struct ItemInspectScreen_C_UpdateInspectionMode final
{
public:
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_GetItemActionSwitcherVisibility_Return_Value; // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable1;                               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortUINavigationManager*               CallFunc_GetUINavigationManager_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemInspectScreen_C_UpdateInspectionMode) == 0x000008, "Wrong alignment on ItemInspectScreen_C_UpdateInspectionMode");
static_assert(sizeof(ItemInspectScreen_C_UpdateInspectionMode) == 0x000010, "Wrong size on ItemInspectScreen_C_UpdateInspectionMode");
static_assert(offsetof(ItemInspectScreen_C_UpdateInspectionMode, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000000, "Member 'ItemInspectScreen_C_UpdateInspectionMode::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_UpdateInspectionMode, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'ItemInspectScreen_C_UpdateInspectionMode::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_UpdateInspectionMode, CallFunc_GetItemActionSwitcherVisibility_Return_Value) == 0x000002, "Member 'ItemInspectScreen_C_UpdateInspectionMode::CallFunc_GetItemActionSwitcherVisibility_Return_Value' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_UpdateInspectionMode, Temp_byte_Variable) == 0x000003, "Member 'ItemInspectScreen_C_UpdateInspectionMode::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_UpdateInspectionMode, Temp_byte_Variable1) == 0x000004, "Member 'ItemInspectScreen_C_UpdateInspectionMode::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_UpdateInspectionMode, Temp_bool_Variable) == 0x000005, "Member 'ItemInspectScreen_C_UpdateInspectionMode::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_UpdateInspectionMode, K2Node_Select_Default) == 0x000006, "Member 'ItemInspectScreen_C_UpdateInspectionMode::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_UpdateInspectionMode, CallFunc_GetUINavigationManager_ReturnValue) == 0x000008, "Member 'ItemInspectScreen_C_UpdateInspectionMode::CallFunc_GetUINavigationManager_ReturnValue' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.HandleSchematicUpgradeOptions
// 0x0001 (0x0001 - 0x0000)
struct ItemInspectScreen_C_HandleSchematicUpgradeOptions final
{
public:
	bool                                          bPassThrough;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemInspectScreen_C_HandleSchematicUpgradeOptions) == 0x000001, "Wrong alignment on ItemInspectScreen_C_HandleSchematicUpgradeOptions");
static_assert(sizeof(ItemInspectScreen_C_HandleSchematicUpgradeOptions) == 0x000001, "Wrong size on ItemInspectScreen_C_HandleSchematicUpgradeOptions");
static_assert(offsetof(ItemInspectScreen_C_HandleSchematicUpgradeOptions, bPassThrough) == 0x000000, "Member 'ItemInspectScreen_C_HandleSchematicUpgradeOptions::bPassThrough' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.GetLevelUpVisibility
// 0x0010 (0x0010 - 0x0000)
struct ItemInspectScreen_C_GetLevelUpVisibility final
{
public:
	ESlateVisibility                              Return_Value;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable1;                               // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetLevel_ReturnValue;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMaxLevel_ReturnValue;                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemInspectScreen_C_GetLevelUpVisibility) == 0x000004, "Wrong alignment on ItemInspectScreen_C_GetLevelUpVisibility");
static_assert(sizeof(ItemInspectScreen_C_GetLevelUpVisibility) == 0x000010, "Wrong size on ItemInspectScreen_C_GetLevelUpVisibility");
static_assert(offsetof(ItemInspectScreen_C_GetLevelUpVisibility, Return_Value) == 0x000000, "Member 'ItemInspectScreen_C_GetLevelUpVisibility::Return_Value' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetLevelUpVisibility, Temp_bool_Variable) == 0x000001, "Member 'ItemInspectScreen_C_GetLevelUpVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetLevelUpVisibility, Temp_byte_Variable) == 0x000002, "Member 'ItemInspectScreen_C_GetLevelUpVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetLevelUpVisibility, Temp_byte_Variable1) == 0x000003, "Member 'ItemInspectScreen_C_GetLevelUpVisibility::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetLevelUpVisibility, CallFunc_GetLevel_ReturnValue) == 0x000004, "Member 'ItemInspectScreen_C_GetLevelUpVisibility::CallFunc_GetLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetLevelUpVisibility, CallFunc_GetMaxLevel_ReturnValue) == 0x000008, "Member 'ItemInspectScreen_C_GetLevelUpVisibility::CallFunc_GetMaxLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetLevelUpVisibility, CallFunc_Less_IntInt_ReturnValue) == 0x00000C, "Member 'ItemInspectScreen_C_GetLevelUpVisibility::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetLevelUpVisibility, CallFunc_BooleanAND_ReturnValue) == 0x00000D, "Member 'ItemInspectScreen_C_GetLevelUpVisibility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetLevelUpVisibility, K2Node_Select_Default) == 0x00000E, "Member 'ItemInspectScreen_C_GetLevelUpVisibility::K2Node_Select_Default' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.SetOverviewActionsInputState
// 0x000F (0x000F - 0x0000)
struct ItemInspectScreen_C_SetOverviewActionsInputState final
{
public:
	EInputActionState                             State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputActionState                             Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable1;                               // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable2;                               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable3;                               // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EInputActionState                             Temp_byte_Variable1;                               // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputActionState                             Temp_byte_Variable2;                               // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputActionState                             Temp_byte_Variable3;                               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputActionState                             Temp_byte_Variable4;                               // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EInputActionState                             CallFunc_GetFavoriteInputState_ReturnValue;        // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputActionState                             CallFunc_GetViewInputState_ReturnValue;            // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputActionState                             K2Node_Select1_Default;                            // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputActionState                             K2Node_Select2_Default;                            // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemInspectScreen_C_SetOverviewActionsInputState) == 0x000001, "Wrong alignment on ItemInspectScreen_C_SetOverviewActionsInputState");
static_assert(sizeof(ItemInspectScreen_C_SetOverviewActionsInputState) == 0x00000F, "Wrong size on ItemInspectScreen_C_SetOverviewActionsInputState");
static_assert(offsetof(ItemInspectScreen_C_SetOverviewActionsInputState, State) == 0x000000, "Member 'ItemInspectScreen_C_SetOverviewActionsInputState::State' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SetOverviewActionsInputState, Temp_byte_Variable) == 0x000001, "Member 'ItemInspectScreen_C_SetOverviewActionsInputState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SetOverviewActionsInputState, Temp_bool_Variable) == 0x000002, "Member 'ItemInspectScreen_C_SetOverviewActionsInputState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SetOverviewActionsInputState, Temp_bool_Variable1) == 0x000003, "Member 'ItemInspectScreen_C_SetOverviewActionsInputState::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SetOverviewActionsInputState, Temp_bool_Variable2) == 0x000004, "Member 'ItemInspectScreen_C_SetOverviewActionsInputState::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SetOverviewActionsInputState, Temp_bool_Variable3) == 0x000005, "Member 'ItemInspectScreen_C_SetOverviewActionsInputState::Temp_bool_Variable3' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SetOverviewActionsInputState, Temp_byte_Variable1) == 0x000006, "Member 'ItemInspectScreen_C_SetOverviewActionsInputState::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SetOverviewActionsInputState, Temp_byte_Variable2) == 0x000007, "Member 'ItemInspectScreen_C_SetOverviewActionsInputState::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SetOverviewActionsInputState, Temp_byte_Variable3) == 0x000008, "Member 'ItemInspectScreen_C_SetOverviewActionsInputState::Temp_byte_Variable3' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SetOverviewActionsInputState, Temp_byte_Variable4) == 0x000009, "Member 'ItemInspectScreen_C_SetOverviewActionsInputState::Temp_byte_Variable4' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SetOverviewActionsInputState, K2Node_Select_Default) == 0x00000A, "Member 'ItemInspectScreen_C_SetOverviewActionsInputState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SetOverviewActionsInputState, CallFunc_GetFavoriteInputState_ReturnValue) == 0x00000B, "Member 'ItemInspectScreen_C_SetOverviewActionsInputState::CallFunc_GetFavoriteInputState_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SetOverviewActionsInputState, CallFunc_GetViewInputState_ReturnValue) == 0x00000C, "Member 'ItemInspectScreen_C_SetOverviewActionsInputState::CallFunc_GetViewInputState_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SetOverviewActionsInputState, K2Node_Select1_Default) == 0x00000D, "Member 'ItemInspectScreen_C_SetOverviewActionsInputState::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SetOverviewActionsInputState, K2Node_Select2_Default) == 0x00000E, "Member 'ItemInspectScreen_C_SetOverviewActionsInputState::K2Node_Select2_Default' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.GetAlterationModifyVisibility
// 0x0020 (0x0020 - 0x0000)
struct ItemInspectScreen_C_GetAlterationModifyVisibility final
{
public:
	ESlateVisibility                              Return_Value;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable1;                               // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AlterationQuestComplete_QuestComplete;    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MeetsQuestRequirements_ReturnValue;       // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsItemSlottedInCollectionBook_ReturnValue; // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInventoryOverflowItem_ReturnValue;      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAlterableItem_ReturnValue;              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortUIFeatureState                           CallFunc_GetFeatureState_OutFeatureState;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortUIFeatureStateReason                     CallFunc_GetFeatureState_OutReason;                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue3;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue4;                  // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemInspectScreen_C_GetAlterationModifyVisibility) == 0x000008, "Wrong alignment on ItemInspectScreen_C_GetAlterationModifyVisibility");
static_assert(sizeof(ItemInspectScreen_C_GetAlterationModifyVisibility) == 0x000020, "Wrong size on ItemInspectScreen_C_GetAlterationModifyVisibility");
static_assert(offsetof(ItemInspectScreen_C_GetAlterationModifyVisibility, Return_Value) == 0x000000, "Member 'ItemInspectScreen_C_GetAlterationModifyVisibility::Return_Value' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetAlterationModifyVisibility, Temp_bool_Variable) == 0x000001, "Member 'ItemInspectScreen_C_GetAlterationModifyVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetAlterationModifyVisibility, Temp_byte_Variable) == 0x000002, "Member 'ItemInspectScreen_C_GetAlterationModifyVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetAlterationModifyVisibility, Temp_byte_Variable1) == 0x000003, "Member 'ItemInspectScreen_C_GetAlterationModifyVisibility::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetAlterationModifyVisibility, CallFunc_AlterationQuestComplete_QuestComplete) == 0x000004, "Member 'ItemInspectScreen_C_GetAlterationModifyVisibility::CallFunc_AlterationQuestComplete_QuestComplete' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetAlterationModifyVisibility, CallFunc_MeetsQuestRequirements_ReturnValue) == 0x000005, "Member 'ItemInspectScreen_C_GetAlterationModifyVisibility::CallFunc_MeetsQuestRequirements_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetAlterationModifyVisibility, CallFunc_IsItemSlottedInCollectionBook_ReturnValue) == 0x000006, "Member 'ItemInspectScreen_C_GetAlterationModifyVisibility::CallFunc_IsItemSlottedInCollectionBook_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetAlterationModifyVisibility, CallFunc_BooleanAND_ReturnValue) == 0x000007, "Member 'ItemInspectScreen_C_GetAlterationModifyVisibility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetAlterationModifyVisibility, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'ItemInspectScreen_C_GetAlterationModifyVisibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetAlterationModifyVisibility, CallFunc_IsInventoryOverflowItem_ReturnValue) == 0x000009, "Member 'ItemInspectScreen_C_GetAlterationModifyVisibility::CallFunc_IsInventoryOverflowItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetAlterationModifyVisibility, CallFunc_IsAlterableItem_ReturnValue) == 0x00000A, "Member 'ItemInspectScreen_C_GetAlterationModifyVisibility::CallFunc_IsAlterableItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetAlterationModifyVisibility, CallFunc_Not_PreBool_ReturnValue1) == 0x00000B, "Member 'ItemInspectScreen_C_GetAlterationModifyVisibility::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetAlterationModifyVisibility, CallFunc_BooleanAND_ReturnValue1) == 0x00000C, "Member 'ItemInspectScreen_C_GetAlterationModifyVisibility::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetAlterationModifyVisibility, CallFunc_GetContext_ReturnValue) == 0x000010, "Member 'ItemInspectScreen_C_GetAlterationModifyVisibility::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetAlterationModifyVisibility, CallFunc_GetFeatureState_OutFeatureState) == 0x000018, "Member 'ItemInspectScreen_C_GetAlterationModifyVisibility::CallFunc_GetFeatureState_OutFeatureState' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetAlterationModifyVisibility, CallFunc_GetFeatureState_OutReason) == 0x000019, "Member 'ItemInspectScreen_C_GetAlterationModifyVisibility::CallFunc_GetFeatureState_OutReason' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetAlterationModifyVisibility, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00001A, "Member 'ItemInspectScreen_C_GetAlterationModifyVisibility::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetAlterationModifyVisibility, CallFunc_BooleanAND_ReturnValue2) == 0x00001B, "Member 'ItemInspectScreen_C_GetAlterationModifyVisibility::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetAlterationModifyVisibility, CallFunc_BooleanAND_ReturnValue3) == 0x00001C, "Member 'ItemInspectScreen_C_GetAlterationModifyVisibility::CallFunc_BooleanAND_ReturnValue3' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetAlterationModifyVisibility, CallFunc_BooleanAND_ReturnValue4) == 0x00001D, "Member 'ItemInspectScreen_C_GetAlterationModifyVisibility::CallFunc_BooleanAND_ReturnValue4' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetAlterationModifyVisibility, K2Node_Select_Default) == 0x00001E, "Member 'ItemInspectScreen_C_GetAlterationModifyVisibility::K2Node_Select_Default' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.GetUpgradeItemInputActionState
// 0x0028 (0x0028 - 0x0000)
struct ItemInspectScreen_C_GetUpgradeItemInputActionState final
{
public:
	EInputActionState                             Return_Value;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInZone_ReturnValue;                     // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EInputActionState                             Temp_byte_Variable;                                // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EInputActionState                             Temp_byte_Variable1;                               // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpgradeQuestComplete_QuestIsComplete;     // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_GetAlterationModifyVisibility_Return_Value; // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetUpgradeRarityVisibility_ReturnValue;   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue1;         // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_GetEvolutionVisibility_ReturnValue;       // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetLevelUpVisibility_Return_Value;        // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue2;         // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue3;         // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue1;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue2;                   // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EInputActionState                             K2Node_Select_Default;                             // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemInspectScreen_C_GetUpgradeItemInputActionState) == 0x000008, "Wrong alignment on ItemInspectScreen_C_GetUpgradeItemInputActionState");
static_assert(sizeof(ItemInspectScreen_C_GetUpgradeItemInputActionState) == 0x000028, "Wrong size on ItemInspectScreen_C_GetUpgradeItemInputActionState");
static_assert(offsetof(ItemInspectScreen_C_GetUpgradeItemInputActionState, Return_Value) == 0x000000, "Member 'ItemInspectScreen_C_GetUpgradeItemInputActionState::Return_Value' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetUpgradeItemInputActionState, CallFunc_GetContext_ReturnValue) == 0x000008, "Member 'ItemInspectScreen_C_GetUpgradeItemInputActionState::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetUpgradeItemInputActionState, Temp_bool_Variable) == 0x000010, "Member 'ItemInspectScreen_C_GetUpgradeItemInputActionState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetUpgradeItemInputActionState, CallFunc_IsInZone_ReturnValue) == 0x000011, "Member 'ItemInspectScreen_C_GetUpgradeItemInputActionState::CallFunc_IsInZone_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetUpgradeItemInputActionState, Temp_byte_Variable) == 0x000012, "Member 'ItemInspectScreen_C_GetUpgradeItemInputActionState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetUpgradeItemInputActionState, CallFunc_Not_PreBool_ReturnValue) == 0x000013, "Member 'ItemInspectScreen_C_GetUpgradeItemInputActionState::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetUpgradeItemInputActionState, Temp_byte_Variable1) == 0x000014, "Member 'ItemInspectScreen_C_GetUpgradeItemInputActionState::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetUpgradeItemInputActionState, CallFunc_UpgradeQuestComplete_QuestIsComplete) == 0x000015, "Member 'ItemInspectScreen_C_GetUpgradeItemInputActionState::CallFunc_UpgradeQuestComplete_QuestIsComplete' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetUpgradeItemInputActionState, CallFunc_BooleanAND_ReturnValue) == 0x000016, "Member 'ItemInspectScreen_C_GetUpgradeItemInputActionState::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetUpgradeItemInputActionState, CallFunc_GetAlterationModifyVisibility_Return_Value) == 0x000017, "Member 'ItemInspectScreen_C_GetUpgradeItemInputActionState::CallFunc_GetAlterationModifyVisibility_Return_Value' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetUpgradeItemInputActionState, CallFunc_GetUpgradeRarityVisibility_ReturnValue) == 0x000018, "Member 'ItemInspectScreen_C_GetUpgradeItemInputActionState::CallFunc_GetUpgradeRarityVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetUpgradeItemInputActionState, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000019, "Member 'ItemInspectScreen_C_GetUpgradeItemInputActionState::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetUpgradeItemInputActionState, CallFunc_EqualEqual_ByteByte_ReturnValue1) == 0x00001A, "Member 'ItemInspectScreen_C_GetUpgradeItemInputActionState::CallFunc_EqualEqual_ByteByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetUpgradeItemInputActionState, CallFunc_GetEvolutionVisibility_ReturnValue) == 0x00001B, "Member 'ItemInspectScreen_C_GetUpgradeItemInputActionState::CallFunc_GetEvolutionVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetUpgradeItemInputActionState, CallFunc_GetLevelUpVisibility_Return_Value) == 0x00001C, "Member 'ItemInspectScreen_C_GetUpgradeItemInputActionState::CallFunc_GetLevelUpVisibility_Return_Value' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetUpgradeItemInputActionState, CallFunc_EqualEqual_ByteByte_ReturnValue2) == 0x00001D, "Member 'ItemInspectScreen_C_GetUpgradeItemInputActionState::CallFunc_EqualEqual_ByteByte_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetUpgradeItemInputActionState, CallFunc_EqualEqual_ByteByte_ReturnValue3) == 0x00001E, "Member 'ItemInspectScreen_C_GetUpgradeItemInputActionState::CallFunc_EqualEqual_ByteByte_ReturnValue3' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetUpgradeItemInputActionState, CallFunc_BooleanOR_ReturnValue) == 0x00001F, "Member 'ItemInspectScreen_C_GetUpgradeItemInputActionState::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetUpgradeItemInputActionState, CallFunc_BooleanOR_ReturnValue1) == 0x000020, "Member 'ItemInspectScreen_C_GetUpgradeItemInputActionState::CallFunc_BooleanOR_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetUpgradeItemInputActionState, CallFunc_BooleanOR_ReturnValue2) == 0x000021, "Member 'ItemInspectScreen_C_GetUpgradeItemInputActionState::CallFunc_BooleanOR_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetUpgradeItemInputActionState, CallFunc_BooleanAND_ReturnValue1) == 0x000022, "Member 'ItemInspectScreen_C_GetUpgradeItemInputActionState::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetUpgradeItemInputActionState, K2Node_Select_Default) == 0x000023, "Member 'ItemInspectScreen_C_GetUpgradeItemInputActionState::K2Node_Select_Default' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.GetItemActionSwitcherVisibility
// 0x0018 (0x0018 - 0x0000)
struct ItemInspectScreen_C_GetItemActionSwitcherVisibility final
{
public:
	ESlateVisibility                              Return_Value;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable1;                               // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInZone_ReturnValue;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemInspectScreen_C_GetItemActionSwitcherVisibility) == 0x000008, "Wrong alignment on ItemInspectScreen_C_GetItemActionSwitcherVisibility");
static_assert(sizeof(ItemInspectScreen_C_GetItemActionSwitcherVisibility) == 0x000018, "Wrong size on ItemInspectScreen_C_GetItemActionSwitcherVisibility");
static_assert(offsetof(ItemInspectScreen_C_GetItemActionSwitcherVisibility, Return_Value) == 0x000000, "Member 'ItemInspectScreen_C_GetItemActionSwitcherVisibility::Return_Value' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetItemActionSwitcherVisibility, Temp_bool_Variable) == 0x000001, "Member 'ItemInspectScreen_C_GetItemActionSwitcherVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetItemActionSwitcherVisibility, Temp_byte_Variable) == 0x000002, "Member 'ItemInspectScreen_C_GetItemActionSwitcherVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetItemActionSwitcherVisibility, Temp_byte_Variable1) == 0x000003, "Member 'ItemInspectScreen_C_GetItemActionSwitcherVisibility::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetItemActionSwitcherVisibility, CallFunc_GetContext_ReturnValue) == 0x000008, "Member 'ItemInspectScreen_C_GetItemActionSwitcherVisibility::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetItemActionSwitcherVisibility, CallFunc_IsInZone_ReturnValue) == 0x000010, "Member 'ItemInspectScreen_C_GetItemActionSwitcherVisibility::CallFunc_IsInZone_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetItemActionSwitcherVisibility, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'ItemInspectScreen_C_GetItemActionSwitcherVisibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetItemActionSwitcherVisibility, K2Node_Select_Default) == 0x000012, "Member 'ItemInspectScreen_C_GetItemActionSwitcherVisibility::K2Node_Select_Default' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.HandleAlterationModify
// 0x0008 (0x0008 - 0x0000)
struct ItemInspectScreen_C_HandleAlterationModify final
{
public:
	class UFortAlterableItem*                     AlterableItem;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemInspectScreen_C_HandleAlterationModify) == 0x000008, "Wrong alignment on ItemInspectScreen_C_HandleAlterationModify");
static_assert(sizeof(ItemInspectScreen_C_HandleAlterationModify) == 0x000008, "Wrong size on ItemInspectScreen_C_HandleAlterationModify");
static_assert(offsetof(ItemInspectScreen_C_HandleAlterationModify, AlterableItem) == 0x000000, "Member 'ItemInspectScreen_C_HandleAlterationModify::AlterableItem' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.CreateUpgradePopupMenu
// 0x0020 (0x0020 - 0x0000)
struct ItemInspectScreen_C_CreateUpgradePopupMenu final
{
public:
	class UFortUIManagerWidget_NUI*               CallFunc_GetUIManagerWidget_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetCachedWidget_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UItemInspectUpgradePopupMenu_C*         K2Node_DynamicCast_AsItem_Inspect_Upgrade_Popup_Menu; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemInspectScreen_C_CreateUpgradePopupMenu) == 0x000008, "Wrong alignment on ItemInspectScreen_C_CreateUpgradePopupMenu");
static_assert(sizeof(ItemInspectScreen_C_CreateUpgradePopupMenu) == 0x000020, "Wrong size on ItemInspectScreen_C_CreateUpgradePopupMenu");
static_assert(offsetof(ItemInspectScreen_C_CreateUpgradePopupMenu, CallFunc_GetUIManagerWidget_ReturnValue) == 0x000000, "Member 'ItemInspectScreen_C_CreateUpgradePopupMenu::CallFunc_GetUIManagerWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_CreateUpgradePopupMenu, CallFunc_GetCachedWidget_ReturnValue) == 0x000008, "Member 'ItemInspectScreen_C_CreateUpgradePopupMenu::CallFunc_GetCachedWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_CreateUpgradePopupMenu, K2Node_DynamicCast_AsItem_Inspect_Upgrade_Popup_Menu) == 0x000010, "Member 'ItemInspectScreen_C_CreateUpgradePopupMenu::K2Node_DynamicCast_AsItem_Inspect_Upgrade_Popup_Menu' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_CreateUpgradePopupMenu, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'ItemInspectScreen_C_CreateUpgradePopupMenu::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.IsAlterableItem
// 0x0030 (0x0030 - 0x0000)
struct ItemInspectScreen_C_IsAlterableItem final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAlterableItem*                     K2Node_DynamicCast_AsFort_Alterable_Item;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFortAlterationSlotStatus>      CallFunc_GetAlterationSlots_ReturnValue;           // 0x0018(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemInspectScreen_C_IsAlterableItem) == 0x000008, "Wrong alignment on ItemInspectScreen_C_IsAlterableItem");
static_assert(sizeof(ItemInspectScreen_C_IsAlterableItem) == 0x000030, "Wrong size on ItemInspectScreen_C_IsAlterableItem");
static_assert(offsetof(ItemInspectScreen_C_IsAlterableItem, ReturnValue) == 0x000000, "Member 'ItemInspectScreen_C_IsAlterableItem::ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_IsAlterableItem, K2Node_DynamicCast_AsFort_Alterable_Item) == 0x000008, "Member 'ItemInspectScreen_C_IsAlterableItem::K2Node_DynamicCast_AsFort_Alterable_Item' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_IsAlterableItem, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'ItemInspectScreen_C_IsAlterableItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_IsAlterableItem, CallFunc_GetAlterationSlots_ReturnValue) == 0x000018, "Member 'ItemInspectScreen_C_IsAlterableItem::CallFunc_GetAlterationSlots_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_IsAlterableItem, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'ItemInspectScreen_C_IsAlterableItem::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_IsAlterableItem, CallFunc_Greater_IntInt_ReturnValue) == 0x00002C, "Member 'ItemInspectScreen_C_IsAlterableItem::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_IsAlterableItem, CallFunc_BooleanAND_ReturnValue) == 0x00002D, "Member 'ItemInspectScreen_C_IsAlterableItem::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.MeetsQuestRequirements
// 0x0030 (0x0030 - 0x0000)
struct ItemInspectScreen_C_MeetsQuestRequirements final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortQuestItem*                         QuestItem;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortQuestState                               CallFunc_GetQuestState_ReturnValue;                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortQuestManager*                      CallFunc_GetQuestManager_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortQuestItem*                         CallFunc_GetQuestWithDefinition_ReturnValue;       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemInspectScreen_C_MeetsQuestRequirements) == 0x000008, "Wrong alignment on ItemInspectScreen_C_MeetsQuestRequirements");
static_assert(sizeof(ItemInspectScreen_C_MeetsQuestRequirements) == 0x000030, "Wrong size on ItemInspectScreen_C_MeetsQuestRequirements");
static_assert(offsetof(ItemInspectScreen_C_MeetsQuestRequirements, ReturnValue) == 0x000000, "Member 'ItemInspectScreen_C_MeetsQuestRequirements::ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_MeetsQuestRequirements, QuestItem) == 0x000008, "Member 'ItemInspectScreen_C_MeetsQuestRequirements::QuestItem' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_MeetsQuestRequirements, CallFunc_GetQuestState_ReturnValue) == 0x000010, "Member 'ItemInspectScreen_C_MeetsQuestRequirements::CallFunc_GetQuestState_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_MeetsQuestRequirements, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'ItemInspectScreen_C_MeetsQuestRequirements::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_MeetsQuestRequirements, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000012, "Member 'ItemInspectScreen_C_MeetsQuestRequirements::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_MeetsQuestRequirements, CallFunc_GetContext_ReturnValue) == 0x000018, "Member 'ItemInspectScreen_C_MeetsQuestRequirements::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_MeetsQuestRequirements, CallFunc_GetQuestManager_ReturnValue) == 0x000020, "Member 'ItemInspectScreen_C_MeetsQuestRequirements::CallFunc_GetQuestManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_MeetsQuestRequirements, CallFunc_GetQuestWithDefinition_ReturnValue) == 0x000028, "Member 'ItemInspectScreen_C_MeetsQuestRequirements::CallFunc_GetQuestWithDefinition_ReturnValue' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.SchematicRequirementsMet
// 0x0060 (0x0060 - 0x0000)
struct ItemInspectScreen_C_SchematicRequirementsMet final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortUIFeatureState                           CallFunc_GetFeatureState_OutFeatureState;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortUIFeatureStateReason                     CallFunc_GetFeatureState_OutReason;                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItemDefinition*                    CallFunc_GetItemDefinitionBP_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetRequiredTagContainer_HasRequiredTag;   // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_GetRequiredTagContainer_RequiredTagContainer; // 0x0028(0x0020)()
	bool                                          CallFunc_DoesItemHaveLegacyAlterations_ReturnValue; // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortItemType                                 CallFunc_GetType_ReturnValue;                      // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B[0x5];                                       // 0x004B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortInventoryContext*                  CallFunc_GetContext_ReturnValue1;                  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue1;         // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasGameplayTagContainer_ReturnValue;      // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue3;                  // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemInspectScreen_C_SchematicRequirementsMet) == 0x000008, "Wrong alignment on ItemInspectScreen_C_SchematicRequirementsMet");
static_assert(sizeof(ItemInspectScreen_C_SchematicRequirementsMet) == 0x000060, "Wrong size on ItemInspectScreen_C_SchematicRequirementsMet");
static_assert(offsetof(ItemInspectScreen_C_SchematicRequirementsMet, ReturnValue) == 0x000000, "Member 'ItemInspectScreen_C_SchematicRequirementsMet::ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SchematicRequirementsMet, CallFunc_GetContext_ReturnValue) == 0x000008, "Member 'ItemInspectScreen_C_SchematicRequirementsMet::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SchematicRequirementsMet, CallFunc_GetFeatureState_OutFeatureState) == 0x000010, "Member 'ItemInspectScreen_C_SchematicRequirementsMet::CallFunc_GetFeatureState_OutFeatureState' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SchematicRequirementsMet, CallFunc_GetFeatureState_OutReason) == 0x000011, "Member 'ItemInspectScreen_C_SchematicRequirementsMet::CallFunc_GetFeatureState_OutReason' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SchematicRequirementsMet, CallFunc_GetItemDefinitionBP_ReturnValue) == 0x000018, "Member 'ItemInspectScreen_C_SchematicRequirementsMet::CallFunc_GetItemDefinitionBP_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SchematicRequirementsMet, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000020, "Member 'ItemInspectScreen_C_SchematicRequirementsMet::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SchematicRequirementsMet, CallFunc_GetRequiredTagContainer_HasRequiredTag) == 0x000021, "Member 'ItemInspectScreen_C_SchematicRequirementsMet::CallFunc_GetRequiredTagContainer_HasRequiredTag' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SchematicRequirementsMet, CallFunc_GetRequiredTagContainer_RequiredTagContainer) == 0x000028, "Member 'ItemInspectScreen_C_SchematicRequirementsMet::CallFunc_GetRequiredTagContainer_RequiredTagContainer' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SchematicRequirementsMet, CallFunc_DoesItemHaveLegacyAlterations_ReturnValue) == 0x000048, "Member 'ItemInspectScreen_C_SchematicRequirementsMet::CallFunc_DoesItemHaveLegacyAlterations_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SchematicRequirementsMet, CallFunc_Not_PreBool_ReturnValue) == 0x000049, "Member 'ItemInspectScreen_C_SchematicRequirementsMet::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SchematicRequirementsMet, CallFunc_GetType_ReturnValue) == 0x00004A, "Member 'ItemInspectScreen_C_SchematicRequirementsMet::CallFunc_GetType_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SchematicRequirementsMet, CallFunc_GetContext_ReturnValue1) == 0x000050, "Member 'ItemInspectScreen_C_SchematicRequirementsMet::CallFunc_GetContext_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SchematicRequirementsMet, CallFunc_EqualEqual_ByteByte_ReturnValue1) == 0x000058, "Member 'ItemInspectScreen_C_SchematicRequirementsMet::CallFunc_EqualEqual_ByteByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SchematicRequirementsMet, CallFunc_HasGameplayTagContainer_ReturnValue) == 0x000059, "Member 'ItemInspectScreen_C_SchematicRequirementsMet::CallFunc_HasGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SchematicRequirementsMet, CallFunc_BooleanAND_ReturnValue) == 0x00005A, "Member 'ItemInspectScreen_C_SchematicRequirementsMet::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SchematicRequirementsMet, CallFunc_BooleanAND_ReturnValue1) == 0x00005B, "Member 'ItemInspectScreen_C_SchematicRequirementsMet::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SchematicRequirementsMet, CallFunc_BooleanAND_ReturnValue2) == 0x00005C, "Member 'ItemInspectScreen_C_SchematicRequirementsMet::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SchematicRequirementsMet, CallFunc_BooleanAND_ReturnValue3) == 0x00005D, "Member 'ItemInspectScreen_C_SchematicRequirementsMet::CallFunc_BooleanAND_ReturnValue3' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.GetRequiredTagContainer
// 0x00D0 (0x00D0 - 0x0000)
struct ItemInspectScreen_C_GetRequiredTagContainer final
{
public:
	class UFortItemDefinition*                    ItemDef;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasRequiredTag;                                    // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  RequiredTagContainer;                              // 0x0010(0x0020)(Parm, OutParm)
	struct FGameplayTagContainer                  TC_Return;                                         // 0x0030(0x0020)(Edit, BlueprintVisible)
	bool                                          b_Return;                                          // 0x0050(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGameplayTag>                   CallFunc_Map_Values_Values;                        // 0x0060(0x0010)(ZeroConstructor, ReferenceParm)
	struct FGameplayTag                           CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_MakeGameplayTagContainerFromTag_ReturnValue; // 0x0078(0x0020)()
	TArray<struct FGameplayTag>                   CallFunc_Map_Keys_Keys;                            // 0x0098(0x0010)(ZeroConstructor, ReferenceParm)
	struct FGameplayTag                           CallFunc_Array_Get_Item1;                          // 0x00A8(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_DoesTagAssetInterfaceHaveTag_TagContainerInterface_CastInput; // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesTagAssetInterfaceHaveTag_ReturnValue; // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemInspectScreen_C_GetRequiredTagContainer) == 0x000008, "Wrong alignment on ItemInspectScreen_C_GetRequiredTagContainer");
static_assert(sizeof(ItemInspectScreen_C_GetRequiredTagContainer) == 0x0000D0, "Wrong size on ItemInspectScreen_C_GetRequiredTagContainer");
static_assert(offsetof(ItemInspectScreen_C_GetRequiredTagContainer, ItemDef) == 0x000000, "Member 'ItemInspectScreen_C_GetRequiredTagContainer::ItemDef' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetRequiredTagContainer, HasRequiredTag) == 0x000008, "Member 'ItemInspectScreen_C_GetRequiredTagContainer::HasRequiredTag' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetRequiredTagContainer, RequiredTagContainer) == 0x000010, "Member 'ItemInspectScreen_C_GetRequiredTagContainer::RequiredTagContainer' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetRequiredTagContainer, TC_Return) == 0x000030, "Member 'ItemInspectScreen_C_GetRequiredTagContainer::TC_Return' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetRequiredTagContainer, b_Return) == 0x000050, "Member 'ItemInspectScreen_C_GetRequiredTagContainer::b_Return' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetRequiredTagContainer, Temp_bool_True_if_break_was_hit_Variable) == 0x000051, "Member 'ItemInspectScreen_C_GetRequiredTagContainer::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetRequiredTagContainer, CallFunc_IsValid_ReturnValue) == 0x000052, "Member 'ItemInspectScreen_C_GetRequiredTagContainer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetRequiredTagContainer, CallFunc_Not_PreBool_ReturnValue) == 0x000053, "Member 'ItemInspectScreen_C_GetRequiredTagContainer::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetRequiredTagContainer, Temp_int_Array_Index_Variable) == 0x000054, "Member 'ItemInspectScreen_C_GetRequiredTagContainer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetRequiredTagContainer, Temp_int_Loop_Counter_Variable) == 0x000058, "Member 'ItemInspectScreen_C_GetRequiredTagContainer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetRequiredTagContainer, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'ItemInspectScreen_C_GetRequiredTagContainer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetRequiredTagContainer, CallFunc_Map_Values_Values) == 0x000060, "Member 'ItemInspectScreen_C_GetRequiredTagContainer::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetRequiredTagContainer, CallFunc_Array_Get_Item) == 0x000070, "Member 'ItemInspectScreen_C_GetRequiredTagContainer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetRequiredTagContainer, CallFunc_MakeGameplayTagContainerFromTag_ReturnValue) == 0x000078, "Member 'ItemInspectScreen_C_GetRequiredTagContainer::CallFunc_MakeGameplayTagContainerFromTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetRequiredTagContainer, CallFunc_Map_Keys_Keys) == 0x000098, "Member 'ItemInspectScreen_C_GetRequiredTagContainer::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetRequiredTagContainer, CallFunc_Array_Get_Item1) == 0x0000A8, "Member 'ItemInspectScreen_C_GetRequiredTagContainer::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetRequiredTagContainer, CallFunc_Array_Length_ReturnValue) == 0x0000B0, "Member 'ItemInspectScreen_C_GetRequiredTagContainer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetRequiredTagContainer, CallFunc_DoesTagAssetInterfaceHaveTag_TagContainerInterface_CastInput) == 0x0000B8, "Member 'ItemInspectScreen_C_GetRequiredTagContainer::CallFunc_DoesTagAssetInterfaceHaveTag_TagContainerInterface_CastInput' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetRequiredTagContainer, CallFunc_DoesTagAssetInterfaceHaveTag_ReturnValue) == 0x0000C8, "Member 'ItemInspectScreen_C_GetRequiredTagContainer::CallFunc_DoesTagAssetInterfaceHaveTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetRequiredTagContainer, CallFunc_Less_IntInt_ReturnValue) == 0x0000C9, "Member 'ItemInspectScreen_C_GetRequiredTagContainer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetRequiredTagContainer, CallFunc_BooleanAND_ReturnValue) == 0x0000CA, "Member 'ItemInspectScreen_C_GetRequiredTagContainer::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.SetupScrollWidget
// 0x0008 (0x0008 - 0x0000)
struct ItemInspectScreen_C_SetupScrollWidget final
{
public:
	class UFortUINavigationManager*               CallFunc_GetUINavigationManager_ReturnValue;       // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemInspectScreen_C_SetupScrollWidget) == 0x000008, "Wrong alignment on ItemInspectScreen_C_SetupScrollWidget");
static_assert(sizeof(ItemInspectScreen_C_SetupScrollWidget) == 0x000008, "Wrong size on ItemInspectScreen_C_SetupScrollWidget");
static_assert(offsetof(ItemInspectScreen_C_SetupScrollWidget, CallFunc_GetUINavigationManager_ReturnValue) == 0x000000, "Member 'ItemInspectScreen_C_SetupScrollWidget::CallFunc_GetUINavigationManager_ReturnValue' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.SetupUpgrades
// 0x0001 (0x0001 - 0x0000)
struct ItemInspectScreen_C_SetupUpgrades final
{
public:
	bool                                          CallFunc_UpgradeQuestComplete_QuestIsComplete;     // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemInspectScreen_C_SetupUpgrades) == 0x000001, "Wrong alignment on ItemInspectScreen_C_SetupUpgrades");
static_assert(sizeof(ItemInspectScreen_C_SetupUpgrades) == 0x000001, "Wrong size on ItemInspectScreen_C_SetupUpgrades");
static_assert(offsetof(ItemInspectScreen_C_SetupUpgrades, CallFunc_UpgradeQuestComplete_QuestIsComplete) == 0x000000, "Member 'ItemInspectScreen_C_SetupUpgrades::CallFunc_UpgradeQuestComplete_QuestIsComplete' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.UpgradeQuestComplete
// 0x0060 (0x0060 - 0x0000)
struct ItemInspectScreen_C_UpgradeQuestComplete final
{
public:
	bool                                          QuestIsComplete;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortGlobalUIContext*                   CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortQuestManager*                      CallFunc_GetQuestManager_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortItemType                                 CallFunc_GetType_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortQuestItem*                         CallFunc_GetQuestWithDefinition_ReturnValue;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortQuestItem*                         CallFunc_GetQuestWithDefinition_ReturnValue1;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortQuestItem*                         CallFunc_GetQuestWithDefinition_ReturnValue2;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortQuestItem*                         CallFunc_GetQuestWithDefinition_ReturnValue3;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemInspectScreen_C_UpgradeQuestComplete) == 0x000008, "Wrong alignment on ItemInspectScreen_C_UpgradeQuestComplete");
static_assert(sizeof(ItemInspectScreen_C_UpgradeQuestComplete) == 0x000060, "Wrong size on ItemInspectScreen_C_UpgradeQuestComplete");
static_assert(offsetof(ItemInspectScreen_C_UpgradeQuestComplete, QuestIsComplete) == 0x000000, "Member 'ItemInspectScreen_C_UpgradeQuestComplete::QuestIsComplete' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_UpgradeQuestComplete, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000008, "Member 'ItemInspectScreen_C_UpgradeQuestComplete::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_UpgradeQuestComplete, CallFunc_GetQuestManager_ReturnValue) == 0x000010, "Member 'ItemInspectScreen_C_UpgradeQuestComplete::CallFunc_GetQuestManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_UpgradeQuestComplete, CallFunc_GetType_ReturnValue) == 0x000018, "Member 'ItemInspectScreen_C_UpgradeQuestComplete::CallFunc_GetType_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_UpgradeQuestComplete, CallFunc_GetQuestWithDefinition_ReturnValue) == 0x000020, "Member 'ItemInspectScreen_C_UpgradeQuestComplete::CallFunc_GetQuestWithDefinition_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_UpgradeQuestComplete, K2Node_SwitchEnum_CmpSuccess) == 0x000028, "Member 'ItemInspectScreen_C_UpgradeQuestComplete::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_UpgradeQuestComplete, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'ItemInspectScreen_C_UpgradeQuestComplete::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_UpgradeQuestComplete, CallFunc_GetQuestWithDefinition_ReturnValue1) == 0x000030, "Member 'ItemInspectScreen_C_UpgradeQuestComplete::CallFunc_GetQuestWithDefinition_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_UpgradeQuestComplete, CallFunc_IsValid_ReturnValue1) == 0x000038, "Member 'ItemInspectScreen_C_UpgradeQuestComplete::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_UpgradeQuestComplete, CallFunc_GetQuestWithDefinition_ReturnValue2) == 0x000040, "Member 'ItemInspectScreen_C_UpgradeQuestComplete::CallFunc_GetQuestWithDefinition_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_UpgradeQuestComplete, CallFunc_IsValid_ReturnValue2) == 0x000048, "Member 'ItemInspectScreen_C_UpgradeQuestComplete::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_UpgradeQuestComplete, CallFunc_GetQuestWithDefinition_ReturnValue3) == 0x000050, "Member 'ItemInspectScreen_C_UpgradeQuestComplete::CallFunc_GetQuestWithDefinition_ReturnValue3' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_UpgradeQuestComplete, CallFunc_IsValid_ReturnValue3) == 0x000058, "Member 'ItemInspectScreen_C_UpgradeQuestComplete::CallFunc_IsValid_ReturnValue3' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.AlterationQuestComplete
// 0x0018 (0x0018 - 0x0000)
struct ItemInspectScreen_C_AlterationQuestComplete final
{
public:
	bool                                          QuestComplete;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortInventoryContext*                  CallFunc_GetContext_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTotalItemQuantityByDefinition_ReturnValue; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemInspectScreen_C_AlterationQuestComplete) == 0x000008, "Wrong alignment on ItemInspectScreen_C_AlterationQuestComplete");
static_assert(sizeof(ItemInspectScreen_C_AlterationQuestComplete) == 0x000018, "Wrong size on ItemInspectScreen_C_AlterationQuestComplete");
static_assert(offsetof(ItemInspectScreen_C_AlterationQuestComplete, QuestComplete) == 0x000000, "Member 'ItemInspectScreen_C_AlterationQuestComplete::QuestComplete' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_AlterationQuestComplete, CallFunc_GetContext_ReturnValue) == 0x000008, "Member 'ItemInspectScreen_C_AlterationQuestComplete::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_AlterationQuestComplete, CallFunc_GetTotalItemQuantityByDefinition_ReturnValue) == 0x000010, "Member 'ItemInspectScreen_C_AlterationQuestComplete::CallFunc_GetTotalItemQuantityByDefinition_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_AlterationQuestComplete, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000014, "Member 'ItemInspectScreen_C_AlterationQuestComplete::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.CheckForSideTutorialQuests
// 0x0058 (0x0058 - 0x0000)
struct ItemInspectScreen_C_CheckForSideTutorialQuests final
{
public:
	bool                                          RelevantSideQuestFound;                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortQuestManager*                      CallFunc_GetQuestManager_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortItemType                                 CallFunc_GetType_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortQuestItem*                         CallFunc_GetQuestWithDefinition_ReturnValue;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasCompletedQuest_ReturnValue;            // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue1;         // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue2;         // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UFortQuestItem*                         CallFunc_GetQuestWithDefinition_ReturnValue1;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasCompletedQuest_ReturnValue1;           // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortQuestItem*                         CallFunc_GetQuestWithDefinition_ReturnValue2;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue4;                     // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue3;                  // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue5;                     // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasCompletedQuest_ReturnValue2;           // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue6;                     // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue3;                 // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue4;                  // 0x004F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue5;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue6;                  // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemInspectScreen_C_CheckForSideTutorialQuests) == 0x000008, "Wrong alignment on ItemInspectScreen_C_CheckForSideTutorialQuests");
static_assert(sizeof(ItemInspectScreen_C_CheckForSideTutorialQuests) == 0x000058, "Wrong size on ItemInspectScreen_C_CheckForSideTutorialQuests");
static_assert(offsetof(ItemInspectScreen_C_CheckForSideTutorialQuests, RelevantSideQuestFound) == 0x000000, "Member 'ItemInspectScreen_C_CheckForSideTutorialQuests::RelevantSideQuestFound' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_CheckForSideTutorialQuests, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'ItemInspectScreen_C_CheckForSideTutorialQuests::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_CheckForSideTutorialQuests, CallFunc_GetContext_ReturnValue) == 0x000008, "Member 'ItemInspectScreen_C_CheckForSideTutorialQuests::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_CheckForSideTutorialQuests, CallFunc_GetQuestManager_ReturnValue) == 0x000010, "Member 'ItemInspectScreen_C_CheckForSideTutorialQuests::CallFunc_GetQuestManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_CheckForSideTutorialQuests, CallFunc_GetType_ReturnValue) == 0x000018, "Member 'ItemInspectScreen_C_CheckForSideTutorialQuests::CallFunc_GetType_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_CheckForSideTutorialQuests, CallFunc_GetQuestWithDefinition_ReturnValue) == 0x000020, "Member 'ItemInspectScreen_C_CheckForSideTutorialQuests::CallFunc_GetQuestWithDefinition_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_CheckForSideTutorialQuests, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000028, "Member 'ItemInspectScreen_C_CheckForSideTutorialQuests::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_CheckForSideTutorialQuests, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'ItemInspectScreen_C_CheckForSideTutorialQuests::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_CheckForSideTutorialQuests, CallFunc_IsValid_ReturnValue1) == 0x00002A, "Member 'ItemInspectScreen_C_CheckForSideTutorialQuests::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_CheckForSideTutorialQuests, CallFunc_HasCompletedQuest_ReturnValue) == 0x00002B, "Member 'ItemInspectScreen_C_CheckForSideTutorialQuests::CallFunc_HasCompletedQuest_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_CheckForSideTutorialQuests, CallFunc_EqualEqual_ByteByte_ReturnValue1) == 0x00002C, "Member 'ItemInspectScreen_C_CheckForSideTutorialQuests::CallFunc_EqualEqual_ByteByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_CheckForSideTutorialQuests, CallFunc_Not_PreBool_ReturnValue1) == 0x00002D, "Member 'ItemInspectScreen_C_CheckForSideTutorialQuests::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_CheckForSideTutorialQuests, CallFunc_EqualEqual_ByteByte_ReturnValue2) == 0x00002E, "Member 'ItemInspectScreen_C_CheckForSideTutorialQuests::CallFunc_EqualEqual_ByteByte_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_CheckForSideTutorialQuests, CallFunc_BooleanAND_ReturnValue) == 0x00002F, "Member 'ItemInspectScreen_C_CheckForSideTutorialQuests::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_CheckForSideTutorialQuests, CallFunc_GetQuestWithDefinition_ReturnValue1) == 0x000030, "Member 'ItemInspectScreen_C_CheckForSideTutorialQuests::CallFunc_GetQuestWithDefinition_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_CheckForSideTutorialQuests, CallFunc_BooleanAND_ReturnValue1) == 0x000038, "Member 'ItemInspectScreen_C_CheckForSideTutorialQuests::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_CheckForSideTutorialQuests, CallFunc_IsValid_ReturnValue2) == 0x000039, "Member 'ItemInspectScreen_C_CheckForSideTutorialQuests::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_CheckForSideTutorialQuests, CallFunc_HasCompletedQuest_ReturnValue1) == 0x00003A, "Member 'ItemInspectScreen_C_CheckForSideTutorialQuests::CallFunc_HasCompletedQuest_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_CheckForSideTutorialQuests, CallFunc_IsValid_ReturnValue3) == 0x00003B, "Member 'ItemInspectScreen_C_CheckForSideTutorialQuests::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_CheckForSideTutorialQuests, CallFunc_Not_PreBool_ReturnValue2) == 0x00003C, "Member 'ItemInspectScreen_C_CheckForSideTutorialQuests::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_CheckForSideTutorialQuests, CallFunc_GetQuestWithDefinition_ReturnValue2) == 0x000040, "Member 'ItemInspectScreen_C_CheckForSideTutorialQuests::CallFunc_GetQuestWithDefinition_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_CheckForSideTutorialQuests, CallFunc_BooleanAND_ReturnValue2) == 0x000048, "Member 'ItemInspectScreen_C_CheckForSideTutorialQuests::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_CheckForSideTutorialQuests, CallFunc_IsValid_ReturnValue4) == 0x000049, "Member 'ItemInspectScreen_C_CheckForSideTutorialQuests::CallFunc_IsValid_ReturnValue4' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_CheckForSideTutorialQuests, CallFunc_BooleanAND_ReturnValue3) == 0x00004A, "Member 'ItemInspectScreen_C_CheckForSideTutorialQuests::CallFunc_BooleanAND_ReturnValue3' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_CheckForSideTutorialQuests, CallFunc_IsValid_ReturnValue5) == 0x00004B, "Member 'ItemInspectScreen_C_CheckForSideTutorialQuests::CallFunc_IsValid_ReturnValue5' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_CheckForSideTutorialQuests, CallFunc_HasCompletedQuest_ReturnValue2) == 0x00004C, "Member 'ItemInspectScreen_C_CheckForSideTutorialQuests::CallFunc_HasCompletedQuest_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_CheckForSideTutorialQuests, CallFunc_IsValid_ReturnValue6) == 0x00004D, "Member 'ItemInspectScreen_C_CheckForSideTutorialQuests::CallFunc_IsValid_ReturnValue6' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_CheckForSideTutorialQuests, CallFunc_Not_PreBool_ReturnValue3) == 0x00004E, "Member 'ItemInspectScreen_C_CheckForSideTutorialQuests::CallFunc_Not_PreBool_ReturnValue3' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_CheckForSideTutorialQuests, CallFunc_BooleanAND_ReturnValue4) == 0x00004F, "Member 'ItemInspectScreen_C_CheckForSideTutorialQuests::CallFunc_BooleanAND_ReturnValue4' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_CheckForSideTutorialQuests, CallFunc_BooleanAND_ReturnValue5) == 0x000050, "Member 'ItemInspectScreen_C_CheckForSideTutorialQuests::CallFunc_BooleanAND_ReturnValue5' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_CheckForSideTutorialQuests, CallFunc_BooleanAND_ReturnValue6) == 0x000051, "Member 'ItemInspectScreen_C_CheckForSideTutorialQuests::CallFunc_BooleanAND_ReturnValue6' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.HandleShowUpgradeTutorial
// 0x1B40 (0x1B40 - 0x0000)
struct ItemInspectScreen_C_HandleShowUpgradeTutorial final
{
public:
	class FText                                   Temp_text_Variable;                                // 0x0000(0x0018)()
	class FText                                   Temp_text_Variable1;                               // 0x0018(0x0018)()
	class FText                                   Temp_text_Variable2;                               // 0x0030(0x0018)()
	class FText                                   Temp_text_Variable3;                               // 0x0048(0x0018)()
	class FText                                   Temp_text_Variable4;                               // 0x0060(0x0018)()
	class FText                                   Temp_text_Variable5;                               // 0x0078(0x0018)()
	class FText                                   Temp_text_Variable6;                               // 0x0090(0x0018)()
	class FText                                   Temp_text_Variable7;                               // 0x00A8(0x0018)()
	class FText                                   Temp_text_Variable8;                               // 0x00C0(0x0018)()
	class FText                                   Temp_text_Variable9;                               // 0x00D8(0x0018)()
	class FText                                   Temp_text_Variable10;                              // 0x00F0(0x0018)()
	class FText                                   Temp_text_Variable11;                              // 0x0108(0x0018)()
	class FText                                   Temp_text_Variable12;                              // 0x0120(0x0018)()
	class FText                                   Temp_text_Variable13;                              // 0x0138(0x0018)()
	class FText                                   Temp_text_Variable14;                              // 0x0150(0x0018)()
	class FText                                   Temp_text_Variable15;                              // 0x0168(0x0018)()
	class FText                                   Temp_text_Variable16;                              // 0x0180(0x0018)()
	class FText                                   Temp_text_Variable17;                              // 0x0198(0x0018)()
	class FText                                   Temp_text_Variable18;                              // 0x01B0(0x0018)()
	class FText                                   Temp_text_Variable19;                              // 0x01C8(0x0018)()
	class FText                                   Temp_text_Variable20;                              // 0x01E0(0x0018)()
	class FText                                   Temp_text_Variable21;                              // 0x01F8(0x0018)()
	class FText                                   Temp_text_Variable22;                              // 0x0210(0x0018)()
	class FText                                   Temp_text_Variable23;                              // 0x0228(0x0018)()
	class FText                                   Temp_text_Variable24;                              // 0x0240(0x0018)()
	class FText                                   Temp_text_Variable25;                              // 0x0258(0x0018)()
	class FText                                   Temp_text_Variable26;                              // 0x0270(0x0018)()
	class FText                                   Temp_text_Variable27;                              // 0x0288(0x0018)()
	class FText                                   Temp_text_Variable28;                              // 0x02A0(0x0018)()
	class FText                                   Temp_text_Variable29;                              // 0x02B8(0x0018)()
	class FText                                   Temp_text_Variable30;                              // 0x02D0(0x0018)()
	class FText                                   Temp_text_Variable31;                              // 0x02E8(0x0018)()
	class FText                                   Temp_text_Variable32;                              // 0x0300(0x0018)()
	class FText                                   Temp_text_Variable33;                              // 0x0318(0x0018)()
	class FText                                   Temp_text_Variable34;                              // 0x0330(0x0018)()
	class FText                                   Temp_text_Variable35;                              // 0x0348(0x0018)()
	class FText                                   Temp_text_Variable36;                              // 0x0360(0x0018)()
	class FText                                   Temp_text_Variable37;                              // 0x0378(0x0018)()
	class FText                                   Temp_text_Variable38;                              // 0x0390(0x0018)()
	class FText                                   Temp_text_Variable39;                              // 0x03A8(0x0018)()
	class FText                                   Temp_text_Variable40;                              // 0x03C0(0x0018)()
	class FText                                   Temp_text_Variable41;                              // 0x03D8(0x0018)()
	class FText                                   Temp_text_Variable42;                              // 0x03F0(0x0018)()
	class FText                                   Temp_text_Variable43;                              // 0x0408(0x0018)()
	class FText                                   Temp_text_Variable44;                              // 0x0420(0x0018)()
	class FText                                   Temp_text_Variable45;                              // 0x0438(0x0018)()
	class FText                                   Temp_text_Variable46;                              // 0x0450(0x0018)()
	class FText                                   Temp_text_Variable47;                              // 0x0468(0x0018)()
	class FText                                   Temp_text_Variable48;                              // 0x0480(0x0018)()
	class FText                                   Temp_text_Variable49;                              // 0x0498(0x0018)()
	class FText                                   Temp_text_Variable50;                              // 0x04B0(0x0018)()
	class FText                                   Temp_text_Variable51;                              // 0x04C8(0x0018)()
	class FText                                   Temp_text_Variable52;                              // 0x04E0(0x0018)()
	class FText                                   Temp_text_Variable53;                              // 0x04F8(0x0018)()
	class FText                                   Temp_text_Variable54;                              // 0x0510(0x0018)()
	class FText                                   Temp_text_Variable55;                              // 0x0528(0x0018)()
	class FText                                   Temp_text_Variable56;                              // 0x0540(0x0018)()
	class FText                                   Temp_text_Variable57;                              // 0x0558(0x0018)()
	class FText                                   Temp_text_Variable58;                              // 0x0570(0x0018)()
	class FText                                   Temp_text_Variable59;                              // 0x0588(0x0018)()
	class FText                                   Temp_text_Variable60;                              // 0x05A0(0x0018)()
	class FText                                   Temp_text_Variable61;                              // 0x05B8(0x0018)()
	class FText                                   Temp_text_Variable62;                              // 0x05D0(0x0018)()
	class FText                                   Temp_text_Variable63;                              // 0x05E8(0x0018)()
	class FText                                   Temp_text_Variable64;                              // 0x0600(0x0018)()
	class FText                                   Temp_text_Variable65;                              // 0x0618(0x0018)()
	class FText                                   Temp_text_Variable66;                              // 0x0630(0x0018)()
	class FText                                   Temp_text_Variable67;                              // 0x0648(0x0018)()
	class FText                                   Temp_text_Variable68;                              // 0x0660(0x0018)()
	class FText                                   Temp_text_Variable69;                              // 0x0678(0x0018)()
	class FText                                   Temp_text_Variable70;                              // 0x0690(0x0018)()
	class FText                                   Temp_text_Variable71;                              // 0x06A8(0x0018)()
	class FText                                   Temp_text_Variable72;                              // 0x06C0(0x0018)()
	class FText                                   Temp_text_Variable73;                              // 0x06D8(0x0018)()
	class FText                                   Temp_text_Variable74;                              // 0x06F0(0x0018)()
	class FText                                   Temp_text_Variable75;                              // 0x0708(0x0018)()
	class FText                                   Temp_text_Variable76;                              // 0x0720(0x0018)()
	class FText                                   Temp_text_Variable77;                              // 0x0738(0x0018)()
	class FText                                   Temp_text_Variable78;                              // 0x0750(0x0018)()
	class FText                                   Temp_text_Variable79;                              // 0x0768(0x0018)()
	class FText                                   Temp_text_Variable80;                              // 0x0780(0x0018)()
	class FText                                   Temp_text_Variable81;                              // 0x0798(0x0018)()
	class FText                                   Temp_text_Variable82;                              // 0x07B0(0x0018)()
	class FText                                   Temp_text_Variable83;                              // 0x07C8(0x0018)()
	class FText                                   Temp_text_Variable84;                              // 0x07E0(0x0018)()
	class FText                                   Temp_text_Variable85;                              // 0x07F8(0x0018)()
	EFortItemType                                 Temp_byte_Variable;                                // 0x0810(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_811[0x7];                                      // 0x0811(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable86;                              // 0x0818(0x0018)()
	class FText                                   Temp_text_Variable87;                              // 0x0830(0x0018)()
	class FText                                   Temp_text_Variable88;                              // 0x0848(0x0018)()
	class FText                                   Temp_text_Variable89;                              // 0x0860(0x0018)()
	class FText                                   Temp_text_Variable90;                              // 0x0878(0x0018)()
	class FText                                   Temp_text_Variable91;                              // 0x0890(0x0018)()
	class FText                                   Temp_text_Variable92;                              // 0x08A8(0x0018)()
	class FText                                   Temp_text_Variable93;                              // 0x08C0(0x0018)()
	class FText                                   Temp_text_Variable94;                              // 0x08D8(0x0018)()
	class FText                                   Temp_text_Variable95;                              // 0x08F0(0x0018)()
	class FText                                   Temp_text_Variable96;                              // 0x0908(0x0018)()
	class FText                                   Temp_text_Variable97;                              // 0x0920(0x0018)()
	class FText                                   Temp_text_Variable98;                              // 0x0938(0x0018)()
	class FText                                   Temp_text_Variable99;                              // 0x0950(0x0018)()
	class FText                                   Temp_text_Variable100;                             // 0x0968(0x0018)()
	class FText                                   Temp_text_Variable101;                             // 0x0980(0x0018)()
	class FText                                   Temp_text_Variable102;                             // 0x0998(0x0018)()
	class FText                                   Temp_text_Variable103;                             // 0x09B0(0x0018)()
	class FText                                   Temp_text_Variable104;                             // 0x09C8(0x0018)()
	class FText                                   Temp_text_Variable105;                             // 0x09E0(0x0018)()
	class FText                                   Temp_text_Variable106;                             // 0x09F8(0x0018)()
	class FText                                   Temp_text_Variable107;                             // 0x0A10(0x0018)()
	class FText                                   Temp_text_Variable108;                             // 0x0A28(0x0018)()
	class FText                                   Temp_text_Variable109;                             // 0x0A40(0x0018)()
	class FText                                   Temp_text_Variable110;                             // 0x0A58(0x0018)()
	class FText                                   Temp_text_Variable111;                             // 0x0A70(0x0018)()
	class FText                                   Temp_text_Variable112;                             // 0x0A88(0x0018)()
	class FText                                   Temp_text_Variable113;                             // 0x0AA0(0x0018)()
	class FText                                   Temp_text_Variable114;                             // 0x0AB8(0x0018)()
	class FText                                   Temp_text_Variable115;                             // 0x0AD0(0x0018)()
	class FText                                   Temp_text_Variable116;                             // 0x0AE8(0x0018)()
	class FText                                   Temp_text_Variable117;                             // 0x0B00(0x0018)()
	class FText                                   Temp_text_Variable118;                             // 0x0B18(0x0018)()
	class FText                                   Temp_text_Variable119;                             // 0x0B30(0x0018)()
	class FText                                   Temp_text_Variable120;                             // 0x0B48(0x0018)()
	class FText                                   Temp_text_Variable121;                             // 0x0B60(0x0018)()
	class FText                                   Temp_text_Variable122;                             // 0x0B78(0x0018)()
	class FText                                   Temp_text_Variable123;                             // 0x0B90(0x0018)()
	class FText                                   Temp_text_Variable124;                             // 0x0BA8(0x0018)()
	class FText                                   Temp_text_Variable125;                             // 0x0BC0(0x0018)()
	class FText                                   Temp_text_Variable126;                             // 0x0BD8(0x0018)()
	class FText                                   Temp_text_Variable127;                             // 0x0BF0(0x0018)()
	class FText                                   Temp_text_Variable128;                             // 0x0C08(0x0018)()
	class FText                                   Temp_text_Variable129;                             // 0x0C20(0x0018)()
	class FText                                   Temp_text_Variable130;                             // 0x0C38(0x0018)()
	class FText                                   Temp_text_Variable131;                             // 0x0C50(0x0018)()
	class FText                                   Temp_text_Variable132;                             // 0x0C68(0x0018)()
	class FText                                   Temp_text_Variable133;                             // 0x0C80(0x0018)()
	class FText                                   Temp_text_Variable134;                             // 0x0C98(0x0018)()
	class FText                                   Temp_text_Variable135;                             // 0x0CB0(0x0018)()
	class FText                                   Temp_text_Variable136;                             // 0x0CC8(0x0018)()
	class FText                                   Temp_text_Variable137;                             // 0x0CE0(0x0018)()
	class FText                                   Temp_text_Variable138;                             // 0x0CF8(0x0018)()
	class FText                                   Temp_text_Variable139;                             // 0x0D10(0x0018)()
	class FText                                   Temp_text_Variable140;                             // 0x0D28(0x0018)()
	class FText                                   Temp_text_Variable141;                             // 0x0D40(0x0018)()
	class FText                                   Temp_text_Variable142;                             // 0x0D58(0x0018)()
	class FText                                   Temp_text_Variable143;                             // 0x0D70(0x0018)()
	class FText                                   Temp_text_Variable144;                             // 0x0D88(0x0018)()
	class FText                                   Temp_text_Variable145;                             // 0x0DA0(0x0018)()
	class FText                                   Temp_text_Variable146;                             // 0x0DB8(0x0018)()
	class FText                                   Temp_text_Variable147;                             // 0x0DD0(0x0018)()
	class FText                                   Temp_text_Variable148;                             // 0x0DE8(0x0018)()
	class FText                                   Temp_text_Variable149;                             // 0x0E00(0x0018)()
	class FText                                   Temp_text_Variable150;                             // 0x0E18(0x0018)()
	class FText                                   Temp_text_Variable151;                             // 0x0E30(0x0018)()
	class FText                                   Temp_text_Variable152;                             // 0x0E48(0x0018)()
	class FText                                   Temp_text_Variable153;                             // 0x0E60(0x0018)()
	class FText                                   Temp_text_Variable154;                             // 0x0E78(0x0018)()
	class FText                                   Temp_text_Variable155;                             // 0x0E90(0x0018)()
	class FText                                   Temp_text_Variable156;                             // 0x0EA8(0x0018)()
	class FText                                   Temp_text_Variable157;                             // 0x0EC0(0x0018)()
	class FText                                   Temp_text_Variable158;                             // 0x0ED8(0x0018)()
	class FText                                   Temp_text_Variable159;                             // 0x0EF0(0x0018)()
	class FText                                   Temp_text_Variable160;                             // 0x0F08(0x0018)()
	class FText                                   Temp_text_Variable161;                             // 0x0F20(0x0018)()
	class FText                                   Temp_text_Variable162;                             // 0x0F38(0x0018)()
	class FText                                   Temp_text_Variable163;                             // 0x0F50(0x0018)()
	class FText                                   Temp_text_Variable164;                             // 0x0F68(0x0018)()
	class FText                                   Temp_text_Variable165;                             // 0x0F80(0x0018)()
	class FText                                   Temp_text_Variable166;                             // 0x0F98(0x0018)()
	class FText                                   Temp_text_Variable167;                             // 0x0FB0(0x0018)()
	class FText                                   Temp_text_Variable168;                             // 0x0FC8(0x0018)()
	class FText                                   Temp_text_Variable169;                             // 0x0FE0(0x0018)()
	class FText                                   Temp_text_Variable170;                             // 0x0FF8(0x0018)()
	class FText                                   Temp_text_Variable171;                             // 0x1010(0x0018)()
	class FText                                   Temp_text_Variable172;                             // 0x1028(0x0018)()
	class FText                                   Temp_text_Variable173;                             // 0x1040(0x0018)()
	class FText                                   Temp_text_Variable174;                             // 0x1058(0x0018)()
	class FText                                   Temp_text_Variable175;                             // 0x1070(0x0018)()
	class FText                                   Temp_text_Variable176;                             // 0x1088(0x0018)()
	EFortItemType                                 Temp_byte_Variable1;                               // 0x10A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10A1[0x7];                                     // 0x10A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable177;                             // 0x10A8(0x0018)()
	class FText                                   Temp_text_Variable178;                             // 0x10C0(0x0018)()
	class FText                                   Temp_text_Variable179;                             // 0x10D8(0x0018)()
	class FText                                   Temp_text_Variable180;                             // 0x10F0(0x0018)()
	class FText                                   Temp_text_Variable181;                             // 0x1108(0x0018)()
	class FText                                   Temp_text_Variable182;                             // 0x1120(0x0018)()
	class FText                                   Temp_text_Variable183;                             // 0x1138(0x0018)()
	class FText                                   Temp_text_Variable184;                             // 0x1150(0x0018)()
	class FText                                   Temp_text_Variable185;                             // 0x1168(0x0018)()
	class FText                                   Temp_text_Variable186;                             // 0x1180(0x0018)()
	class FText                                   Temp_text_Variable187;                             // 0x1198(0x0018)()
	class FText                                   Temp_text_Variable188;                             // 0x11B0(0x0018)()
	class FText                                   Temp_text_Variable189;                             // 0x11C8(0x0018)()
	class FText                                   Temp_text_Variable190;                             // 0x11E0(0x0018)()
	class FText                                   Temp_text_Variable191;                             // 0x11F8(0x0018)()
	class FText                                   Temp_text_Variable192;                             // 0x1210(0x0018)()
	class FText                                   Temp_text_Variable193;                             // 0x1228(0x0018)()
	class FText                                   Temp_text_Variable194;                             // 0x1240(0x0018)()
	class FText                                   Temp_text_Variable195;                             // 0x1258(0x0018)()
	class FText                                   Temp_text_Variable196;                             // 0x1270(0x0018)()
	class FText                                   Temp_text_Variable197;                             // 0x1288(0x0018)()
	class FText                                   Temp_text_Variable198;                             // 0x12A0(0x0018)()
	class FText                                   Temp_text_Variable199;                             // 0x12B8(0x0018)()
	class FText                                   Temp_text_Variable200;                             // 0x12D0(0x0018)()
	class FText                                   Temp_text_Variable201;                             // 0x12E8(0x0018)()
	class FText                                   Temp_text_Variable202;                             // 0x1300(0x0018)()
	class FText                                   Temp_text_Variable203;                             // 0x1318(0x0018)()
	class FText                                   Temp_text_Variable204;                             // 0x1330(0x0018)()
	class FText                                   Temp_text_Variable205;                             // 0x1348(0x0018)()
	class FText                                   Temp_text_Variable206;                             // 0x1360(0x0018)()
	class FText                                   Temp_text_Variable207;                             // 0x1378(0x0018)()
	class FText                                   Temp_text_Variable208;                             // 0x1390(0x0018)()
	class FText                                   Temp_text_Variable209;                             // 0x13A8(0x0018)()
	class FText                                   Temp_text_Variable210;                             // 0x13C0(0x0018)()
	class FText                                   Temp_text_Variable211;                             // 0x13D8(0x0018)()
	class FText                                   Temp_text_Variable212;                             // 0x13F0(0x0018)()
	class FText                                   Temp_text_Variable213;                             // 0x1408(0x0018)()
	class FText                                   Temp_text_Variable214;                             // 0x1420(0x0018)()
	class FText                                   Temp_text_Variable215;                             // 0x1438(0x0018)()
	class FText                                   Temp_text_Variable216;                             // 0x1450(0x0018)()
	class FText                                   Temp_text_Variable217;                             // 0x1468(0x0018)()
	class FText                                   Temp_text_Variable218;                             // 0x1480(0x0018)()
	class FText                                   Temp_text_Variable219;                             // 0x1498(0x0018)()
	class FText                                   Temp_text_Variable220;                             // 0x14B0(0x0018)()
	class FText                                   Temp_text_Variable221;                             // 0x14C8(0x0018)()
	class FText                                   Temp_text_Variable222;                             // 0x14E0(0x0018)()
	class FText                                   Temp_text_Variable223;                             // 0x14F8(0x0018)()
	class FText                                   Temp_text_Variable224;                             // 0x1510(0x0018)()
	class FText                                   Temp_text_Variable225;                             // 0x1528(0x0018)()
	class FText                                   Temp_text_Variable226;                             // 0x1540(0x0018)()
	class FText                                   Temp_text_Variable227;                             // 0x1558(0x0018)()
	class FText                                   Temp_text_Variable228;                             // 0x1570(0x0018)()
	class FText                                   Temp_text_Variable229;                             // 0x1588(0x0018)()
	class FText                                   Temp_text_Variable230;                             // 0x15A0(0x0018)()
	class FText                                   Temp_text_Variable231;                             // 0x15B8(0x0018)()
	class FText                                   Temp_text_Variable232;                             // 0x15D0(0x0018)()
	class FText                                   Temp_text_Variable233;                             // 0x15E8(0x0018)()
	class FText                                   Temp_text_Variable234;                             // 0x1600(0x0018)()
	class FText                                   Temp_text_Variable235;                             // 0x1618(0x0018)()
	class FText                                   Temp_text_Variable236;                             // 0x1630(0x0018)()
	class FText                                   Temp_text_Variable237;                             // 0x1648(0x0018)()
	class FText                                   Temp_text_Variable238;                             // 0x1660(0x0018)()
	class FText                                   Temp_text_Variable239;                             // 0x1678(0x0018)()
	class FText                                   Temp_text_Variable240;                             // 0x1690(0x0018)()
	class FText                                   Temp_text_Variable241;                             // 0x16A8(0x0018)()
	class FText                                   Temp_text_Variable242;                             // 0x16C0(0x0018)()
	class FText                                   Temp_text_Variable243;                             // 0x16D8(0x0018)()
	class FText                                   Temp_text_Variable244;                             // 0x16F0(0x0018)()
	class FText                                   Temp_text_Variable245;                             // 0x1708(0x0018)()
	class FText                                   Temp_text_Variable246;                             // 0x1720(0x0018)()
	class FText                                   Temp_text_Variable247;                             // 0x1738(0x0018)()
	class FText                                   Temp_text_Variable248;                             // 0x1750(0x0018)()
	class FText                                   Temp_text_Variable249;                             // 0x1768(0x0018)()
	class FText                                   Temp_text_Variable250;                             // 0x1780(0x0018)()
	class FText                                   Temp_text_Variable251;                             // 0x1798(0x0018)()
	class FText                                   Temp_text_Variable252;                             // 0x17B0(0x0018)()
	class FText                                   Temp_text_Variable253;                             // 0x17C8(0x0018)()
	class FText                                   Temp_text_Variable254;                             // 0x17E0(0x0018)()
	class FText                                   Temp_text_Variable255;                             // 0x17F8(0x0018)()
	class FText                                   Temp_text_Variable256;                             // 0x1810(0x0018)()
	class FText                                   Temp_text_Variable257;                             // 0x1828(0x0018)()
	class FText                                   Temp_text_Variable258;                             // 0x1840(0x0018)()
	class FText                                   Temp_text_Variable259;                             // 0x1858(0x0018)()
	class FText                                   Temp_text_Variable260;                             // 0x1870(0x0018)()
	class FText                                   Temp_text_Variable261;                             // 0x1888(0x0018)()
	class FText                                   Temp_text_Variable262;                             // 0x18A0(0x0018)()
	class FText                                   Temp_text_Variable263;                             // 0x18B8(0x0018)()
	class FText                                   Temp_text_Variable264;                             // 0x18D0(0x0018)()
	class FText                                   Temp_text_Variable265;                             // 0x18E8(0x0018)()
	class FText                                   Temp_text_Variable266;                             // 0x1900(0x0018)()
	class FText                                   Temp_text_Variable267;                             // 0x1918(0x0018)()
	class FText                                   Temp_text_Variable268;                             // 0x1930(0x0018)()
	class FText                                   Temp_text_Variable269;                             // 0x1948(0x0018)()
	EFortItemType                                 Temp_byte_Variable2;                               // 0x1960(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1961[0x7];                                     // 0x1961(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable270;                             // 0x1968(0x0018)()
	EFortItemType                                 CallFunc_GetType_ReturnValue;                      // 0x1980(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1981[0x7];                                     // 0x1981(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x1988(0x0018)()
	class FText                                   K2Node_Select1_Default;                            // 0x19A0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x19B8(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData1;             // 0x19F8(0x0040)(HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UTexture2D>>      K2Node_MakeArray_Array;                            // 0x1A38(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<class FText>                           K2Node_MakeArray_Array1;                           // 0x1A48(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   Temp_text_Variable271;                             // 0x1A58(0x0018)()
	class FText                                   Temp_text_Variable272;                             // 0x1A70(0x0018)()
	class UFortUIManagerWidget_NUI*               CallFunc_GetUIManagerWidget_ReturnValue;           // 0x1A88(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select2_Default;                            // 0x1A90(0x0018)()
	class UUserWidget*                            CallFunc_GetCachedWidget_ReturnValue;              // 0x1AA8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData2;             // 0x1AB0(0x0040)(HasGetValueTypeHash)
	class UModalTutorialOverlay_C*                K2Node_DynamicCast_AsModal_Tutorial_Overlay;       // 0x1AF0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x1AF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1AF9[0x7];                                     // 0x1AF9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array2;                           // 0x1B00(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x1B10(0x0018)()
	TArray<class FText>                           K2Node_MakeArray_Array3;                           // 0x1B28(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_CheckForSideTutorialQuests_RelevantSideQuestFound; // 0x1B38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x1B39(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemInspectScreen_C_HandleShowUpgradeTutorial) == 0x000008, "Wrong alignment on ItemInspectScreen_C_HandleShowUpgradeTutorial");
static_assert(sizeof(ItemInspectScreen_C_HandleShowUpgradeTutorial) == 0x001B40, "Wrong size on ItemInspectScreen_C_HandleShowUpgradeTutorial");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable) == 0x000000, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable1) == 0x000018, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable1' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable2) == 0x000030, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable2' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable3) == 0x000048, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable3' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable4) == 0x000060, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable4' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable5) == 0x000078, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable5' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable6) == 0x000090, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable6' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable7) == 0x0000A8, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable7' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable8) == 0x0000C0, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable8' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable9) == 0x0000D8, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable9' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable10) == 0x0000F0, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable10' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable11) == 0x000108, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable11' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable12) == 0x000120, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable12' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable13) == 0x000138, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable13' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable14) == 0x000150, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable14' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable15) == 0x000168, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable15' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable16) == 0x000180, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable16' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable17) == 0x000198, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable17' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable18) == 0x0001B0, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable18' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable19) == 0x0001C8, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable19' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable20) == 0x0001E0, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable20' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable21) == 0x0001F8, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable21' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable22) == 0x000210, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable22' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable23) == 0x000228, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable23' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable24) == 0x000240, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable24' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable25) == 0x000258, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable25' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable26) == 0x000270, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable26' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable27) == 0x000288, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable27' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable28) == 0x0002A0, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable28' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable29) == 0x0002B8, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable29' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable30) == 0x0002D0, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable30' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable31) == 0x0002E8, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable31' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable32) == 0x000300, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable32' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable33) == 0x000318, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable33' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable34) == 0x000330, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable34' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable35) == 0x000348, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable35' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable36) == 0x000360, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable36' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable37) == 0x000378, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable37' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable38) == 0x000390, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable38' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable39) == 0x0003A8, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable39' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable40) == 0x0003C0, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable40' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable41) == 0x0003D8, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable41' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable42) == 0x0003F0, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable42' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable43) == 0x000408, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable43' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable44) == 0x000420, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable44' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable45) == 0x000438, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable45' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable46) == 0x000450, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable46' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable47) == 0x000468, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable47' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable48) == 0x000480, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable48' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable49) == 0x000498, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable49' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable50) == 0x0004B0, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable50' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable51) == 0x0004C8, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable51' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable52) == 0x0004E0, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable52' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable53) == 0x0004F8, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable53' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable54) == 0x000510, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable54' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable55) == 0x000528, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable55' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable56) == 0x000540, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable56' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable57) == 0x000558, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable57' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable58) == 0x000570, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable58' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable59) == 0x000588, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable59' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable60) == 0x0005A0, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable60' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable61) == 0x0005B8, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable61' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable62) == 0x0005D0, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable62' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable63) == 0x0005E8, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable63' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable64) == 0x000600, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable64' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable65) == 0x000618, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable65' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable66) == 0x000630, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable66' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable67) == 0x000648, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable67' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable68) == 0x000660, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable68' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable69) == 0x000678, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable69' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable70) == 0x000690, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable70' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable71) == 0x0006A8, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable71' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable72) == 0x0006C0, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable72' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable73) == 0x0006D8, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable73' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable74) == 0x0006F0, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable74' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable75) == 0x000708, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable75' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable76) == 0x000720, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable76' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable77) == 0x000738, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable77' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable78) == 0x000750, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable78' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable79) == 0x000768, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable79' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable80) == 0x000780, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable80' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable81) == 0x000798, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable81' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable82) == 0x0007B0, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable82' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable83) == 0x0007C8, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable83' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable84) == 0x0007E0, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable84' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable85) == 0x0007F8, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable85' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_byte_Variable) == 0x000810, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable86) == 0x000818, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable86' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable87) == 0x000830, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable87' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable88) == 0x000848, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable88' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable89) == 0x000860, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable89' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable90) == 0x000878, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable90' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable91) == 0x000890, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable91' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable92) == 0x0008A8, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable92' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable93) == 0x0008C0, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable93' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable94) == 0x0008D8, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable94' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable95) == 0x0008F0, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable95' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable96) == 0x000908, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable96' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable97) == 0x000920, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable97' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable98) == 0x000938, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable98' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable99) == 0x000950, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable99' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable100) == 0x000968, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable100' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable101) == 0x000980, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable101' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable102) == 0x000998, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable102' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable103) == 0x0009B0, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable103' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable104) == 0x0009C8, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable104' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable105) == 0x0009E0, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable105' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable106) == 0x0009F8, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable106' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable107) == 0x000A10, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable107' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable108) == 0x000A28, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable108' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable109) == 0x000A40, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable109' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable110) == 0x000A58, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable110' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable111) == 0x000A70, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable111' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable112) == 0x000A88, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable112' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable113) == 0x000AA0, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable113' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable114) == 0x000AB8, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable114' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable115) == 0x000AD0, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable115' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable116) == 0x000AE8, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable116' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable117) == 0x000B00, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable117' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable118) == 0x000B18, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable118' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable119) == 0x000B30, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable119' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable120) == 0x000B48, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable120' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable121) == 0x000B60, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable121' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable122) == 0x000B78, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable122' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable123) == 0x000B90, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable123' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable124) == 0x000BA8, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable124' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable125) == 0x000BC0, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable125' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable126) == 0x000BD8, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable126' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable127) == 0x000BF0, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable127' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable128) == 0x000C08, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable128' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable129) == 0x000C20, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable129' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable130) == 0x000C38, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable130' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable131) == 0x000C50, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable131' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable132) == 0x000C68, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable132' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable133) == 0x000C80, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable133' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable134) == 0x000C98, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable134' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable135) == 0x000CB0, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable135' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable136) == 0x000CC8, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable136' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable137) == 0x000CE0, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable137' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable138) == 0x000CF8, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable138' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable139) == 0x000D10, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable139' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable140) == 0x000D28, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable140' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable141) == 0x000D40, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable141' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable142) == 0x000D58, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable142' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable143) == 0x000D70, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable143' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable144) == 0x000D88, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable144' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable145) == 0x000DA0, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable145' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable146) == 0x000DB8, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable146' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable147) == 0x000DD0, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable147' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable148) == 0x000DE8, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable148' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable149) == 0x000E00, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable149' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable150) == 0x000E18, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable150' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable151) == 0x000E30, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable151' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable152) == 0x000E48, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable152' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable153) == 0x000E60, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable153' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable154) == 0x000E78, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable154' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable155) == 0x000E90, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable155' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable156) == 0x000EA8, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable156' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable157) == 0x000EC0, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable157' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable158) == 0x000ED8, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable158' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable159) == 0x000EF0, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable159' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable160) == 0x000F08, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable160' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable161) == 0x000F20, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable161' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable162) == 0x000F38, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable162' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable163) == 0x000F50, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable163' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable164) == 0x000F68, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable164' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable165) == 0x000F80, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable165' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable166) == 0x000F98, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable166' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable167) == 0x000FB0, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable167' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable168) == 0x000FC8, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable168' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable169) == 0x000FE0, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable169' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable170) == 0x000FF8, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable170' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable171) == 0x001010, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable171' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable172) == 0x001028, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable172' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable173) == 0x001040, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable173' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable174) == 0x001058, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable174' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable175) == 0x001070, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable175' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable176) == 0x001088, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable176' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_byte_Variable1) == 0x0010A0, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable177) == 0x0010A8, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable177' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable178) == 0x0010C0, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable178' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable179) == 0x0010D8, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable179' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable180) == 0x0010F0, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable180' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable181) == 0x001108, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable181' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable182) == 0x001120, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable182' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable183) == 0x001138, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable183' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable184) == 0x001150, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable184' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable185) == 0x001168, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable185' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable186) == 0x001180, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable186' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable187) == 0x001198, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable187' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable188) == 0x0011B0, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable188' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable189) == 0x0011C8, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable189' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable190) == 0x0011E0, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable190' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable191) == 0x0011F8, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable191' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable192) == 0x001210, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable192' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable193) == 0x001228, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable193' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable194) == 0x001240, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable194' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable195) == 0x001258, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable195' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable196) == 0x001270, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable196' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable197) == 0x001288, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable197' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable198) == 0x0012A0, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable198' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable199) == 0x0012B8, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable199' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable200) == 0x0012D0, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable200' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable201) == 0x0012E8, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable201' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable202) == 0x001300, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable202' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable203) == 0x001318, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable203' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable204) == 0x001330, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable204' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable205) == 0x001348, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable205' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable206) == 0x001360, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable206' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable207) == 0x001378, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable207' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable208) == 0x001390, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable208' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable209) == 0x0013A8, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable209' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable210) == 0x0013C0, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable210' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable211) == 0x0013D8, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable211' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable212) == 0x0013F0, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable212' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable213) == 0x001408, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable213' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable214) == 0x001420, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable214' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable215) == 0x001438, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable215' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable216) == 0x001450, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable216' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable217) == 0x001468, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable217' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable218) == 0x001480, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable218' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable219) == 0x001498, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable219' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable220) == 0x0014B0, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable220' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable221) == 0x0014C8, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable221' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable222) == 0x0014E0, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable222' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable223) == 0x0014F8, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable223' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable224) == 0x001510, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable224' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable225) == 0x001528, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable225' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable226) == 0x001540, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable226' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable227) == 0x001558, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable227' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable228) == 0x001570, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable228' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable229) == 0x001588, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable229' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable230) == 0x0015A0, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable230' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable231) == 0x0015B8, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable231' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable232) == 0x0015D0, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable232' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable233) == 0x0015E8, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable233' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable234) == 0x001600, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable234' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable235) == 0x001618, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable235' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable236) == 0x001630, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable236' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable237) == 0x001648, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable237' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable238) == 0x001660, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable238' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable239) == 0x001678, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable239' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable240) == 0x001690, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable240' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable241) == 0x0016A8, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable241' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable242) == 0x0016C0, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable242' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable243) == 0x0016D8, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable243' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable244) == 0x0016F0, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable244' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable245) == 0x001708, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable245' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable246) == 0x001720, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable246' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable247) == 0x001738, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable247' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable248) == 0x001750, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable248' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable249) == 0x001768, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable249' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable250) == 0x001780, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable250' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable251) == 0x001798, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable251' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable252) == 0x0017B0, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable252' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable253) == 0x0017C8, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable253' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable254) == 0x0017E0, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable254' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable255) == 0x0017F8, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable255' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable256) == 0x001810, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable256' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable257) == 0x001828, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable257' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable258) == 0x001840, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable258' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable259) == 0x001858, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable259' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable260) == 0x001870, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable260' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable261) == 0x001888, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable261' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable262) == 0x0018A0, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable262' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable263) == 0x0018B8, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable263' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable264) == 0x0018D0, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable264' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable265) == 0x0018E8, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable265' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable266) == 0x001900, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable266' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable267) == 0x001918, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable267' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable268) == 0x001930, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable268' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable269) == 0x001948, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable269' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_byte_Variable2) == 0x001960, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable270) == 0x001968, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable270' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, CallFunc_GetType_ReturnValue) == 0x001980, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::CallFunc_GetType_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, K2Node_Select_Default) == 0x001988, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, K2Node_Select1_Default) == 0x0019A0, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, K2Node_MakeStruct_FormatArgumentData) == 0x0019B8, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, K2Node_MakeStruct_FormatArgumentData1) == 0x0019F8, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::K2Node_MakeStruct_FormatArgumentData1' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, K2Node_MakeArray_Array) == 0x001A38, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, K2Node_MakeArray_Array1) == 0x001A48, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::K2Node_MakeArray_Array1' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable271) == 0x001A58, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable271' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, Temp_text_Variable272) == 0x001A70, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::Temp_text_Variable272' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, CallFunc_GetUIManagerWidget_ReturnValue) == 0x001A88, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::CallFunc_GetUIManagerWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, K2Node_Select2_Default) == 0x001A90, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, CallFunc_GetCachedWidget_ReturnValue) == 0x001AA8, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::CallFunc_GetCachedWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, K2Node_MakeStruct_FormatArgumentData2) == 0x001AB0, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::K2Node_MakeStruct_FormatArgumentData2' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, K2Node_DynamicCast_AsModal_Tutorial_Overlay) == 0x001AF0, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::K2Node_DynamicCast_AsModal_Tutorial_Overlay' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, K2Node_DynamicCast_bSuccess) == 0x001AF8, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, K2Node_MakeArray_Array2) == 0x001B00, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::K2Node_MakeArray_Array2' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, CallFunc_Format_ReturnValue) == 0x001B10, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, K2Node_MakeArray_Array3) == 0x001B28, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::K2Node_MakeArray_Array3' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, CallFunc_CheckForSideTutorialQuests_RelevantSideQuestFound) == 0x001B38, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::CallFunc_CheckForSideTutorialQuests_RelevantSideQuestFound' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleShowUpgradeTutorial, CallFunc_IsValid_ReturnValue) == 0x001B39, "Member 'ItemInspectScreen_C_HandleShowUpgradeTutorial::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.HandleRefundPopup
// 0x0001 (0x0001 - 0x0000)
struct ItemInspectScreen_C_HandleRefundPopup final
{
public:
	bool                                          bPassThrough;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemInspectScreen_C_HandleRefundPopup) == 0x000001, "Wrong alignment on ItemInspectScreen_C_HandleRefundPopup");
static_assert(sizeof(ItemInspectScreen_C_HandleRefundPopup) == 0x000001, "Wrong size on ItemInspectScreen_C_HandleRefundPopup");
static_assert(offsetof(ItemInspectScreen_C_HandleRefundPopup, bPassThrough) == 0x000000, "Member 'ItemInspectScreen_C_HandleRefundPopup::bPassThrough' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.CreateRefundPopupMenu
// 0x0020 (0x0020 - 0x0000)
struct ItemInspectScreen_C_CreateRefundPopupMenu final
{
public:
	class UFortUIManagerWidget_NUI*               CallFunc_GetUIManagerWidget_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetCachedWidget_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UItemInspectRefundPopupMenu_C*          K2Node_DynamicCast_AsItem_Inspect_Refund_Popup_Menu; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemInspectScreen_C_CreateRefundPopupMenu) == 0x000008, "Wrong alignment on ItemInspectScreen_C_CreateRefundPopupMenu");
static_assert(sizeof(ItemInspectScreen_C_CreateRefundPopupMenu) == 0x000020, "Wrong size on ItemInspectScreen_C_CreateRefundPopupMenu");
static_assert(offsetof(ItemInspectScreen_C_CreateRefundPopupMenu, CallFunc_GetUIManagerWidget_ReturnValue) == 0x000000, "Member 'ItemInspectScreen_C_CreateRefundPopupMenu::CallFunc_GetUIManagerWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_CreateRefundPopupMenu, CallFunc_GetCachedWidget_ReturnValue) == 0x000008, "Member 'ItemInspectScreen_C_CreateRefundPopupMenu::CallFunc_GetCachedWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_CreateRefundPopupMenu, K2Node_DynamicCast_AsItem_Inspect_Refund_Popup_Menu) == 0x000010, "Member 'ItemInspectScreen_C_CreateRefundPopupMenu::K2Node_DynamicCast_AsItem_Inspect_Refund_Popup_Menu' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_CreateRefundPopupMenu, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'ItemInspectScreen_C_CreateRefundPopupMenu::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.ShowRefundHelpIfNecessary
// 0x0030 (0x0030 - 0x0000)
struct ItemInspectScreen_C_ShowRefundHelpIfNecessary final
{
public:
	class UFortRuntimeOptions*                    CallFunc_GetRuntimeOptions_ReturnValue;            // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAccountItem*                       K2Node_DynamicCast_AsFort_Account_Item;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortGlobalUIContext*                   CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRefundable_ReturnValue;                 // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetHideStwItemRefundHelp_ReturnValue;     // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActivated_ReturnValue;                  // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue1;                 // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue3;                  // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemInspectScreen_C_ShowRefundHelpIfNecessary) == 0x000008, "Wrong alignment on ItemInspectScreen_C_ShowRefundHelpIfNecessary");
static_assert(sizeof(ItemInspectScreen_C_ShowRefundHelpIfNecessary) == 0x000030, "Wrong size on ItemInspectScreen_C_ShowRefundHelpIfNecessary");
static_assert(offsetof(ItemInspectScreen_C_ShowRefundHelpIfNecessary, CallFunc_GetRuntimeOptions_ReturnValue) == 0x000000, "Member 'ItemInspectScreen_C_ShowRefundHelpIfNecessary::CallFunc_GetRuntimeOptions_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ShowRefundHelpIfNecessary, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'ItemInspectScreen_C_ShowRefundHelpIfNecessary::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ShowRefundHelpIfNecessary, K2Node_DynamicCast_AsFort_Account_Item) == 0x000010, "Member 'ItemInspectScreen_C_ShowRefundHelpIfNecessary::K2Node_DynamicCast_AsFort_Account_Item' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ShowRefundHelpIfNecessary, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'ItemInspectScreen_C_ShowRefundHelpIfNecessary::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ShowRefundHelpIfNecessary, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000020, "Member 'ItemInspectScreen_C_ShowRefundHelpIfNecessary::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ShowRefundHelpIfNecessary, CallFunc_IsRefundable_ReturnValue) == 0x000028, "Member 'ItemInspectScreen_C_ShowRefundHelpIfNecessary::CallFunc_IsRefundable_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ShowRefundHelpIfNecessary, CallFunc_GetHideStwItemRefundHelp_ReturnValue) == 0x000029, "Member 'ItemInspectScreen_C_ShowRefundHelpIfNecessary::CallFunc_GetHideStwItemRefundHelp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ShowRefundHelpIfNecessary, CallFunc_IsActivated_ReturnValue) == 0x00002A, "Member 'ItemInspectScreen_C_ShowRefundHelpIfNecessary::CallFunc_IsActivated_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ShowRefundHelpIfNecessary, CallFunc_Not_PreBool_ReturnValue1) == 0x00002B, "Member 'ItemInspectScreen_C_ShowRefundHelpIfNecessary::CallFunc_Not_PreBool_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ShowRefundHelpIfNecessary, CallFunc_BooleanAND_ReturnValue) == 0x00002C, "Member 'ItemInspectScreen_C_ShowRefundHelpIfNecessary::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ShowRefundHelpIfNecessary, CallFunc_BooleanAND_ReturnValue1) == 0x00002D, "Member 'ItemInspectScreen_C_ShowRefundHelpIfNecessary::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ShowRefundHelpIfNecessary, CallFunc_BooleanAND_ReturnValue2) == 0x00002E, "Member 'ItemInspectScreen_C_ShowRefundHelpIfNecessary::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ShowRefundHelpIfNecessary, CallFunc_BooleanAND_ReturnValue3) == 0x00002F, "Member 'ItemInspectScreen_C_ShowRefundHelpIfNecessary::CallFunc_BooleanAND_ReturnValue3' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.GetRefundPopupInputActionState
// 0x0020 (0x0020 - 0x0000)
struct ItemInspectScreen_C_GetRefundPopupInputActionState final
{
public:
	EInputActionState                             State;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EInputActionState                             Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputActionState                             Temp_byte_Variable1;                               // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortRuntimeOptions*                    CallFunc_GetRuntimeOptions_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortAccountItem*                       K2Node_DynamicCast_AsFort_Account_Item;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsRefundable_ReturnValue;                 // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EInputActionState                             K2Node_Select_Default;                             // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemInspectScreen_C_GetRefundPopupInputActionState) == 0x000008, "Wrong alignment on ItemInspectScreen_C_GetRefundPopupInputActionState");
static_assert(sizeof(ItemInspectScreen_C_GetRefundPopupInputActionState) == 0x000020, "Wrong size on ItemInspectScreen_C_GetRefundPopupInputActionState");
static_assert(offsetof(ItemInspectScreen_C_GetRefundPopupInputActionState, State) == 0x000000, "Member 'ItemInspectScreen_C_GetRefundPopupInputActionState::State' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetRefundPopupInputActionState, Temp_bool_Variable) == 0x000001, "Member 'ItemInspectScreen_C_GetRefundPopupInputActionState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetRefundPopupInputActionState, Temp_byte_Variable) == 0x000002, "Member 'ItemInspectScreen_C_GetRefundPopupInputActionState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetRefundPopupInputActionState, Temp_byte_Variable1) == 0x000003, "Member 'ItemInspectScreen_C_GetRefundPopupInputActionState::Temp_byte_Variable1' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetRefundPopupInputActionState, CallFunc_GetRuntimeOptions_ReturnValue) == 0x000008, "Member 'ItemInspectScreen_C_GetRefundPopupInputActionState::CallFunc_GetRuntimeOptions_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetRefundPopupInputActionState, K2Node_DynamicCast_AsFort_Account_Item) == 0x000010, "Member 'ItemInspectScreen_C_GetRefundPopupInputActionState::K2Node_DynamicCast_AsFort_Account_Item' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetRefundPopupInputActionState, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'ItemInspectScreen_C_GetRefundPopupInputActionState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetRefundPopupInputActionState, CallFunc_IsRefundable_ReturnValue) == 0x000019, "Member 'ItemInspectScreen_C_GetRefundPopupInputActionState::CallFunc_IsRefundable_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetRefundPopupInputActionState, CallFunc_BooleanAND_ReturnValue) == 0x00001A, "Member 'ItemInspectScreen_C_GetRefundPopupInputActionState::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetRefundPopupInputActionState, K2Node_Select_Default) == 0x00001B, "Member 'ItemInspectScreen_C_GetRefundPopupInputActionState::K2Node_Select_Default' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.ShowRefundConfirmationModalWidget
// 0x0040 (0x0040 - 0x0000)
struct ItemInspectScreen_C_ShowRefundConfirmationModalWidget final
{
public:
	class UFortAccountItem*                       CallFunc_GetRefundResultItem_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortAccountItem*                       K2Node_DynamicCast_AsFort_Account_Item;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortUIManagerWidget_NUI*               CallFunc_GetUIManagerWidget_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRefundable_ReturnValue;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetCachedWidget_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UItemInspectRefundConfirmationModalWidget_C* K2Node_DynamicCast_AsItem_Inspect_Refund_Confirmation_Modal_Widget; // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemInspectScreen_C_ShowRefundConfirmationModalWidget) == 0x000008, "Wrong alignment on ItemInspectScreen_C_ShowRefundConfirmationModalWidget");
static_assert(sizeof(ItemInspectScreen_C_ShowRefundConfirmationModalWidget) == 0x000040, "Wrong size on ItemInspectScreen_C_ShowRefundConfirmationModalWidget");
static_assert(offsetof(ItemInspectScreen_C_ShowRefundConfirmationModalWidget, CallFunc_GetRefundResultItem_ReturnValue) == 0x000000, "Member 'ItemInspectScreen_C_ShowRefundConfirmationModalWidget::CallFunc_GetRefundResultItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ShowRefundConfirmationModalWidget, K2Node_DynamicCast_AsFort_Account_Item) == 0x000008, "Member 'ItemInspectScreen_C_ShowRefundConfirmationModalWidget::K2Node_DynamicCast_AsFort_Account_Item' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ShowRefundConfirmationModalWidget, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'ItemInspectScreen_C_ShowRefundConfirmationModalWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ShowRefundConfirmationModalWidget, CallFunc_GetUIManagerWidget_ReturnValue) == 0x000018, "Member 'ItemInspectScreen_C_ShowRefundConfirmationModalWidget::CallFunc_GetUIManagerWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ShowRefundConfirmationModalWidget, CallFunc_IsRefundable_ReturnValue) == 0x000020, "Member 'ItemInspectScreen_C_ShowRefundConfirmationModalWidget::CallFunc_IsRefundable_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ShowRefundConfirmationModalWidget, CallFunc_GetCachedWidget_ReturnValue) == 0x000028, "Member 'ItemInspectScreen_C_ShowRefundConfirmationModalWidget::CallFunc_GetCachedWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ShowRefundConfirmationModalWidget, K2Node_DynamicCast_AsItem_Inspect_Refund_Confirmation_Modal_Widget) == 0x000030, "Member 'ItemInspectScreen_C_ShowRefundConfirmationModalWidget::K2Node_DynamicCast_AsItem_Inspect_Refund_Confirmation_Modal_Widget' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ShowRefundConfirmationModalWidget, K2Node_DynamicCast_bSuccess1) == 0x000038, "Member 'ItemInspectScreen_C_ShowRefundConfirmationModalWidget::K2Node_DynamicCast_bSuccess1' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.ShouldShowRefundMessage
// 0x0068 (0x0068 - 0x0000)
struct ItemInspectScreen_C_ShouldShowRefundMessage final
{
public:
	bool                                          Param_ShouldShowRefundMessage;                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   RefundDescriptionText;                             // 0x0008(0x0018)(Parm, OutParm)
	class FText                                   RefundDescription;                                 // 0x0020(0x0018)(Edit, BlueprintVisible)
	class FText                                   CallFunc_GetRefundDescriptionText_ReturnValue;     // 0x0038(0x0018)()
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAccountItem*                       K2Node_DynamicCast_AsFort_Account_Item;            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsRefundable_ReturnValue;                 // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemInspectScreen_C_ShouldShowRefundMessage) == 0x000008, "Wrong alignment on ItemInspectScreen_C_ShouldShowRefundMessage");
static_assert(sizeof(ItemInspectScreen_C_ShouldShowRefundMessage) == 0x000068, "Wrong size on ItemInspectScreen_C_ShouldShowRefundMessage");
static_assert(offsetof(ItemInspectScreen_C_ShouldShowRefundMessage, Param_ShouldShowRefundMessage) == 0x000000, "Member 'ItemInspectScreen_C_ShouldShowRefundMessage::Param_ShouldShowRefundMessage' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ShouldShowRefundMessage, RefundDescriptionText) == 0x000008, "Member 'ItemInspectScreen_C_ShouldShowRefundMessage::RefundDescriptionText' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ShouldShowRefundMessage, RefundDescription) == 0x000020, "Member 'ItemInspectScreen_C_ShouldShowRefundMessage::RefundDescription' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ShouldShowRefundMessage, CallFunc_GetRefundDescriptionText_ReturnValue) == 0x000038, "Member 'ItemInspectScreen_C_ShouldShowRefundMessage::CallFunc_GetRefundDescriptionText_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ShouldShowRefundMessage, CallFunc_TextIsEmpty_ReturnValue) == 0x000050, "Member 'ItemInspectScreen_C_ShouldShowRefundMessage::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ShouldShowRefundMessage, K2Node_DynamicCast_AsFort_Account_Item) == 0x000058, "Member 'ItemInspectScreen_C_ShouldShowRefundMessage::K2Node_DynamicCast_AsFort_Account_Item' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ShouldShowRefundMessage, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'ItemInspectScreen_C_ShouldShowRefundMessage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ShouldShowRefundMessage, CallFunc_IsRefundable_ReturnValue) == 0x000061, "Member 'ItemInspectScreen_C_ShouldShowRefundMessage::CallFunc_IsRefundable_ReturnValue' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.GetRefundHelpActions
// 0x01D0 (0x01D0 - 0x0000)
struct ItemInspectScreen_C_GetRefundHelpActions final
{
public:
	TArray<struct FConfirmationDialogAction>      ConfirmActions;                                    // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor)
	class FName                                   DeclineAction;                                     // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FConfirmationDialogAction>      ConfirmActionList;                                 // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	class UFortGlobalUIContext*                   CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FConfirmationDialogAction              K2Node_MakeStruct_ConfirmationDialogAction;        // 0x0030(0x00C8)()
	bool                                          CallFunc_GetHideStwItemRefundHelp_ReturnValue;     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FConfirmationDialogAction              K2Node_MakeStruct_ConfirmationDialogAction1;       // 0x0100(0x00C8)()
	int32                                         CallFunc_Array_Add_ReturnValue1;                   // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemInspectScreen_C_GetRefundHelpActions) == 0x000008, "Wrong alignment on ItemInspectScreen_C_GetRefundHelpActions");
static_assert(sizeof(ItemInspectScreen_C_GetRefundHelpActions) == 0x0001D0, "Wrong size on ItemInspectScreen_C_GetRefundHelpActions");
static_assert(offsetof(ItemInspectScreen_C_GetRefundHelpActions, ConfirmActions) == 0x000000, "Member 'ItemInspectScreen_C_GetRefundHelpActions::ConfirmActions' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetRefundHelpActions, DeclineAction) == 0x000010, "Member 'ItemInspectScreen_C_GetRefundHelpActions::DeclineAction' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetRefundHelpActions, ConfirmActionList) == 0x000018, "Member 'ItemInspectScreen_C_GetRefundHelpActions::ConfirmActionList' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetRefundHelpActions, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000028, "Member 'ItemInspectScreen_C_GetRefundHelpActions::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetRefundHelpActions, K2Node_MakeStruct_ConfirmationDialogAction) == 0x000030, "Member 'ItemInspectScreen_C_GetRefundHelpActions::K2Node_MakeStruct_ConfirmationDialogAction' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetRefundHelpActions, CallFunc_GetHideStwItemRefundHelp_ReturnValue) == 0x0000F8, "Member 'ItemInspectScreen_C_GetRefundHelpActions::CallFunc_GetHideStwItemRefundHelp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetRefundHelpActions, CallFunc_Array_Add_ReturnValue) == 0x0000FC, "Member 'ItemInspectScreen_C_GetRefundHelpActions::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetRefundHelpActions, K2Node_MakeStruct_ConfirmationDialogAction1) == 0x000100, "Member 'ItemInspectScreen_C_GetRefundHelpActions::K2Node_MakeStruct_ConfirmationDialogAction1' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetRefundHelpActions, CallFunc_Array_Add_ReturnValue1) == 0x0001C8, "Member 'ItemInspectScreen_C_GetRefundHelpActions::CallFunc_Array_Add_ReturnValue1' has a wrong offset!");

}

