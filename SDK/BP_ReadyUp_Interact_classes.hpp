#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ReadyUp_Interact

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ReadyUp_Interact.BP_ReadyUp_Interact_C
// 0x00A0 (0x0CD0 - 0x0C30)
class ABP_ReadyUp_Interact_C final : public ABuildingProp
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0C30(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class FText                                   InteractText;                                      // 0x0C38(0x0018)(Edit, BlueprintVisible, Net, DisableEditOnInstance)
	bool                                          CanInteract;                                       // 0x0C50(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_C51[0x7];                                      // 0x0C51(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   MissionControlWidgetRef;                           // 0x0C58(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UClass*                                 MissionControlWidget;                              // 0x0C80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerController*                  PlayerController;                                  // 0x0C88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerController*                  PlayerWhoOpenedMissionControl;                     // 0x0C90(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortWorldItemDefinition*               ItemToDeposit;                                     // 0x0C98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BluGloMissionActivationQty;                        // 0x0CA0(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CA4[0x4];                                      // 0x0CA4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortObjectiveBase*                     ReadyUpObjectiveRef;                               // 0x0CA8(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  MissionGuid;                                       // 0x0CB0(0x0010)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DifficultyVoteInProgress;                          // 0x0CC0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CC1[0x3];                                      // 0x0CC1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         BluGloDifficulytActivationQty;                     // 0x0CC4(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ActivateVoteInProgress;                            // 0x0CC8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ShouldDisableDifficultyVoting;                     // 0x0CC9(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsFightTheStorm;                                   // 0x0CCA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Supported;                                         // 0x0CCB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          BluGloTaken;                                       // 0x0CCC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_ReadyUp_Interact(int32 EntryPoint);
	void HandleMissionEvent_ActivatePrimary(const struct FGuid& InMissionGuid, const struct FGameplayTagContainer& ObjectiveHandle, class UFortMissionEventParams* Params_0, bool DO_NOT_USE_THIS_OR_VARIABLES_BELOW, class UObject* EventFocus, const class UDataAsset* EventContent, class AActor* EventInstigator, int32 GenericInt, float GenericFloat, const class FText& GenericText, const struct FGameplayTagContainer& GameplayTags, const struct FFortMissionEvent& MissionEvent);
	void HandleMissionEvent_UnSupported(const struct FGuid& InMissionGuid, const struct FGameplayTagContainer& ObjectiveHandle, class UFortMissionEventParams* Params_0, bool DO_NOT_USE_THIS_OR_VARIABLES_BELOW, class UObject* EventFocus, const class UDataAsset* EventContent, class AActor* EventInstigator, int32 GenericInt, float GenericFloat, const class FText& GenericText, const struct FGameplayTagContainer& GameplayTags, const struct FFortMissionEvent& MissionEvent);
	void HandleMissionEvent_Supported(const struct FGuid& InMissionGuid, const struct FGameplayTagContainer& ObjectiveHandle, class UFortMissionEventParams* Params_0, bool DO_NOT_USE_THIS_OR_VARIABLES_BELOW, class UObject* EventFocus, const class UDataAsset* EventContent, class AActor* EventInstigator, int32 GenericInt, float GenericFloat, const class FText& GenericText, const struct FGameplayTagContainer& GameplayTags, const struct FFortMissionEvent& MissionEvent);
	void AtlasUnsupported();
	void DisableDifficultyVoting();
	void VoteCalled(EFortVoteType VoteType, EFortVoteStatus VoteStatus, int32 VoteResult, const TArray<struct FVoter>& Voters);
	void BlueprintOnInteract(const class AFortPawn* InteractingPawn);
	void OpenMissionControl();
	void ReceiveBeginPlay();
	void OnLoaded_EF452E634A72368CE34CF0A4B53E9FCE(class UClass* Loaded);
	void OnAllClientsReady_1ED02ED748A4140AEF73B29EC94AD234();
	void OnCanceled_1ED02ED748A4140AEF73B29EC94AD234();
	void OnAllClientsReady_1ED02ED748A4140AEF73B29E96DDE83A();
	void OnCanceled_1ED02ED748A4140AEF73B29E96DDE83A();
	void UserConstructionScript();
	bool ShouldDie(float Damage, class AController* EventInstigator, class AActor* DamageCauser);
	void OnRep_CanInteract();
	void ReturnBluGloToPlayer(TScriptInterface<class IFortInventoryOwnerInterface> InventoryOwner, int32 NumberBGtoReturn);
	void TakeBluGloFromPlayer(class AFortPlayerController* Param_PlayerController, int32 NumberBGtoTake);

	bool BlueprintCanInteract(const class AFortPawn* InteractingPawn) const;
	class FText BlueprintGetInteractionString(const class AFortPawn* InteractingPawn) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ReadyUp_Interact_C">();
	}
	static class ABP_ReadyUp_Interact_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ReadyUp_Interact_C>();
	}
};
static_assert(alignof(ABP_ReadyUp_Interact_C) == 0x000008, "Wrong alignment on ABP_ReadyUp_Interact_C");
static_assert(sizeof(ABP_ReadyUp_Interact_C) == 0x000CD0, "Wrong size on ABP_ReadyUp_Interact_C");
static_assert(offsetof(ABP_ReadyUp_Interact_C, UberGraphFrame) == 0x000C30, "Member 'ABP_ReadyUp_Interact_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ReadyUp_Interact_C, InteractText) == 0x000C38, "Member 'ABP_ReadyUp_Interact_C::InteractText' has a wrong offset!");
static_assert(offsetof(ABP_ReadyUp_Interact_C, CanInteract) == 0x000C50, "Member 'ABP_ReadyUp_Interact_C::CanInteract' has a wrong offset!");
static_assert(offsetof(ABP_ReadyUp_Interact_C, MissionControlWidgetRef) == 0x000C58, "Member 'ABP_ReadyUp_Interact_C::MissionControlWidgetRef' has a wrong offset!");
static_assert(offsetof(ABP_ReadyUp_Interact_C, MissionControlWidget) == 0x000C80, "Member 'ABP_ReadyUp_Interact_C::MissionControlWidget' has a wrong offset!");
static_assert(offsetof(ABP_ReadyUp_Interact_C, PlayerController) == 0x000C88, "Member 'ABP_ReadyUp_Interact_C::PlayerController' has a wrong offset!");
static_assert(offsetof(ABP_ReadyUp_Interact_C, PlayerWhoOpenedMissionControl) == 0x000C90, "Member 'ABP_ReadyUp_Interact_C::PlayerWhoOpenedMissionControl' has a wrong offset!");
static_assert(offsetof(ABP_ReadyUp_Interact_C, ItemToDeposit) == 0x000C98, "Member 'ABP_ReadyUp_Interact_C::ItemToDeposit' has a wrong offset!");
static_assert(offsetof(ABP_ReadyUp_Interact_C, BluGloMissionActivationQty) == 0x000CA0, "Member 'ABP_ReadyUp_Interact_C::BluGloMissionActivationQty' has a wrong offset!");
static_assert(offsetof(ABP_ReadyUp_Interact_C, ReadyUpObjectiveRef) == 0x000CA8, "Member 'ABP_ReadyUp_Interact_C::ReadyUpObjectiveRef' has a wrong offset!");
static_assert(offsetof(ABP_ReadyUp_Interact_C, MissionGuid) == 0x000CB0, "Member 'ABP_ReadyUp_Interact_C::MissionGuid' has a wrong offset!");
static_assert(offsetof(ABP_ReadyUp_Interact_C, DifficultyVoteInProgress) == 0x000CC0, "Member 'ABP_ReadyUp_Interact_C::DifficultyVoteInProgress' has a wrong offset!");
static_assert(offsetof(ABP_ReadyUp_Interact_C, BluGloDifficulytActivationQty) == 0x000CC4, "Member 'ABP_ReadyUp_Interact_C::BluGloDifficulytActivationQty' has a wrong offset!");
static_assert(offsetof(ABP_ReadyUp_Interact_C, ActivateVoteInProgress) == 0x000CC8, "Member 'ABP_ReadyUp_Interact_C::ActivateVoteInProgress' has a wrong offset!");
static_assert(offsetof(ABP_ReadyUp_Interact_C, ShouldDisableDifficultyVoting) == 0x000CC9, "Member 'ABP_ReadyUp_Interact_C::ShouldDisableDifficultyVoting' has a wrong offset!");
static_assert(offsetof(ABP_ReadyUp_Interact_C, IsFightTheStorm) == 0x000CCA, "Member 'ABP_ReadyUp_Interact_C::IsFightTheStorm' has a wrong offset!");
static_assert(offsetof(ABP_ReadyUp_Interact_C, Supported) == 0x000CCB, "Member 'ABP_ReadyUp_Interact_C::Supported' has a wrong offset!");
static_assert(offsetof(ABP_ReadyUp_Interact_C, BluGloTaken) == 0x000CCC, "Member 'ABP_ReadyUp_Interact_C::BluGloTaken' has a wrong offset!");

}

