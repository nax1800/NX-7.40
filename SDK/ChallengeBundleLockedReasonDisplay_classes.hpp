#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ChallengeBundleLockedReasonDisplay

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ChallengeBundleLockedReasonDisplay.ChallengeBundleLockedReasonDisplay_C
// 0x0048 (0x0278 - 0x0230)
class UChallengeBundleLockedReasonDisplay_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0230(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCommonTextBlock*                       LockedText;                                        // 0x0238(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TScriptInterface<class IFortTimespanDataSource> TimeSpanSource;                                    // 0x0240(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FFortChallengeBundleInfoLockedReason   ReasonForLock;                                     // 0x0250(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_ChallengeBundleLockedReasonDisplay(int32 EntryPoint);
	void Construct();
	void SetLockReason(const struct FFortChallengeBundleInfoLockedReason& InValue);
	void UpdateLockReasonDisplay();
	void SetTimespanSource(TScriptInterface<class IFortTimespanDataSource> Value);
	void HandleTick(class UObject* Source);

	void GetTimeSpanValue(struct FTimespan* Result) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ChallengeBundleLockedReasonDisplay_C">();
	}
	static class UChallengeBundleLockedReasonDisplay_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UChallengeBundleLockedReasonDisplay_C>();
	}
};
static_assert(alignof(UChallengeBundleLockedReasonDisplay_C) == 0x000008, "Wrong alignment on UChallengeBundleLockedReasonDisplay_C");
static_assert(sizeof(UChallengeBundleLockedReasonDisplay_C) == 0x000278, "Wrong size on UChallengeBundleLockedReasonDisplay_C");
static_assert(offsetof(UChallengeBundleLockedReasonDisplay_C, UberGraphFrame) == 0x000230, "Member 'UChallengeBundleLockedReasonDisplay_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UChallengeBundleLockedReasonDisplay_C, LockedText) == 0x000238, "Member 'UChallengeBundleLockedReasonDisplay_C::LockedText' has a wrong offset!");
static_assert(offsetof(UChallengeBundleLockedReasonDisplay_C, TimeSpanSource) == 0x000240, "Member 'UChallengeBundleLockedReasonDisplay_C::TimeSpanSource' has a wrong offset!");
static_assert(offsetof(UChallengeBundleLockedReasonDisplay_C, ReasonForLock) == 0x000250, "Member 'UChallengeBundleLockedReasonDisplay_C::ReasonForLock' has a wrong offset!");

}

